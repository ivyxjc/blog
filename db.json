{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/maupassant/source/css/font-awesome.min.css","path":"css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/maupassant/source/css/grids-responsive-min.css","path":"css/grids-responsive-min.css","modified":1,"renderable":1},{"_id":"themes/maupassant/source/css/jquery.css","path":"css/jquery.css","modified":1,"renderable":1},{"_id":"themes/maupassant/source/css/jquery.fancybox.css","path":"css/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/maupassant/source/css/normalize.css","path":"css/normalize.css","modified":1,"renderable":1},{"_id":"themes/maupassant/source/css/pure-min.css","path":"css/pure-min.css","modified":1,"renderable":1},{"_id":"themes/maupassant/source/css/style.css","path":"css/style.css","modified":1,"renderable":1},{"_id":"themes/maupassant/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":1,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/codeblock-resizer.js","path":"js/codeblock-resizer.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/fancybox.js","path":"js/fancybox.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/search.js","path":"js/search.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/share.js","path":"js/share.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/smartresize.js","path":"js/smartresize.js","modified":1,"renderable":1},{"_id":"themes/maupassant/source/js/totop.js","path":"js/totop.js","modified":1,"renderable":1},{"_id":"source/favicon.ico","path":"favicon.ico","modified":1,"renderable":0}],"Cache":[{"_id":"themes/maupassant/LICENSE","hash":"b7ea1dbb2fed3410d78bc7c125e1d80927b56981","modified":1476188909446},{"_id":"themes/maupassant/.travis.yml","hash":"f8da426b97088e4caa5226cff219a5d95087961f","modified":1476188909446},{"_id":"themes/maupassant/README.md","hash":"1e0e701e5ea813f7951f3fe3dac2de5ccf0ba0db","modified":1476188909447},{"_id":"themes/maupassant/_config.yml","hash":"da08c6ef91f8f07bb842cb053452d55ceb573734","modified":1476367337344},{"_id":"themes/maupassant/package.json","hash":"04ca87ea475f37841d3610fe5806feb8022416c3","modified":1476188909490},{"_id":"themes/maupassant/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1476188909304},{"_id":"themes/maupassant/.git/config","hash":"3dbf80769093e21ccab51f5f2b02a6d764498803","modified":1476188909312},{"_id":"themes/maupassant/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1476188884629},{"_id":"themes/maupassant/.git/index","hash":"ff29a15e4f1e057c8fd2a87e50ad26df7b569472","modified":1476366626666},{"_id":"themes/maupassant/.git/packed-refs","hash":"53e4275068b4dbaa003c4f6e8f4eeaa4ed2360d0","modified":1476188909298},{"_id":"themes/maupassant/languages/zh-CN.yml","hash":"41f7c09365cbd5ba1b8906191ee07bc75094185a","modified":1476188909449},{"_id":"themes/maupassant/layout/archive.jade","hash":"0a64342c07235c14148813a5aded0353d2e2daf1","modified":1476366772543},{"_id":"themes/maupassant/layout/base-without-sidebar.jade","hash":"baa6072d381a54f2436365846649799a4a277803","modified":1476188909456},{"_id":"themes/maupassant/layout/base.jade","hash":"20867032ff557e98c62aec91fc9f7ea4efaf9424","modified":1476361481136},{"_id":"themes/maupassant/layout/index.jade","hash":"3fe1f0c5021ac696ed9846ecb1c75d285fa46708","modified":1476188909489},{"_id":"themes/maupassant/layout/page.jade","hash":"1e98aa785073dc1bbfe70f2863bc19fe287483b9","modified":1476188909489},{"_id":"themes/maupassant/layout/post.jade","hash":"f68f483242409f501bbc8b50ff129edd981087e2","modified":1476188909489},{"_id":"themes/maupassant/layout/single-column.jade","hash":"4be14ac93c154216e174fe0c4c05608c26f59c42","modified":1476188909489},{"_id":"themes/maupassant/layout/timeline.jade","hash":"ee1e8e4e8fdf61c6d19f1f7fe31ab50ab1465a8d","modified":1476188909490},{"_id":"source/_posts/Linux/2016-10-10-linux-bash.md","hash":"42d80afb33d3365f3641c24de854d2b12aa7fa15","modified":1476341000719},{"_id":"source/_posts/about/index.md","hash":"232d327cdb4b82bef940674f1128d93a1ebe05c5","modified":1476361805562},{"_id":"source/_posts/android/2016-05-11-android-qa.md","hash":"b29b158410702913ed6d8892db8c17ab54de673a","modified":1476341049087},{"_id":"source/_posts/python/2016-03-06-python3-注意点.md","hash":"6a54af0dd887a64a3489ef0b09890b23cb6bb7cd","modified":1476340478555},{"_id":"source/_posts/效率/2016-07-03-Reset-PC.md","hash":"8267c19a50178b988986991dd33350ee180978e5","modified":1476340478600},{"_id":"source/_posts/效率/2016-07-06-proxy.md","hash":"6c7878e4dca5ce6258886d01b38f3a0df36e20f4","modified":1476340478603},{"_id":"themes/maupassant/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1476188884629},{"_id":"themes/maupassant/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1476188884630},{"_id":"themes/maupassant/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1476188884631},{"_id":"themes/maupassant/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1476188884631},{"_id":"themes/maupassant/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1476188884632},{"_id":"themes/maupassant/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1476188884632},{"_id":"themes/maupassant/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1476188884632},{"_id":"themes/maupassant/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1476188884633},{"_id":"themes/maupassant/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1476188884633},{"_id":"themes/maupassant/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1476188884633},{"_id":"themes/maupassant/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1476188884635},{"_id":"themes/maupassant/.git/logs/HEAD","hash":"bf0e97b7c26d3c0df3114a45b4d1b3a234c684a6","modified":1476188909308},{"_id":"themes/maupassant/layout/_partial/after_footer.jade","hash":"7e69266c3d1b9d872617046ca0630998200072fd","modified":1476188909450},{"_id":"themes/maupassant/layout/_partial/comments.jade","hash":"b3a0b0ce0642f2bfe9df94b075c0c2a083871e1b","modified":1476188909451},{"_id":"themes/maupassant/layout/_partial/footer.jade","hash":"87e096caac8e780c0894ef1844f59246f861bbe7","modified":1476188909451},{"_id":"themes/maupassant/layout/_partial/helpers.jade","hash":"9e44f6d32f2449b4109c33118f8285fa2fc7b023","modified":1476188909451},{"_id":"themes/maupassant/layout/_partial/mathjax.jade","hash":"ac6e3a92bf18ab6bbd0e041b6796b295bae963ee","modified":1476188909452},{"_id":"themes/maupassant/layout/_partial/mathjax2.jade","hash":"234a792e64ba208fa97d2f99772ece23056a53ec","modified":1476188909452},{"_id":"themes/maupassant/layout/_partial/paginator.jade","hash":"03ad0c49ae6f8a999ae35b38d08e25775f51f52a","modified":1476188909452},{"_id":"themes/maupassant/layout/_partial/post_nav.jade","hash":"b11d9e6000449838b17f508429f29ffb60f53096","modified":1476188909452},{"_id":"themes/maupassant/layout/_partial/tag.jade","hash":"6145b483b271bba05ad1db7c039fe352a768215b","modified":1476188909453},{"_id":"themes/maupassant/layout/_partial/totop.jade","hash":"eb91a3baf9411188c7c8130f63a674f541ca9c81","modified":1476188909453},{"_id":"themes/maupassant/layout/_widget/category.jade","hash":"7707b4c718a935882ee986d0bb0078e50cdbea64","modified":1476188909453},{"_id":"themes/maupassant/layout/_widget/links.jade","hash":"2a1dd6a0e2befd073e3347347994d8dcd2047879","modified":1476188909454},{"_id":"themes/maupassant/layout/_widget/recent_comments.jade","hash":"0b9e78e7f20bc69690e05f2e0c956bded9058a84","modified":1476188909454},{"_id":"themes/maupassant/layout/_widget/recent_posts.jade","hash":"770b6c41cbf7969ed33adf87eec3be6f50a0911b","modified":1476188909455},{"_id":"themes/maupassant/layout/_widget/search.jade","hash":"c5301ca7f2ec24d790fd7f35f69f8fd8acbdb725","modified":1476188909455},{"_id":"themes/maupassant/layout/_widget/tag.jade","hash":"37f236365b153fc40324391e5a602d6d50014e18","modified":1476188909455},{"_id":"themes/maupassant/layout/_widget/timeline.jade","hash":"96fab4cc1faf8642275b5190ee285420dcde6a6c","modified":1476334007872},{"_id":"themes/maupassant/source/css/font-awesome.min.css","hash":"fb5b49426dee7f1508500e698d1b3c6b04c8fcce","modified":1476338905286},{"_id":"themes/maupassant/source/css/grids-responsive-min.css","hash":"703826508193cbe21f2745d3e837256e224eb512","modified":1476333372365},{"_id":"themes/maupassant/source/css/jquery.css","hash":"f42f761157f26244673eb2f4a9215c70956f80dc","modified":1476333372405},{"_id":"themes/maupassant/source/css/jquery.fancybox.css","hash":"0d142e11e27e9de1a325c32369c42254101ddd34","modified":1476188909491},{"_id":"themes/maupassant/source/css/normalize.css","hash":"24759804cb541e96db7b8eafa7e9fd32cbab59da","modified":1476333372380},{"_id":"themes/maupassant/source/css/pure-min.css","hash":"8cf7ea3e9e00e752de63fbc443e9300366327cd9","modified":1476333372383},{"_id":"themes/maupassant/source/css/style.css","hash":"2afb6e7e24abf81c8b7b7d472fb0bb9b9a1eac16","modified":1476333372398},{"_id":"themes/maupassant/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1476188909492},{"_id":"themes/maupassant/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1476188909492},{"_id":"themes/maupassant/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1476188909493},{"_id":"themes/maupassant/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1476188909493},{"_id":"themes/maupassant/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1476188909494},{"_id":"themes/maupassant/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1476188909494},{"_id":"themes/maupassant/source/js/codeblock-resizer.js","hash":"c77270e684a60babc1abb7353e700ecdc5a66d30","modified":1476188909499},{"_id":"themes/maupassant/source/js/fancybox.js","hash":"8a993c1c4ad40789d2960b682cb2130382a0f26a","modified":1476188909500},{"_id":"themes/maupassant/source/js/search.js","hash":"9cf2337fe9af34055782880ac27b93713d74581f","modified":1476188909501},{"_id":"themes/maupassant/source/js/share.js","hash":"bb6880e2e8e187b576daf326476f09b0907fbe14","modified":1476188909501},{"_id":"themes/maupassant/source/js/smartresize.js","hash":"150ab1cad40d7ae081b0896b13f7d7cbac4e6338","modified":1476188909501},{"_id":"themes/maupassant/source/js/totop.js","hash":"15de186b089c245fe60766d509b587919f05ff23","modified":1476188909501},{"_id":"source/_posts/OJ/LeetCode/2016-04-21-medium-343-122.md","hash":"cf4923530c141553b81766edbaae186426679b17","modified":1476340478541},{"_id":"source/_posts/OJ/LeetCode/2016-04-21-medium-SingleNum.md","hash":"0cdc7c6e7d14cdf306a946b043482f64d577af6e","modified":1476340478543},{"_id":"source/_posts/OJ/LeetCode/2016-04-26-easy-MaximunDepthofBinary.md","hash":"4a367c136b62207a93d359739db14a7771b520e3","modified":1476340478548},{"_id":"source/_posts/OJ/LeetCode/2016-04-26-easy-add-digits.md","hash":"bcdd95d5403c36081fdfab06a799436f22d02fb8","modified":1476340478546},{"_id":"source/_posts/OJ/LeetCode/2016-04-26-easy-move-zeroes.md","hash":"a243027fcdf222154bc2ca907700827ab70179b6","modified":1476340478551},{"_id":"source/_posts/OJ/PAT/2016-02-21-1010题-Radix-25分.md","hash":"ae4fd793db6bce9b505cdcd9250e15792ac9661c","modified":1476340478554},{"_id":"source/_posts/android/UI相关/2016-09-18-RecyclerView.md","hash":"742fbf452ece918563eab252cc5dc8b2f833dc51","modified":1476365276808},{"_id":"source/_posts/android/adb/2016-03-10-adb-console.md","hash":"7efd02c23763d570d4e0ed6e8982a802a1729817","modified":1476365188372},{"_id":"source/_posts/android/lifecycle/2016-06-02-lifecycle-basic.md","hash":"fdbbff028f5e81a3b752720c3412fe8c618a94e0","modified":1476341480556},{"_id":"source/_posts/android/四大组件/2016-03-20-broadcast-basic.md","hash":"7f847b781e846765d805771089469d9fb80ff2a6","modified":1476365296492},{"_id":"source/_posts/android/四大组件/2016-05-06-service-basic.md","hash":"bf22504ebd127f4f694e1cdb83dfb58b6e6f5f80","modified":1476365307965},{"_id":"source/_posts/android/多媒体/2016-03-26-Multi-Media.md","hash":"99e5149784d2bdfc8780b0ac6073514bec572799","modified":1476340478480},{"_id":"source/_posts/android/并发编程/2016-04-05-handler-threads.md","hash":"670e6bb143dddbdbe393cc8619e9294e2675ec42","modified":1476341127327},{"_id":"source/_posts/android/并发编程/2016-05-15-async.md","hash":"e6da5ffad124aa1036f8ebb05c8385105bd7f0ec","modified":1476365324063},{"_id":"source/_posts/android/数据持久化/2016-03-25-data-persistence.md","hash":"8acf61d3b92656d506366e6ff5f82ed03e702d74","modified":1476341101817},{"_id":"source/_posts/android/数据持久化/2016-03-26-content-provider.md","hash":"dbdeabea345fbac781c77fd4264f46a9570e353c","modified":1476365445206},{"_id":"source/_posts/android/第三方库/2016-05-13-volley.md","hash":"c4b644897118923ff6370d5285e7e6f8bf8ff0b6","modified":1476340765706},{"_id":"source/_posts/python/matplotlib/2016-10-04-matplotlib-basic.md","hash":"d971d7c36dc24e929f0e42c2ec11b9d20ecb0d9f","modified":1476365506511},{"_id":"source/_posts/python/numpy/2016-10-04-numpy-basic.md","hash":"2ca84bdfe32fdba86bd03012565487e0d037d6d8","modified":1476341290177},{"_id":"source/_posts/python/os/2016-03-29-python-os.md","hash":"ada6abb748d98fbcecffd7bfab550c724fc7d373","modified":1476340478571},{"_id":"source/_posts/效率/Linux相关问题/2016-06-09-Linux-faq","hash":"6598913da4d4d15669eb779c80007f67e064eb9b","modified":1476340478608},{"_id":"source/_posts/效率/Python相关问题/2016-04-01-Linux-python-env-tips.md","hash":"817e726424a372a90bea6e8f12d4974fc222994b","modified":1476340478611},{"_id":"source/_posts/效率/Python相关问题/2016-06-09-update-python.md","hash":"d1f48fdceb456d8336bddbe2f307803fc89876ea","modified":1476340478614},{"_id":"themes/maupassant/.git/objects/pack/pack-829d8532293a10f4073f9781cc357e2b3ab5da5b.idx","hash":"8eb6454f6b0ee882a4f696b91588b85f5c904728","modified":1476188908760},{"_id":"themes/maupassant/.git/refs/heads/master","hash":"9138f76c9461186fe7e14add27270f388fdabe2f","modified":1476188909308},{"_id":"source/_posts/OJ/Codeforces/eduRound/2016-02-18-Codeforces-Edu-Round7总结.md","hash":"2dd61f84f5978baff16948084468922cb2df0a4d","modified":1476365485326},{"_id":"source/_posts/android/AndroidSamples/UI/2016-09-24-ActionBar-Basic.md","hash":"f84e208b381d2e234b848f64335e558e548c4658","modified":1476341952804},{"_id":"source/_posts/android/AndroidSamples/UI/2016-09-24-ActionBar-PopupMenu.md","hash":"a6d5f58d775072bfa4d98223c2e151cb6791798a","modified":1476341487621},{"_id":"source/_posts/android/UI相关/Fragment/2016-03-09-Fragment-basic.md","hash":"5dc8a2562a22dba263596870ed5c763a84b14635","modified":1476365258687},{"_id":"source/_posts/android/UI相关/Fragment/2016-03-19-Fragment-message-transportation.md","hash":"da06920f21bc70d3fecaf8e5ca66a7a7426fbdb6","modified":1476340478470},{"_id":"source/_posts/android/UI相关/布局/2016-02-22-Layout-Gravity和Gravity.md","hash":"dc6037a66fe5ab4f6d4ac5f8a03121b69db41cec","modified":1476340478473},{"_id":"source/_posts/android/开发实战/Sunshine开发实战/2016-06-02-data-persistence.md","hash":"9f1d0b12a267dcf61db700aff6c0e74ef7093aab","modified":1476365372982},{"_id":"source/_posts/android/开发实战/Sunshine开发实战/2016-06-03-android-test.md","hash":"07af1b55291113f3d922a5f71009f039c48bdeac","modified":1476365378135},{"_id":"source/_posts/android/开发实战/Sunshine开发实战/2016-06-03-sunshine-build-custom.md","hash":"b6af92871f1f29675788db9aca8e5e03bdabccac","modified":1476340478509},{"_id":"source/_posts/android/开发实战/个人开发/2016-07-07-calculator.md","hash":"6817dcacca5c04d7648da8a6c4efcf9fa4614c1d","modified":1476365384669},{"_id":"source/_posts/android/控件/AlertDialog/2016-03-25-Alert-Dialog.md","hash":"f6ef749407b183e9db72272c417dc5f8da3a578f","modified":1476340478515},{"_id":"source/_posts/android/控件/Bar/2016-03-09-ProgressBar.md","hash":"c19945d5008d04aec8f88c78394f12c9966c69e8","modified":1476365400995},{"_id":"source/_posts/android/控件/WebView/2016-03-07-使用WebView显示网页.md","hash":"84f706fa273bf5bb18448fa246a69c6bba8012f7","modified":1476365413739},{"_id":"source/_posts/python/Spider/票房爬虫/2016-06-08-maoyan.md","hash":"4c1494b8bc6fb89cbe0efc96ed9b3436e5e2f65a","modified":1476340478591},{"_id":"source/_posts/python/Spider/基础知识/2016-03-27-python-spider.md","hash":"97e9c17273b86614169288e797eb0c04c9792689","modified":1476340478576},{"_id":"source/_posts/python/Spider/基础知识/2016-03-27-regex.md","hash":"f6c53e8f9bb4f0887bd5153cbb7f029b91f989b3","modified":1476340478579},{"_id":"source/_posts/python/Spider/基础知识/2016-03-29-beautiful-soup4-basic.md","hash":"d6d8bdef61e0de5a455695c7fecf7ff70719b079","modified":1476340478582},{"_id":"source/_posts/python/Spider/基础知识/2016-03-31-scrapy.md","hash":"f53818fe46f9a4b52ffe44a95206f437789e8845","modified":1476340478585},{"_id":"source/_posts/python/Spider/基础知识/2016-04-08-cookiejar.md","hash":"269cf9477e9a08c58c864eab39346de8ecd2c49a","modified":1476340478588},{"_id":"themes/maupassant/.git/logs/refs/heads/master","hash":"bf0e97b7c26d3c0df3114a45b4d1b3a234c684a6","modified":1476188909309},{"_id":"themes/maupassant/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1476188909303},{"_id":"source/_posts/android/开发实战/AndroidBigNerdRanceGuide/CriminalIntent开发/2016-03-17-Diaglog.md","hash":"68167ab85391f432b3fe9dff7d5d6a936efff2fb","modified":1476340478490},{"_id":"source/_posts/android/开发实战/AndroidBigNerdRanceGuide/CriminalIntent开发/2016-03-14-CriminalIntent-Fragment.md","hash":"2623568ce9ab1f0adcc41bd0bd7a033ada524e3a","modified":1476340478488},{"_id":"source/_posts/android/开发实战/AndroidBigNerdRanceGuide/CriminalIntent开发/2016-07-06-CriminalIntent-Intent.md","hash":"1c4ec91c5b5733410eb27f4ad83a36dcd6d86d7e","modified":1476342007999},{"_id":"source/_posts/android/开发实战/AndroidBigNerdRanceGuide/CriminalIntent开发/2016-07-06-CriminalIntent-ListFragment.md","hash":"f1f83f39f89b10d6982563648884bad01c612e85","modified":1476340478497},{"_id":"source/_posts/android/开发实战/AndroidBigNerdRanceGuide/CriminalIntent开发/2016-07-08-ViewPager.md","hash":"41ee1c3ed11d59dc03f9c88d7e9fcd20e2c412d6","modified":1476341453586},{"_id":"themes/maupassant/.git/logs/refs/remotes/origin/HEAD","hash":"bf0e97b7c26d3c0df3114a45b4d1b3a234c684a6","modified":1476188909303},{"_id":"source/favicon.ico","hash":"cf312a2dc774e769e3ff0c42a06083310bb55293","modified":1476193458069},{"_id":"themes/maupassant/.git/objects/pack/pack-829d8532293a10f4073f9781cc357e2b3ab5da5b.pack","hash":"02292ae44a101a2c284c48006a2339575f78c14f","modified":1476188908833},{"_id":"public/atom.xml","hash":"28b32497996058e502df47c04d7cbccbb564067b","modified":1476367352078},{"_id":"public/search.xml","hash":"a7b8fd6045c92fdc04f89dc378c8f58d24fc7da2","modified":1476367352101},{"_id":"public/2016/10/10/Linux/2016-10-10-linux-bash/index.html","hash":"e9fd37176ac1b4340ef89fa152a42d1b3bfd154b","modified":1476367352137},{"_id":"public/2016/07/08/android/开发实战/AndroidBigNerdRanceGuide/CriminalIntent开发/2016-07-08-ViewPager/index.html","hash":"1a29852ab60560163251591256c22babe23d9b1e","modified":1476367352137},{"_id":"public/2016/07/07/android/开发实战/个人开发/2016-07-07-calculator/index.html","hash":"c750088f7bf9cc3d0dfdd3c234d45fc9885bbd66","modified":1476367352137},{"_id":"public/2016/07/06/效率/2016-07-06-proxy/index.html","hash":"5ee9f26facdd64d446500f6c115997cbd1256293","modified":1476367352137},{"_id":"public/2016/07/03/效率/2016-07-03-Reset-PC/index.html","hash":"5fc5ac1d576aec8432ab589799fb66ce975068ff","modified":1476367352137},{"_id":"public/2016/06/09/效率/Python相关问题/2016-06-09-update-python/index.html","hash":"0b447e1b5c1b443dfdbe9f775f4cd03cfddb039c","modified":1476367352138},{"_id":"public/2016/06/08/python/Spider/票房爬虫/2016-06-08-maoyan/index.html","hash":"0249a17910fc1775d8fe506590f6f9ef2a045261","modified":1476367352138},{"_id":"public/2016/06/03/android/开发实战/Sunshine开发实战/2016-06-03-sunshine-build-custom/index.html","hash":"eace07bf9b5c4365e637f369be1a519f41671081","modified":1476367352138},{"_id":"public/2016/06/03/android/开发实战/Sunshine开发实战/2016-06-03-android-test/index.html","hash":"b3d6b1c775fa823a3d1a2332f1c58e62aa0af3c1","modified":1476367352138},{"_id":"public/2016/06/02/android/lifecycle/2016-06-02-lifecycle-basic/index.html","hash":"8dafb93bb95b4d8c0b9c15327ab00f10fee0ec8b","modified":1476367352138},{"_id":"public/2016/06/02/android/开发实战/Sunshine开发实战/2016-06-02-data-persistence/index.html","hash":"08810ae530922634966cd5af08db8ea1063f5d4d","modified":1476367352138},{"_id":"public/2016/05/15/android/并发编程/2016-05-15-async/index.html","hash":"ea8c74f635542ee070c5bf6676dbaac207730607","modified":1476367352138},{"_id":"public/2016/05/11/android/2016-05-11-android-qa/index.html","hash":"edb0ea6b96e5e0cab76097d2aa22a32add6b3625","modified":1476367352138},{"_id":"public/2016/05/06/android/四大组件/2016-05-06-service-basic/index.html","hash":"35050a6891fd0e9ba02a569e471ef3f6aa41463b","modified":1476367352138},{"_id":"public/2016/04/26/OJ/LeetCode/2016-04-26-easy-MaximunDepthofBinary/index.html","hash":"fce00f375437fdd3c3da2a6bf1d717df490df0d3","modified":1476367352138},{"_id":"public/2016/04/08/python/Spider/基础知识/2016-04-08-cookiejar/index.html","hash":"1993d0b38a8e08e240d9d9a02539fa88641e4d90","modified":1476367352138},{"_id":"public/2016/04/01/效率/Python相关问题/2016-04-01-Linux-python-env-tips/index.html","hash":"0179d96d5129561a22c62251dc1c9427ee090dff","modified":1476367352138},{"_id":"public/2016/03/31/python/Spider/基础知识/2016-03-31-scrapy/index.html","hash":"df00682ffc933f3f8542adba773bcc9e77a99493","modified":1476367352138},{"_id":"public/2016/03/29/python/os/2016-03-29-python-os/index.html","hash":"3f04e89b08cccd087fc8df4bc64a4faf39d7bdf7","modified":1476367352138},{"_id":"public/2016/03/26/android/数据持久化/2016-03-26-content-provider/index.html","hash":"761730b3bd1d08f53524b7eb1dae27114c62e91e","modified":1476367352138},{"_id":"public/2016/03/19/android/UI相关/Fragment/2016-03-19-Fragment-message-transportation/index.html","hash":"6d27d36effe349d769b44576f02c800d1bfc270d","modified":1476367352138},{"_id":"public/2016/03/10/android/adb/2016-03-10-adb-console/index.html","hash":"def9b63576f986a139991809d68ac879f6e84249","modified":1476367352138},{"_id":"public/2016/03/06/python/2016-03-06-python3-注意点/index.html","hash":"0cfe3fc11eba9e0aa7b48b7c5639c6a234c2d4cf","modified":1476367352139},{"_id":"public/2016/01/01/about/index/index.html","hash":"3fcd46130b8de9e18043cfc552f62cf12b999279","modified":1476367352139},{"_id":"public/archives/index.html","hash":"30c80f43815047bb89160b2329975ebd60cc21c1","modified":1476367352139},{"_id":"public/archives/page/2/index.html","hash":"74bcb3c7ba7f60111f7374cb21d0d43f8c291c22","modified":1476367352139},{"_id":"public/archives/page/3/index.html","hash":"2678aba8dfa2a4b01aa1fbc389949eb9aaa655ab","modified":1476367352139},{"_id":"public/archives/page/4/index.html","hash":"8cf309ac2b9e8a6fd4d453041115835c09cb107b","modified":1476367352139},{"_id":"public/archives/page/5/index.html","hash":"7e9d283bad5ae55dfbacfc4ecd66a5b80558a6e6","modified":1476367352139},{"_id":"public/archives/2016/index.html","hash":"5ac915cab3d330ca039e85438c1010270954529f","modified":1476367352139},{"_id":"public/archives/2016/page/2/index.html","hash":"4677811b880809230680a7e103a145e62bb3a77e","modified":1476367352139},{"_id":"public/archives/2016/page/3/index.html","hash":"64100e95e0f17057af88b9063685ea7cfcbe5414","modified":1476367352139},{"_id":"public/archives/2016/page/4/index.html","hash":"100b3bf170628ffd04de5a9691c299e1580a3a47","modified":1476367352139},{"_id":"public/archives/2016/page/5/index.html","hash":"135370aea089dac405a8a95571597d118b964307","modified":1476367352139},{"_id":"public/archives/2016/01/index.html","hash":"34de949cefb2927b51dbf36401f8e74d3cf1c222","modified":1476367352139},{"_id":"public/archives/2016/02/index.html","hash":"34de949cefb2927b51dbf36401f8e74d3cf1c222","modified":1476367352139},{"_id":"public/archives/2016/03/index.html","hash":"1f8b1151bf5c3a213f5f421a0e65ef69c08763ec","modified":1476367352139},{"_id":"public/archives/2016/03/page/2/index.html","hash":"94b43c6fb9e3afe37bd60bbf9f16e101a7df598e","modified":1476367352139},{"_id":"public/archives/2016/05/index.html","hash":"34de949cefb2927b51dbf36401f8e74d3cf1c222","modified":1476367352139},{"_id":"public/archives/2016/04/index.html","hash":"34de949cefb2927b51dbf36401f8e74d3cf1c222","modified":1476367352139},{"_id":"public/archives/2016/06/index.html","hash":"34de949cefb2927b51dbf36401f8e74d3cf1c222","modified":1476367352139},{"_id":"public/archives/2016/07/index.html","hash":"34de949cefb2927b51dbf36401f8e74d3cf1c222","modified":1476367352139},{"_id":"public/archives/2016/09/index.html","hash":"34de949cefb2927b51dbf36401f8e74d3cf1c222","modified":1476367352139},{"_id":"public/archives/2016/10/index.html","hash":"34de949cefb2927b51dbf36401f8e74d3cf1c222","modified":1476367352139},{"_id":"public/categories/Linux/index.html","hash":"847e9d5564b852046070d970c58e57924ae1ebd9","modified":1476367352140},{"_id":"public/categories/Android/index.html","hash":"57edd04dcf77052d24c1d42f98395eafa56a992b","modified":1476367352140},{"_id":"public/categories/Android/page/2/index.html","hash":"accc9af36f4da505f45a6241d14f78b48af7374c","modified":1476367352140},{"_id":"public/categories/Android/page/3/index.html","hash":"225602bb2e702001dfea5ab28f38b44572c462d2","modified":1476367352140},{"_id":"public/categories/Python/index.html","hash":"41b0dda98cf7be5e9d2ce70f7bf0cf0178353cba","modified":1476367352140},{"_id":"public/categories/效率/index.html","hash":"2b0416d209f0391c317727b328beba102b2fb672","modified":1476367352140},{"_id":"public/categories/OJ/index.html","hash":"55cb6eee99d368fac2703c1988e82985306ca194","modified":1476367352140},{"_id":"public/tags/android/index.html","hash":"a7ee9738c99f8b1a915ddb6d74c0ea0e82862d96","modified":1476367352140},{"_id":"public/tags/linux/index.html","hash":"a5a3d88416437d529eea34f7b2aa70e77c5bff79","modified":1476367352140},{"_id":"public/tags/android/page/2/index.html","hash":"f57628c8069e9fccdbb19c80c607a3f3f2d6d64a","modified":1476367352140},{"_id":"public/tags/android/page/3/index.html","hash":"2d9abf136328b72f73bcf14219cfc0ca169a6543","modified":1476367352140},{"_id":"public/tags/python3/index.html","hash":"2d9a574cfe8e78bac90bac76a3d186383ebe904b","modified":1476367352140},{"_id":"public/tags/java/index.html","hash":"ab47795496ac34230254c40ca8d443695590901f","modified":1476367352140},{"_id":"public/tags/python/index.html","hash":"37427d7e3e0f9369b0496cc7466ba5392f421359","modified":1476367352140},{"_id":"public/tags/python/page/2/index.html","hash":"d934dbb0beaf142108135c550634f61d20489dfd","modified":1476367352140},{"_id":"public/tags/faq/index.html","hash":"e7339c7a1dcba80bdd373c446f8a9fe551c7e08d","modified":1476367352140},{"_id":"public/tags/quicksort/index.html","hash":"773586be1593dc5415b28cd9b94303386467b7f0","modified":1476367352140},{"_id":"public/tags/sort/index.html","hash":"03f92f44d23c29b2acd254ef5a5e1b0619c0bb6c","modified":1476367352140},{"_id":"public/tags/bit-manipulation/index.html","hash":"a6cc47f4fbeb91481c0a8b8589d33be62a8e1ff8","modified":1476367352140},{"_id":"public/tags/recursion/index.html","hash":"c32730ade2a8eddbd64f63b97a2aa07f48e34a3d","modified":1476367352140},{"_id":"public/tags/math/index.html","hash":"bbbac1dd176e9f455e4debc3da718fcf264aa100","modified":1476367352140},{"_id":"public/tags/array/index.html","hash":"ef4ad68486803cd44eba9003343148ecd39e38a0","modified":1476367352140},{"_id":"public/tags/twoPointer/index.html","hash":"fb66f63b196a83980896449daaa286b4ca7d48fe","modified":1476367352141},{"_id":"public/tags/todo/index.html","hash":"8cbf71c5c8e850c5949f303992cd4949aa9d6da6","modified":1476367352141},{"_id":"public/tags/onlinejudge/index.html","hash":"752ad5445d93fa88f7b1e5f12e13423f5ccfec05","modified":1476367352141},{"_id":"public/tags/binarysearch/index.html","hash":"7ed140dc4f35d14e57c08bedd6ab289405881712","modified":1476367352141},{"_id":"public/tags/UI/index.html","hash":"3eac3844e0f1e2c2097a8c0a0bc6c76c35cb6bce","modified":1476367352141},{"_id":"public/tags/RecyclerView/index.html","hash":"86991b6d8e97809f4ebb77697b3ce07d48c9c246","modified":1476367352141},{"_id":"public/tags/android-adb/index.html","hash":"8b87d6db541b5f2e8eee279a06a519669c9ad4d1","modified":1476367352141},{"_id":"public/tags/android-lifecycle/index.html","hash":"98369aa259333d88280c1a90979fea120c74769b","modified":1476367352141},{"_id":"public/tags/android-broadcast/index.html","hash":"73e8ba236ac78217c327c1064e0f76ca12557f90","modified":1476367352141},{"_id":"public/tags/android-service/index.html","hash":"1196f43171910b131f22070c4fb5b9983f362765","modified":1476367352141},{"_id":"public/tags/android-notification/index.html","hash":"b5f2056bd52e553b8800d58b29b05ace040c0e6d","modified":1476367352141},{"_id":"public/tags/android-async/index.html","hash":"6c746fe3d3c15cab61504b785077282006fcf122","modified":1476367352141},{"_id":"public/tags/android-thread/index.html","hash":"3def76c0c19033f8ffcc8447f7d5d9e2d1b4441d","modified":1476367352141},{"_id":"public/tags/data-persistence/index.html","hash":"b4254453f0094b702109449c66f166a85e89514d","modified":1476367352141},{"_id":"public/tags/android-data/index.html","hash":"0e248c28cc0d03dc14ccf634f9daff1ebd5a24e8","modified":1476367352141},{"_id":"public/tags/volley/index.html","hash":"5e3fd9765f37f0885e39a49dcc2672883810455a","modified":1476367352141},{"_id":"public/tags/matplotlib/index.html","hash":"69158ebe25013452aab4d15a046c359eab3a7773","modified":1476367352141},{"_id":"public/tags/spider/index.html","hash":"254c97faee4369057906e62b03b368b4bdf96760","modified":1476367352141},{"_id":"public/tags/bs4/index.html","hash":"29ed6fba807c18f8488b4b750496889e0d6a5534","modified":1476367352141},{"_id":"public/tags/numpy/index.html","hash":"2c5e33a738b866bad8968fbc1d74251448bf153d","modified":1476367352141},{"_id":"public/tags/regex/index.html","hash":"97ea1716ed328a8258fedb50a2efb1e55ae1828c","modified":1476367352141},{"_id":"public/tags/格式化输出/index.html","hash":"94a26c4538e8991a8b5205d8d3e261df86ab2d67","modified":1476367352141},{"_id":"public/tags/io/index.html","hash":"da9c2fe06b78922e476627fa9b45383ae6467aa8","modified":1476367352142},{"_id":"public/tags/区间查询/index.html","hash":"17d6df08a9bf1e8d43b1faabfd165714ab403266","modified":1476367352142},{"_id":"public/tags/线段树/index.html","hash":"7f1621fe92a850555475b642c24bfe75523a1086","modified":1476367352142},{"_id":"public/tags/android-fragment/index.html","hash":"62698c998edd49ce0b07eca88633a71199784868","modified":1476367352142},{"_id":"public/tags/android-UI/index.html","hash":"7bf0383e74c1b857793f8e8637985e09dbbe8285","modified":1476367352142},{"_id":"public/tags/android-layout/index.html","hash":"ddc54cfb2b276af1e68131f46bbfa19cc580ec6b","modified":1476367352142},{"_id":"public/tags/android-data-persistence/index.html","hash":"179b70eec35e4dac7005616f15550d226e213b5b","modified":1476367352142},{"_id":"public/tags/android-project/index.html","hash":"fc53431eb9bf4d9c77c0d2290497c37da4c2ef81","modified":1476367352142},{"_id":"public/tags/android-test/index.html","hash":"7706eeb5e49de4933f0e3cf1fec2c75945e12bbc","modified":1476367352142},{"_id":"public/tags/android-control/index.html","hash":"b3247a0088952fc37d27f842b48b464f40aea191","modified":1476367352142},{"_id":"public/tags/android-bar/index.html","hash":"030b6564c7333248e6a755ebae18475b2e70f853","modified":1476367352142},{"_id":"public/tags/pythonspider/index.html","hash":"aa71c604752ac8305b1e8752051d33cfe09d0b4b","modified":1476367352142},{"_id":"public/tags/cookiejar/index.html","hash":"17d2321facff7007aa78e9c3a71e4d1c4c34ea91","modified":1476367352142},{"_id":"public/tags/cookies/index.html","hash":"3daafc7fe151f4fb94e4eecbb743ce44185a2fb7","modified":1476367352142},{"_id":"public/tags/android-adapter/index.html","hash":"fc93294bba7ae06707ad1c00ce471d6f2120d2cc","modified":1476367352143},{"_id":"public/2016/10/04/python/numpy/2016-10-04-numpy-basic/index.html","hash":"6e1e6b8c18ba016f42c39668144daa8bf879329a","modified":1476367352143},{"_id":"public/2016/10/04/python/matplotlib/2016-10-04-matplotlib-basic/index.html","hash":"2d4867b36882a90466c52fda84edddd5387ddf69","modified":1476367352143},{"_id":"public/2016/09/24/android/AndroidSamples/UI/2016-09-24-ActionBar-Basic/index.html","hash":"f7cf4a14565db46c64b18c51c28716ac8e6c2bb5","modified":1476367352143},{"_id":"public/2016/09/18/android/UI相关/2016-09-18-RecyclerView/index.html","hash":"f6e3653ecdf01a2b6032fa963915a56cdd7a49a5","modified":1476367352143},{"_id":"public/2016/07/06/android/开发实战/AndroidBigNerdRanceGuide/CriminalIntent开发/2016-07-06-CriminalIntent-ListFragment/index.html","hash":"5ddfa6ff85bd1549f4f35d60fa512bbdbcbda236","modified":1476367352143},{"_id":"public/2016/07/06/android/开发实战/AndroidBigNerdRanceGuide/CriminalIntent开发/2016-07-06-CriminalIntent-Intent/index.html","hash":"bc9a9f0d384b09cb1bab970768f203f82a85a87e","modified":1476367352143},{"_id":"public/2016/05/13/android/第三方库/2016-05-13-volley/index.html","hash":"d525c33056db8dcdf74dc536e2eb6c44fd618a85","modified":1476367352143},{"_id":"public/2016/04/26/OJ/LeetCode/2016-04-26-easy-add-digits/index.html","hash":"3d3c3288026ebdb44d89a77e3337987f7ba07488","modified":1476367352143},{"_id":"public/2016/04/26/OJ/LeetCode/2016-04-26-easy-move-zeroes/index.html","hash":"f280c38db258cad0fd58d23582c94cb8c9c44939","modified":1476367352143},{"_id":"public/2016/04/21/OJ/LeetCode/2016-04-21-medium-SingleNum/index.html","hash":"0748a665c4ea4019ee38fbeabb2eee2ae4320a14","modified":1476367352143},{"_id":"public/2016/04/21/OJ/LeetCode/2016-04-21-medium-343-122/index.html","hash":"b3d8ce34a9a7ec34bee3420e73677f32c395706a","modified":1476367352143},{"_id":"public/2016/03/29/python/Spider/基础知识/2016-03-29-beautiful-soup4-basic/index.html","hash":"5ce5f0069dfecf3406c49adc9e4d26e7bbc5bbd9","modified":1476367352144},{"_id":"public/2016/03/27/python/Spider/基础知识/2016-03-27-python-spider/index.html","hash":"82ad0296f2e4b395bfee2e1c317eedf07ec17ccc","modified":1476367352144},{"_id":"public/2016/03/27/python/Spider/基础知识/2016-03-27-regex/index.html","hash":"10fe0ff96354a033a2b7f68e10ecdd7baa954523","modified":1476367352144},{"_id":"public/2016/03/26/android/多媒体/2016-03-26-Multi-Media/index.html","hash":"20547daec523561e066b6f022eccf202ff021e01","modified":1476367352144},{"_id":"public/2016/03/25/android/控件/AlertDialog/2016-03-25-Alert-Dialog/index.html","hash":"3667f190a5604da5f6d7da9023d20e14c11932e0","modified":1476367352144},{"_id":"public/2016/03/20/android/四大组件/2016-03-20-broadcast-basic/index.html","hash":"49f258eef99268db1af88c80eb65197adf6e5bf6","modified":1476367352145},{"_id":"public/2016/03/25/android/数据持久化/2016-03-25-data-persistence/index.html","hash":"8bd88d2a4f6d9b8bb494bbb0fb3a8f2e177e59c3","modified":1476367352145},{"_id":"public/2016/03/17/android/开发实战/AndroidBigNerdRanceGuide/CriminalIntent开发/2016-03-17-Diaglog/index.html","hash":"1f420adcc6cd6f23ed260b9085d388820139924c","modified":1476367352145},{"_id":"public/2016/03/14/android/开发实战/AndroidBigNerdRanceGuide/CriminalIntent开发/2016-03-14-CriminalIntent-Fragment/index.html","hash":"0a6ca0e5ffdcb00c44312e13d77472fe9130e210","modified":1476367352145},{"_id":"public/2016/03/09/android/UI相关/Fragment/2016-03-09-Fragment-basic/index.html","hash":"d418a382e6f7e5584a840b74ae61105e982fa825","modified":1476367352145},{"_id":"public/2016/03/09/android/控件/Bar/2016-03-09-ProgressBar/index.html","hash":"58a1292655faabf04d8829eb423c9e1ad12577f2","modified":1476367352145},{"_id":"public/2016/03/07/android/控件/WebView/2016-03-07-使用WebView显示网页/index.html","hash":"8b7ab9aceca5b4de64d0b28b2c28ebbfb9fff8e3","modified":1476367352145},{"_id":"public/2016/02/22/android/UI相关/布局/2016-02-22-Layout-Gravity和Gravity/index.html","hash":"1ad26f75bcb51b07dab041b75f12df94ed220e0d","modified":1476367352145},{"_id":"public/2016/02/21/OJ/PAT/2016-02-21-1010题-Radix-25分/index.html","hash":"b768a50bde31a45552818c52817a017c33277175","modified":1476367352145},{"_id":"public/2016/02/18/OJ/Codeforces/eduRound/2016-02-18-Codeforces-Edu-Round7总结/index.html","hash":"6dc561ec13f7ca8b8f47a4190315072f9c0ca208","modified":1476367352145},{"_id":"public/index.html","hash":"ebdb1ea2a6df0f720fd2abe710746131a0f332e2","modified":1476367352145},{"_id":"public/page/2/index.html","hash":"929234a27e9487eeb2242c72bb012829e860035c","modified":1476367352145},{"_id":"public/page/3/index.html","hash":"a100165896f04e50977aae99c81901937eb9efbe","modified":1476367352146},{"_id":"public/page/4/index.html","hash":"9499f04da3773d2420f4398a438b1f70c498679f","modified":1476367352146},{"_id":"public/page/5/index.html","hash":"7de996c0172b508cc98a6eb63fe5cbe38a208fad","modified":1476367352146},{"_id":"public/tags/android-view-pager/index.html","hash":"cfcc8beeced5d1c91b1a675c590284dbc4fd2653","modified":1476367352164},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1476367352169},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1476367352169},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1476367352169},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1476367352169},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1476367352169},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1476367352169},{"_id":"public/css/grids-responsive-min.css","hash":"703826508193cbe21f2745d3e837256e224eb512","modified":1476367352294},{"_id":"public/css/jquery.css","hash":"f42f761157f26244673eb2f4a9215c70956f80dc","modified":1476367352294},{"_id":"public/css/jquery.fancybox.css","hash":"f42f761157f26244673eb2f4a9215c70956f80dc","modified":1476367352294},{"_id":"public/css/normalize.css","hash":"24759804cb541e96db7b8eafa7e9fd32cbab59da","modified":1476367352294},{"_id":"public/js/codeblock-resizer.js","hash":"5d0b786d60bf225d9eabcc9cece2719ff4d9b6cd","modified":1476367352294},{"_id":"public/js/fancybox.js","hash":"13c4781570339f4fba76a3d7f202e442817dd605","modified":1476367352294},{"_id":"public/js/share.js","hash":"f49776e0baa2b913ddc7a20db24b3edd469c8343","modified":1476367352294},{"_id":"public/js/search.js","hash":"53db2eb255dd40a412ed62ea7332ca5a22f7816f","modified":1476367352294},{"_id":"public/js/totop.js","hash":"7dbf8fcf582a4fb6eb9b2c60d6de9f9c2091ec4c","modified":1476367352295},{"_id":"public/js/smartresize.js","hash":"3ef157fd877167e3290f42c67a624ea375a46c24","modified":1476367352295},{"_id":"public/css/font-awesome.min.css","hash":"fb5b49426dee7f1508500e698d1b3c6b04c8fcce","modified":1476367352295},{"_id":"public/css/pure-min.css","hash":"8cf7ea3e9e00e752de63fbc443e9300366327cd9","modified":1476367352295},{"_id":"public/css/style.css","hash":"2afb6e7e24abf81c8b7b7d472fb0bb9b9a1eac16","modified":1476367352295},{"_id":"public/favicon.ico","hash":"cf312a2dc774e769e3ff0c42a06083310bb55293","modified":1476367352337}],"Category":[{"name":"Linux","_id":"ciu8f00xz0003cwjrcvzhtpua"},{"name":"Android","_id":"ciu8f00yd0008cwjrd9n313yq"},{"name":"Python","_id":"ciu8f00yh000ccwjrk2l0hhxp"},{"name":"效率","_id":"ciu8f00yi000fcwjri9yml284"},{"name":"OJ","_id":"ciu8f00zd000wcwjrzwn1i40y"}],"Data":[],"Page":[],"Post":[{"date":"2015-12-31T16:00:00.000Z","layout":"page","title":"about","_content":"\nNickname: [ivyxjc](https://ivyxjc.xyz)\n\nEmail:[ivyxjc1994@hotmailc.com](mailto:ivyxjc@1994@hotmail.com)\n\nGithub: [@ivyxjc](https://github.com/ivyxjc)\n","source":"_posts/about/index.md","raw":"---\ndate: 2016-01-01\nlayout: page\ntitle: about\n---\n\nNickname: [ivyxjc](https://ivyxjc.xyz)\n\nEmail:[ivyxjc1994@hotmailc.com](mailto:ivyxjc@1994@hotmail.com)\n\nGithub: [@ivyxjc](https://github.com/ivyxjc)\n","slug":"about/index","published":1,"updated":"2016-10-13T12:30:05.562Z","comments":1,"photos":[],"link":"","_id":"ciu8f00xq0000cwjr5j92t6xd","content":"<p>Nickname: <a href=\"https://ivyxjc.xyz\" target=\"_blank\" rel=\"external\">ivyxjc</a></p>\n<p>Email:<a href=\"mailto:ivyxjc@1994@hotmail.com\" target=\"_blank\" rel=\"external\">ivyxjc1994@hotmailc.com</a></p>\n<p>Github: <a href=\"https://github.com/ivyxjc\" target=\"_blank\" rel=\"external\">@ivyxjc</a></p>\n","excerpt":"","more":"<p>Nickname: <a href=\"https://ivyxjc.xyz\">ivyxjc</a></p>\n<p>Email:<a href=\"mailto:ivyxjc@1994@hotmail.com\">ivyxjc1994@hotmailc.com</a></p>\n<p>Github: <a href=\"https://github.com/ivyxjc\">@ivyxjc</a></p>\n"},{"author":"ivyxjc","date":"2016-10-09T16:00:00.000Z","title":"Linux 常用命令","keywords":null,"description":"介绍与解压, 文件操作, vim操作, 进程等相关的bash命令.","_content":"\n## 解压\n\n### 解压.zip文件\n\n```bash\nunzip xxx.zip\n```\n\n### 解压tar.gz文件\n\n\n## 文件相关操作\n\n### 移动\n\n\nmv dir1 dir2\n\n## 进程相关\n\n### 如何查看正在运行的进程\n\n`ps -A`:显示所有的进程\n`ps -a`:显示终端中包括其它用户的所有进程\n`ps -x`:显示无控制终端的进程\n\n### 如何关闭正在运行的进程\n\n`kill -9 xxx`:xxx是进程的PID\n\n\n\n## vim相关操作\n\n### 查找\n\n?pattern 光标下方查找\n/pattern 光标上方查找\n","source":"_posts/Linux/2016-10-10-linux-bash.md","raw":"---\nauthor: ivyxjc\ndate: 2016-10-10\ntitle: Linux 常用命令\ncategory: Linux\ntags: [linux]\nkeywords:\ndescription: 介绍与解压, 文件操作, vim操作, 进程等相关的bash命令.\n---\n\n## 解压\n\n### 解压.zip文件\n\n```bash\nunzip xxx.zip\n```\n\n### 解压tar.gz文件\n\n\n## 文件相关操作\n\n### 移动\n\n\nmv dir1 dir2\n\n## 进程相关\n\n### 如何查看正在运行的进程\n\n`ps -A`:显示所有的进程\n`ps -a`:显示终端中包括其它用户的所有进程\n`ps -x`:显示无控制终端的进程\n\n### 如何关闭正在运行的进程\n\n`kill -9 xxx`:xxx是进程的PID\n\n\n\n## vim相关操作\n\n### 查找\n\n?pattern 光标下方查找\n/pattern 光标上方查找\n","slug":"Linux/2016-10-10-linux-bash","published":1,"updated":"2016-10-13T06:43:20.719Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f00xv0001cwjrj3100yur","content":"<h2 id=\"解压\"><a href=\"#解压\" class=\"headerlink\" title=\"解压\"></a>解压</h2><h3 id=\"解压-zip文件\"><a href=\"#解压-zip文件\" class=\"headerlink\" title=\"解压.zip文件\"></a>解压.zip文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">unzip xxx.zip</div></pre></td></tr></table></figure>\n<h3 id=\"解压tar-gz文件\"><a href=\"#解压tar-gz文件\" class=\"headerlink\" title=\"解压tar.gz文件\"></a>解压tar.gz文件</h3><h2 id=\"文件相关操作\"><a href=\"#文件相关操作\" class=\"headerlink\" title=\"文件相关操作\"></a>文件相关操作</h2><h3 id=\"移动\"><a href=\"#移动\" class=\"headerlink\" title=\"移动\"></a>移动</h3><p>mv dir1 dir2</p>\n<h2 id=\"进程相关\"><a href=\"#进程相关\" class=\"headerlink\" title=\"进程相关\"></a>进程相关</h2><h3 id=\"如何查看正在运行的进程\"><a href=\"#如何查看正在运行的进程\" class=\"headerlink\" title=\"如何查看正在运行的进程\"></a>如何查看正在运行的进程</h3><p><code>ps -A</code>:显示所有的进程<br><code>ps -a</code>:显示终端中包括其它用户的所有进程<br><code>ps -x</code>:显示无控制终端的进程</p>\n<h3 id=\"如何关闭正在运行的进程\"><a href=\"#如何关闭正在运行的进程\" class=\"headerlink\" title=\"如何关闭正在运行的进程\"></a>如何关闭正在运行的进程</h3><p><code>kill -9 xxx</code>:xxx是进程的PID</p>\n<h2 id=\"vim相关操作\"><a href=\"#vim相关操作\" class=\"headerlink\" title=\"vim相关操作\"></a>vim相关操作</h2><h3 id=\"查找\"><a href=\"#查找\" class=\"headerlink\" title=\"查找\"></a>查找</h3><p>?pattern 光标下方查找<br>/pattern 光标上方查找</p>\n","excerpt":"","more":"<h2 id=\"解压\"><a href=\"#解压\" class=\"headerlink\" title=\"解压\"></a>解压</h2><h3 id=\"解压-zip文件\"><a href=\"#解压-zip文件\" class=\"headerlink\" title=\"解压.zip文件\"></a>解压.zip文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">unzip xxx.zip</div></pre></td></tr></table></figure>\n<h3 id=\"解压tar-gz文件\"><a href=\"#解压tar-gz文件\" class=\"headerlink\" title=\"解压tar.gz文件\"></a>解压tar.gz文件</h3><h2 id=\"文件相关操作\"><a href=\"#文件相关操作\" class=\"headerlink\" title=\"文件相关操作\"></a>文件相关操作</h2><h3 id=\"移动\"><a href=\"#移动\" class=\"headerlink\" title=\"移动\"></a>移动</h3><p>mv dir1 dir2</p>\n<h2 id=\"进程相关\"><a href=\"#进程相关\" class=\"headerlink\" title=\"进程相关\"></a>进程相关</h2><h3 id=\"如何查看正在运行的进程\"><a href=\"#如何查看正在运行的进程\" class=\"headerlink\" title=\"如何查看正在运行的进程\"></a>如何查看正在运行的进程</h3><p><code>ps -A</code>:显示所有的进程<br><code>ps -a</code>:显示终端中包括其它用户的所有进程<br><code>ps -x</code>:显示无控制终端的进程</p>\n<h3 id=\"如何关闭正在运行的进程\"><a href=\"#如何关闭正在运行的进程\" class=\"headerlink\" title=\"如何关闭正在运行的进程\"></a>如何关闭正在运行的进程</h3><p><code>kill -9 xxx</code>:xxx是进程的PID</p>\n<h2 id=\"vim相关操作\"><a href=\"#vim相关操作\" class=\"headerlink\" title=\"vim相关操作\"></a>vim相关操作</h2><h3 id=\"查找\"><a href=\"#查找\" class=\"headerlink\" title=\"查找\"></a>查找</h3><p>?pattern 光标下方查找<br>/pattern 光标上方查找</p>\n"},{"author":"ivyxjc","date":"2016-05-10T16:00:00.000Z","title":"android编程中的一些常见问题和解决办法","keywords":null,"description":"Android开发中常见的一些细节问题.","_content":"\n### 1.如何解决有些函数只能接受`String`而无法接受`Int`\n\n这样就无法使用`R.string...`.\n\n解决方法:<br>\n`getResources().getString(R.string.aaa))`\n","source":"_posts/android/2016-05-11-android-qa.md","raw":"---\nauthor: ivyxjc\ndate: 2016-05-11\ntitle: android编程中的一些常见问题和解决办法\ncategory: Android\ntags: [android,java]\nkeywords:\ndescription: Android开发中常见的一些细节问题.\n---\n\n### 1.如何解决有些函数只能接受`String`而无法接受`Int`\n\n这样就无法使用`R.string...`.\n\n解决方法:<br>\n`getResources().getString(R.string.aaa))`\n","slug":"android/2016-05-11-android-qa","published":1,"updated":"2016-10-13T06:44:09.087Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f00xx0002cwjrwen575kh","content":"<h3 id=\"1-如何解决有些函数只能接受String而无法接受Int\"><a href=\"#1-如何解决有些函数只能接受String而无法接受Int\" class=\"headerlink\" title=\"1.如何解决有些函数只能接受String而无法接受Int\"></a>1.如何解决有些函数只能接受<code>String</code>而无法接受<code>Int</code></h3><p>这样就无法使用<code>R.string...</code>.</p>\n<p>解决方法:<br><br><code>getResources().getString(R.string.aaa))</code></p>\n","excerpt":"","more":"<h3 id=\"1-如何解决有些函数只能接受String而无法接受Int\"><a href=\"#1-如何解决有些函数只能接受String而无法接受Int\" class=\"headerlink\" title=\"1.如何解决有些函数只能接受String而无法接受Int\"></a>1.如何解决有些函数只能接受<code>String</code>而无法接受<code>Int</code></h3><p>这样就无法使用<code>R.string...</code>.</p>\n<p>解决方法:<br><br><code>getResources().getString(R.string.aaa))</code></p>\n"},{"author":"ivyxjc","date":"2016-03-05T16:00:00.000Z","title":"python3注意点","keywords":null,"description":null,"_content":"\n## dict set list tuple\ntuple是不可变对象。\n\ndict的key值最好使用不可变对象，例如**字符串**。最好不要用tuple。如果tuple中含有可变对象的话，还是会有错误：```TypeError: unhashable type: 'list'```。\n\n## 函数\n\n函数的默认参数最好是**不可变对象**。\n\n如下：\n\n```python\ndef add_some(L=[]):\n    if L is None:\n        L=[]\n    L.append(\"some\")\n    return L\n```\n```\n调用\n>>>add_some[]\n['some']\n>>>add_some[]\n['some','some']\n```\n\n### 可变参数\n\n在参数前加*即可使用可变参数，如下。\n\n```python\ndef calc(*numbers):\n    sum = 0\n    for n in numbers:\n        sum = sum + n * n\n    return sum\n```\n\n```\n>>>calc(1,2,3,4)\n30\n>>>calc()\n0\n```\n\n在list，tuple前加*可以使之变为可变参数传入函数之中。\n\n```\n>>>list1=[1,2,3,4]\n>>>calc(*list1)\n30\n```","source":"_posts/python/2016-03-06-python3-注意点.md","raw":"---\nauthor: ivyxjc\ndate: 2016-03-06\ntitle: python3注意点\ncategory: Python\ntags: [python3,python]\nkeywords: \ndescription: \n---\n\n## dict set list tuple\ntuple是不可变对象。\n\ndict的key值最好使用不可变对象，例如**字符串**。最好不要用tuple。如果tuple中含有可变对象的话，还是会有错误：```TypeError: unhashable type: 'list'```。\n\n## 函数\n\n函数的默认参数最好是**不可变对象**。\n\n如下：\n\n```python\ndef add_some(L=[]):\n    if L is None:\n        L=[]\n    L.append(\"some\")\n    return L\n```\n```\n调用\n>>>add_some[]\n['some']\n>>>add_some[]\n['some','some']\n```\n\n### 可变参数\n\n在参数前加*即可使用可变参数，如下。\n\n```python\ndef calc(*numbers):\n    sum = 0\n    for n in numbers:\n        sum = sum + n * n\n    return sum\n```\n\n```\n>>>calc(1,2,3,4)\n30\n>>>calc()\n0\n```\n\n在list，tuple前加*可以使之变为可变参数传入函数之中。\n\n```\n>>>list1=[1,2,3,4]\n>>>calc(*list1)\n30\n```","slug":"python/2016-03-06-python3-注意点","published":1,"updated":"2016-10-13T06:34:38.555Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f00y60005cwjrg45i4ezi","content":"<h2 id=\"dict-set-list-tuple\"><a href=\"#dict-set-list-tuple\" class=\"headerlink\" title=\"dict set list tuple\"></a>dict set list tuple</h2><p>tuple是不可变对象。</p>\n<p>dict的key值最好使用不可变对象，例如<strong>字符串</strong>。最好不要用tuple。如果tuple中含有可变对象的话，还是会有错误：<figure class=\"highlight plain\"><figcaption><span>unhashable type: 'list'```。</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">## 函数</div><div class=\"line\"></div><div class=\"line\">函数的默认参数最好是**不可变对象**。</div><div class=\"line\"></div><div class=\"line\">如下：</div><div class=\"line\"></div><div class=\"line\">```python</div><div class=\"line\">def add_some(L=[]):</div><div class=\"line\">    if L is None:</div><div class=\"line\">        L=[]</div><div class=\"line\">    L.append(&quot;some&quot;)</div><div class=\"line\">    return L</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">调用</div><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt;add_some[]</div><div class=\"line\">[<span class=\"string\">'some'</span>]</div><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt;add_some[]</div><div class=\"line\">[<span class=\"string\">'some'</span>,<span class=\"string\">'some'</span>]</div></pre></td></tr></table></figure>\n<h3 id=\"可变参数\"><a href=\"#可变参数\" class=\"headerlink\" title=\"可变参数\"></a>可变参数</h3><p>在参数前加*即可使用可变参数，如下。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">calc</span><span class=\"params\">(*numbers)</span>:</span></div><div class=\"line\">    sum = <span class=\"number\">0</span></div><div class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> numbers:</div><div class=\"line\">        sum = sum + n * n</div><div class=\"line\">    <span class=\"keyword\">return</span> sum</div></pre></td></tr></table></figure>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt;&gt;&gt;calc(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>)</div><div class=\"line\"><span class=\"number\">30</span></div><div class=\"line\">&gt;&gt;&gt;calc()</div><div class=\"line\"><span class=\"number\">0</span></div></pre></td></tr></table></figure>\n<p>在list，tuple前加*可以使之变为可变参数传入函数之中。</p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt;&gt;&gt;list1=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</div><div class=\"line\">&gt;&gt;&gt;calc(*list1)</div><div class=\"line\"><span class=\"number\">30</span></div></pre></td></tr></table></figure>","excerpt":"","more":"<h2 id=\"dict-set-list-tuple\"><a href=\"#dict-set-list-tuple\" class=\"headerlink\" title=\"dict set list tuple\"></a>dict set list tuple</h2><p>tuple是不可变对象。</p>\n<p>dict的key值最好使用不可变对象，例如<strong>字符串</strong>。最好不要用tuple。如果tuple中含有可变对象的话，还是会有错误：<figure class=\"highlight plain\"><figcaption><span>unhashable type: 'list'```。</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">## 函数</div><div class=\"line\"></div><div class=\"line\">函数的默认参数最好是**不可变对象**。</div><div class=\"line\"></div><div class=\"line\">如下：</div><div class=\"line\"></div><div class=\"line\">```python</div><div class=\"line\">def add_some(L=[]):</div><div class=\"line\">    if L is None:</div><div class=\"line\">        L=[]</div><div class=\"line\">    L.append(&quot;some&quot;)</div><div class=\"line\">    return L</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">调用</div><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt;add_some[]</div><div class=\"line\">[<span class=\"string\">'some'</span>]</div><div class=\"line\"><span class=\"meta\">&gt;&gt;</span>&gt;add_some[]</div><div class=\"line\">[<span class=\"string\">'some'</span>,<span class=\"string\">'some'</span>]</div></pre></td></tr></table></figure>\n<h3 id=\"可变参数\"><a href=\"#可变参数\" class=\"headerlink\" title=\"可变参数\"></a>可变参数</h3><p>在参数前加*即可使用可变参数，如下。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">calc</span><span class=\"params\">(*numbers)</span>:</span></div><div class=\"line\">    sum = <span class=\"number\">0</span></div><div class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> numbers:</div><div class=\"line\">        sum = sum + n * n</div><div class=\"line\">    <span class=\"keyword\">return</span> sum</div></pre></td></tr></table></figure>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt;&gt;&gt;calc(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>)</div><div class=\"line\"><span class=\"number\">30</span></div><div class=\"line\">&gt;&gt;&gt;calc()</div><div class=\"line\"><span class=\"number\">0</span></div></pre></td></tr></table></figure>\n<p>在list，tuple前加*可以使之变为可变参数传入函数之中。</p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt;&gt;&gt;list1=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</div><div class=\"line\">&gt;&gt;&gt;calc(*list1)</div><div class=\"line\"><span class=\"number\">30</span></div></pre></td></tr></table></figure>"},{"author":"ivyxjc","date":"2016-07-02T16:00:00.000Z","title":"重装电脑时的设置问题","keywords":null,"description":null,"_content":"\n\n## 调换`Ctrl`和`Caps Lock`键\n`HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Keyboard Layout`中添加`Scancode Map`二进制项，内容为\n\n```\n0000 00 00 00 00 00 00 00 00\n0008 03 00 00 00 3A 00 1D 00\n0010 1D 00 3A 00 00 00 00 00\n```\n\n## java环境设置\n\n环境变量中添加`JAVA_HOME`:`C:\\Program Files\\Java\\jdk1.8.0_91`\n\n`Path`中添加`$JAVA_HOME$\\jre\\bin`和`$JAVA_HOME$\\bin`\n\n## python环境变量设置\n`path`中添加`c:\\python35`\n\n## jetbrains系列idea设置\n\n更改程序主目录下`bin/idea.properties`中的内容\n","source":"_posts/效率/2016-07-03-Reset-PC.md","raw":"---\nauthor: ivyxjc\ndate: 2016-07-03\ntitle: 重装电脑时的设置问题\ncategory: 效率\ntags: [faq]\nkeywords:\ndescription:\n---\n\n\n## 调换`Ctrl`和`Caps Lock`键\n`HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Keyboard Layout`中添加`Scancode Map`二进制项，内容为\n\n```\n0000 00 00 00 00 00 00 00 00\n0008 03 00 00 00 3A 00 1D 00\n0010 1D 00 3A 00 00 00 00 00\n```\n\n## java环境设置\n\n环境变量中添加`JAVA_HOME`:`C:\\Program Files\\Java\\jdk1.8.0_91`\n\n`Path`中添加`$JAVA_HOME$\\jre\\bin`和`$JAVA_HOME$\\bin`\n\n## python环境变量设置\n`path`中添加`c:\\python35`\n\n## jetbrains系列idea设置\n\n更改程序主目录下`bin/idea.properties`中的内容\n","slug":"效率/2016-07-03-Reset-PC","published":1,"updated":"2016-10-13T06:34:38.600Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f00y80006cwjrs3f9u8gh","content":"<h2 id=\"调换Ctrl和Caps-Lock键\"><a href=\"#调换Ctrl和Caps-Lock键\" class=\"headerlink\" title=\"调换Ctrl和Caps Lock键\"></a>调换<code>Ctrl</code>和<code>Caps Lock</code>键</h2><p><code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Keyboard Layout</code>中添加<code>Scancode Map</code>二进制项，内容为</p>\n<figure class=\"highlight basic\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"symbol\">0000 </span><span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span></div><div class=\"line\"><span class=\"symbol\">0008 </span><span class=\"number\">03</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">3</span>A <span class=\"number\">00</span> <span class=\"number\">1D</span> <span class=\"number\">00</span></div><div class=\"line\"><span class=\"symbol\">0010 </span><span class=\"number\">1D</span> <span class=\"number\">00</span> <span class=\"number\">3</span>A <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span></div></pre></td></tr></table></figure>\n<h2 id=\"java环境设置\"><a href=\"#java环境设置\" class=\"headerlink\" title=\"java环境设置\"></a>java环境设置</h2><p>环境变量中添加<code>JAVA_HOME</code>:<code>C:\\Program Files\\Java\\jdk1.8.0_91</code></p>\n<p><code>Path</code>中添加<code>$JAVA_HOME$\\jre\\bin</code>和<code>$JAVA_HOME$\\bin</code></p>\n<h2 id=\"python环境变量设置\"><a href=\"#python环境变量设置\" class=\"headerlink\" title=\"python环境变量设置\"></a>python环境变量设置</h2><p><code>path</code>中添加<code>c:\\python35</code></p>\n<h2 id=\"jetbrains系列idea设置\"><a href=\"#jetbrains系列idea设置\" class=\"headerlink\" title=\"jetbrains系列idea设置\"></a>jetbrains系列idea设置</h2><p>更改程序主目录下<code>bin/idea.properties</code>中的内容</p>\n","excerpt":"","more":"<h2 id=\"调换Ctrl和Caps-Lock键\"><a href=\"#调换Ctrl和Caps-Lock键\" class=\"headerlink\" title=\"调换Ctrl和Caps Lock键\"></a>调换<code>Ctrl</code>和<code>Caps Lock</code>键</h2><p><code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Keyboard Layout</code>中添加<code>Scancode Map</code>二进制项，内容为</p>\n<figure class=\"highlight basic\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"symbol\">0000 </span><span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span></div><div class=\"line\"><span class=\"symbol\">0008 </span><span class=\"number\">03</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">3</span>A <span class=\"number\">00</span> <span class=\"number\">1D</span> <span class=\"number\">00</span></div><div class=\"line\"><span class=\"symbol\">0010 </span><span class=\"number\">1D</span> <span class=\"number\">00</span> <span class=\"number\">3</span>A <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span> <span class=\"number\">00</span></div></pre></td></tr></table></figure>\n<h2 id=\"java环境设置\"><a href=\"#java环境设置\" class=\"headerlink\" title=\"java环境设置\"></a>java环境设置</h2><p>环境变量中添加<code>JAVA_HOME</code>:<code>C:\\Program Files\\Java\\jdk1.8.0_91</code></p>\n<p><code>Path</code>中添加<code>$JAVA_HOME$\\jre\\bin</code>和<code>$JAVA_HOME$\\bin</code></p>\n<h2 id=\"python环境变量设置\"><a href=\"#python环境变量设置\" class=\"headerlink\" title=\"python环境变量设置\"></a>python环境变量设置</h2><p><code>path</code>中添加<code>c:\\python35</code></p>\n<h2 id=\"jetbrains系列idea设置\"><a href=\"#jetbrains系列idea设置\" class=\"headerlink\" title=\"jetbrains系列idea设置\"></a>jetbrains系列idea设置</h2><p>更改程序主目录下<code>bin/idea.properties</code>中的内容</p>\n"},{"author":"ivyxjc","date":"2016-07-05T16:00:00.000Z","title":"代理相关","keywords":null,"description":null,"_content":"\n## github使用代理\n\ngit添加代理：\n\n```git\ngit config --global http.proxy 'http://127.0.0.1:1080'\ngit config --global https.proxy 'http://127.0.0.1:1080'\n```\n","source":"_posts/效率/2016-07-06-proxy.md","raw":"---\nauthor: ivyxjc\ndate: 2016-07-06\ntitle: 代理相关\ncategory: 效率\ntags: [faq]\nkeywords:\ndescription:\n---\n\n## github使用代理\n\ngit添加代理：\n\n```git\ngit config --global http.proxy 'http://127.0.0.1:1080'\ngit config --global https.proxy 'http://127.0.0.1:1080'\n```\n","slug":"效率/2016-07-06-proxy","published":1,"updated":"2016-10-13T06:34:38.603Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f00yc0007cwjrvexfk9lu","content":"<h2 id=\"github使用代理\"><a href=\"#github使用代理\" class=\"headerlink\" title=\"github使用代理\"></a>github使用代理</h2><p>git添加代理：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git config --global http.proxy &apos;http://127.0.0.1:1080&apos;</div><div class=\"line\">git config --global https.proxy &apos;http://127.0.0.1:1080&apos;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h2 id=\"github使用代理\"><a href=\"#github使用代理\" class=\"headerlink\" title=\"github使用代理\"></a>github使用代理</h2><p>git添加代理：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git config --global http.proxy &apos;http://127.0.0.1:1080&apos;</div><div class=\"line\">git config --global https.proxy &apos;http://127.0.0.1:1080&apos;</div></pre></td></tr></table></figure>\n"},{"author":"ivyxjc","date":"2016-04-20T16:00:00.000Z","title":"LeetCode 343,122 整数拆分求积 递增区间寻找","keywords":null,"description":null,"_content":"\n## 122 Best Time to Buy and Sell Stock II\n\nSay you have an array for which the ith element is the price of a given stock on day i.\n\nDesign an algorithm to find the maximum profit. You may complete as many transactions as you like (ie, buy one and sell one share of the stock multiple times). However, you may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).\n\n\n已知物品每天的价格，讨论通过买卖可以赚到的最多利润。卖之前必须买，再一次买之前必须卖掉。\n\n寻找所有递增区间，区间尾头之差即单次利润。\n\n```java\npublic int maxProfit(int[] prices) {\n    int maxProfit=0;\n    for(int i=0;i<prices.length;){\n        int plus=1;\n        int flag=0;\n\n        while (i+plus<prices.length&&prices[i+plus-1]<prices[i+plus]){\n            plus+=1;\n            flag=1;\n        }\n        if(flag==1){\n            maxProfit+=prices[i+plus-1]-prices[i];\n        }\n        i+=plus;\n    }\n    return maxProfit;\n}\n```\n\n## 343 Integer Break\n\n给一个自然数n，把它拆分为若干个数的和，记这若干个数的乘积为M，求M的最大值。\n\n方法：尽可能将这个数拆分成3，原因下方解释。\n\n\n```java\npublic int integerBreak(int n) {\n    if(n==2){\n        return 1;\n    }\n    if(n==3){\n        return 2;\n    }\n    if(n==4){\n        return 4;\n    }\n    int mod=n%3;\n    int res=0;\n    res=(int)Math.pow(3,n/3);\n    System.out.println(res);\n    if(mod==1){\n        res=res/3*4;\n        return res;\n    }\n\n    if(mod==2){\n        res=res*2;\n        return res;\n    }\n    return res;\n}\n```\n\n### 证明\n\n因为有不等式\n$$\\sqrt[k]{x_1x_2x_3x_4...x_k}\\leq \\frac{x_1x_2x_3x_4...x_k}{k}$$\n\n设$$$n=x_1+x_2+x_3+x_4+x_5+...+x_k$$$，$$$P=x_1x_2x_3x_4x_5+...x_k$$$。\n\n所以有$$$P \\leq (\\frac{n}{k})^k$$$","source":"_posts/OJ/LeetCode/2016-04-21-medium-343-122.md","raw":"---\nauthor: ivyxjc\ndate: 2016-04-21\ntitle: LeetCode 343,122 整数拆分求积 递增区间寻找\ncategory: OJ\ntags: []\nkeywords:\ndescription:\n---\n\n## 122 Best Time to Buy and Sell Stock II\n\nSay you have an array for which the ith element is the price of a given stock on day i.\n\nDesign an algorithm to find the maximum profit. You may complete as many transactions as you like (ie, buy one and sell one share of the stock multiple times). However, you may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).\n\n\n已知物品每天的价格，讨论通过买卖可以赚到的最多利润。卖之前必须买，再一次买之前必须卖掉。\n\n寻找所有递增区间，区间尾头之差即单次利润。\n\n```java\npublic int maxProfit(int[] prices) {\n    int maxProfit=0;\n    for(int i=0;i<prices.length;){\n        int plus=1;\n        int flag=0;\n\n        while (i+plus<prices.length&&prices[i+plus-1]<prices[i+plus]){\n            plus+=1;\n            flag=1;\n        }\n        if(flag==1){\n            maxProfit+=prices[i+plus-1]-prices[i];\n        }\n        i+=plus;\n    }\n    return maxProfit;\n}\n```\n\n## 343 Integer Break\n\n给一个自然数n，把它拆分为若干个数的和，记这若干个数的乘积为M，求M的最大值。\n\n方法：尽可能将这个数拆分成3，原因下方解释。\n\n\n```java\npublic int integerBreak(int n) {\n    if(n==2){\n        return 1;\n    }\n    if(n==3){\n        return 2;\n    }\n    if(n==4){\n        return 4;\n    }\n    int mod=n%3;\n    int res=0;\n    res=(int)Math.pow(3,n/3);\n    System.out.println(res);\n    if(mod==1){\n        res=res/3*4;\n        return res;\n    }\n\n    if(mod==2){\n        res=res*2;\n        return res;\n    }\n    return res;\n}\n```\n\n### 证明\n\n因为有不等式\n$$\\sqrt[k]{x_1x_2x_3x_4...x_k}\\leq \\frac{x_1x_2x_3x_4...x_k}{k}$$\n\n设$$$n=x_1+x_2+x_3+x_4+x_5+...+x_k$$$，$$$P=x_1x_2x_3x_4x_5+...x_k$$$。\n\n所以有$$$P \\leq (\\frac{n}{k})^k$$$","slug":"OJ/LeetCode/2016-04-21-medium-343-122","published":1,"updated":"2016-10-13T06:34:38.541Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f00z7000ucwjr5bz1m9in","content":"<h2 id=\"122-Best-Time-to-Buy-and-Sell-Stock-II\"><a href=\"#122-Best-Time-to-Buy-and-Sell-Stock-II\" class=\"headerlink\" title=\"122 Best Time to Buy and Sell Stock II\"></a>122 Best Time to Buy and Sell Stock II</h2><p>Say you have an array for which the ith element is the price of a given stock on day i.</p>\n<p>Design an algorithm to find the maximum profit. You may complete as many transactions as you like (ie, buy one and sell one share of the stock multiple times). However, you may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).</p>\n<p>已知物品每天的价格，讨论通过买卖可以赚到的最多利润。卖之前必须买，再一次买之前必须卖掉。</p>\n<p>寻找所有递增区间，区间尾头之差即单次利润。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">maxProfit</span><span class=\"params\">(<span class=\"keyword\">int</span>[] prices)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> maxProfit=<span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;prices.length;)&#123;</div><div class=\"line\">        <span class=\"keyword\">int</span> plus=<span class=\"number\">1</span>;</div><div class=\"line\">        <span class=\"keyword\">int</span> flag=<span class=\"number\">0</span>;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">while</span> (i+plus&lt;prices.length&amp;&amp;prices[i+plus-<span class=\"number\">1</span>]&lt;prices[i+plus])&#123;</div><div class=\"line\">            plus+=<span class=\"number\">1</span>;</div><div class=\"line\">            flag=<span class=\"number\">1</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span>(flag==<span class=\"number\">1</span>)&#123;</div><div class=\"line\">            maxProfit+=prices[i+plus-<span class=\"number\">1</span>]-prices[i];</div><div class=\"line\">        &#125;</div><div class=\"line\">        i+=plus;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> maxProfit;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"343-Integer-Break\"><a href=\"#343-Integer-Break\" class=\"headerlink\" title=\"343 Integer Break\"></a>343 Integer Break</h2><p>给一个自然数n，把它拆分为若干个数的和，记这若干个数的乘积为M，求M的最大值。</p>\n<p>方法：尽可能将这个数拆分成3，原因下方解释。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">integerBreak</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span>(n==<span class=\"number\">2</span>)&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">if</span>(n==<span class=\"number\">3</span>)&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">2</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">if</span>(n==<span class=\"number\">4</span>)&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">4</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">int</span> mod=n%<span class=\"number\">3</span>;</div><div class=\"line\">    <span class=\"keyword\">int</span> res=<span class=\"number\">0</span>;</div><div class=\"line\">    res=(<span class=\"keyword\">int</span>)Math.pow(<span class=\"number\">3</span>,n/<span class=\"number\">3</span>);</div><div class=\"line\">    System.out.println(res);</div><div class=\"line\">    <span class=\"keyword\">if</span>(mod==<span class=\"number\">1</span>)&#123;</div><div class=\"line\">        res=res/<span class=\"number\">3</span>*<span class=\"number\">4</span>;</div><div class=\"line\">        <span class=\"keyword\">return</span> res;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">if</span>(mod==<span class=\"number\">2</span>)&#123;</div><div class=\"line\">        res=res*<span class=\"number\">2</span>;</div><div class=\"line\">        <span class=\"keyword\">return</span> res;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> res;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"证明\"><a href=\"#证明\" class=\"headerlink\" title=\"证明\"></a>证明</h3><p>因为有不等式<br>$$\\sqrt[k]{x_1x_2x_3x_4…x_k}\\leq \\frac{x_1x_2x_3x_4…x_k}{k}$$</p>\n<p>设$$$n=x_1+x_2+x_3+x_4+x_5+…+x_k$$$，$$$P=x_1x_2x_3x_4x_5+…x_k$$$。</p>\n<p>所以有$$$P \\leq (\\frac{n}{k})^k$$$</p>\n","excerpt":"","more":"<h2 id=\"122-Best-Time-to-Buy-and-Sell-Stock-II\"><a href=\"#122-Best-Time-to-Buy-and-Sell-Stock-II\" class=\"headerlink\" title=\"122 Best Time to Buy and Sell Stock II\"></a>122 Best Time to Buy and Sell Stock II</h2><p>Say you have an array for which the ith element is the price of a given stock on day i.</p>\n<p>Design an algorithm to find the maximum profit. You may complete as many transactions as you like (ie, buy one and sell one share of the stock multiple times). However, you may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).</p>\n<p>已知物品每天的价格，讨论通过买卖可以赚到的最多利润。卖之前必须买，再一次买之前必须卖掉。</p>\n<p>寻找所有递增区间，区间尾头之差即单次利润。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">maxProfit</span><span class=\"params\">(<span class=\"keyword\">int</span>[] prices)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> maxProfit=<span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;prices.length;)&#123;</div><div class=\"line\">        <span class=\"keyword\">int</span> plus=<span class=\"number\">1</span>;</div><div class=\"line\">        <span class=\"keyword\">int</span> flag=<span class=\"number\">0</span>;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">while</span> (i+plus&lt;prices.length&amp;&amp;prices[i+plus-<span class=\"number\">1</span>]&lt;prices[i+plus])&#123;</div><div class=\"line\">            plus+=<span class=\"number\">1</span>;</div><div class=\"line\">            flag=<span class=\"number\">1</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span>(flag==<span class=\"number\">1</span>)&#123;</div><div class=\"line\">            maxProfit+=prices[i+plus-<span class=\"number\">1</span>]-prices[i];</div><div class=\"line\">        &#125;</div><div class=\"line\">        i+=plus;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> maxProfit;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"343-Integer-Break\"><a href=\"#343-Integer-Break\" class=\"headerlink\" title=\"343 Integer Break\"></a>343 Integer Break</h2><p>给一个自然数n，把它拆分为若干个数的和，记这若干个数的乘积为M，求M的最大值。</p>\n<p>方法：尽可能将这个数拆分成3，原因下方解释。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">integerBreak</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span>(n==<span class=\"number\">2</span>)&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">if</span>(n==<span class=\"number\">3</span>)&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">2</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">if</span>(n==<span class=\"number\">4</span>)&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">4</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">int</span> mod=n%<span class=\"number\">3</span>;</div><div class=\"line\">    <span class=\"keyword\">int</span> res=<span class=\"number\">0</span>;</div><div class=\"line\">    res=(<span class=\"keyword\">int</span>)Math.pow(<span class=\"number\">3</span>,n/<span class=\"number\">3</span>);</div><div class=\"line\">    System.out.println(res);</div><div class=\"line\">    <span class=\"keyword\">if</span>(mod==<span class=\"number\">1</span>)&#123;</div><div class=\"line\">        res=res/<span class=\"number\">3</span>*<span class=\"number\">4</span>;</div><div class=\"line\">        <span class=\"keyword\">return</span> res;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">if</span>(mod==<span class=\"number\">2</span>)&#123;</div><div class=\"line\">        res=res*<span class=\"number\">2</span>;</div><div class=\"line\">        <span class=\"keyword\">return</span> res;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> res;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"证明\"><a href=\"#证明\" class=\"headerlink\" title=\"证明\"></a>证明</h3><p>因为有不等式<br>$$\\sqrt[k]{x_1x_2x_3x_4…x_k}\\leq \\frac{x_1x_2x_3x_4…x_k}{k}$$</p>\n<p>设$$$n=x_1+x_2+x_3+x_4+x_5+…+x_k$$$，$$$P=x_1x_2x_3x_4x_5+…x_k$$$。</p>\n<p>所以有$$$P \\leq (\\frac{n}{k})^k$$$</p>\n"},{"author":"ivyxjc","date":"2016-04-20T16:00:00.000Z","title":"LeetCode SingleNum 136,127,260","keywords":null,"description":null,"_content":"\n这三题题意基本一样。\n1.136 题：每个数字出现两遍，一个数字例外。找出这个数字。\n2.137 题：每个数字出现三遍，一个数字例外。找出这个数字。\n3.260 题：每个数字出现两遍，两个数字例外。找出这个数字。\n\n## 使用排序的方法\n以136题为例：\n\n这种方法先将给的数组`int[] num`排序，因为数字相同则会在一起，则只需要比较`num[i]`和`nums[i+1]`若不相同，则返回`num[i]`其中`i=i+2`。\n特殊情况：\n数字出现在最末尾。\n\n```java\npublic int singleNumber(int[] nums) {\n    sort(nums);\n    int res=0;\n    for(int i=0;i<nums.length-1;){\n        if(nums[i]==nums[i+1]){\n            i+=2;\n        }else{\n            res=nums[i];\n            i+=2;\n            return res;\n        }\n    }\n    return nums[nums.length-1];\n}\n```\n\n## 使用位操作的方法\n\n### 136题\n\n因为数字会出现两次，所以对所有数字取**异或**会使得最后的数字即所求的数字。\n\n\n```java\npublic int singleNumber(int[] nums) {\n    int diff=0;\n    for(int i:nums){\n        diff=diff^i;\n    }\n    int res=diff;\n    return res;\n}\n```\n\n### 137题\n\n因为每个数字会重复三遍，所以统计32位中每一位上1出现的次数，若次数不为3的整数倍，则说明所求数字该位为1。\n\n```java\npublic int singleNumber(int[] nums) {\n    int [] count=new int[Integer.BYTES*8];\n    int res=0;\n    for(int i=0;i<count.length;i++){\n        int tmp=1<<i;\n        for(int j=0;j<nums.length;j++){\n            if((nums[j]&tmp)!=0){\n                count[i]++;\n            }\n        }\n        if(count[i]%3!=0){\n            res=res|tmp;\n        }\n    }\n\n    return res;\n}\n\n```\n\n\n### 260题\n\n同样是先对所有数字取异或，因为有两个数字只出现了一次，所以最终的结果`diff`是这两个数字的异或值。\n\n因为这两个数字不相同，所以这两个数字的二进制必定有某一位不相同。假设在`Xth`位上，一个数为0，另一个数为1。\n\n那么把所有数字分为两类，一类是在`Xth`为0的，另一类是在`Xth`为1的。\n\n关键是如何找到`Xth`位。方法时`diff ^=-diff`。\n该式子会找出最右侧的两个数字不同的位置，并将该为置为1，其余位置为0。其实就是找`diff`中为1的最右边的位置。\n\n\n```java\npublic int[] singleNumber(int[] nums) {\n    int diff = 0;\n    for (int num : nums) {\n        diff ^= num;\n    }\n\n    diff &= -diff;\n\n\n    int[] rets = {0, 0};\n    \n    for (int num : nums)\n    {\n    //将数字分为两类，一类为某一位为0，另一类为某一位为1\n        if ((num & diff) == 0)\n        {\n            rets[0] ^= num;\n        }\n        else\n        {\n            rets[1] ^= num;\n        }\n    }\n    return rets;\n}\n```\n\n\n","source":"_posts/OJ/LeetCode/2016-04-21-medium-SingleNum.md","raw":"---\nauthor: ivyxjc\ndate: 2016-04-21\ntitle: LeetCode SingleNum 136,127,260\ncategory: OJ\ntags: [quicksort,sort,bit manipulation]\nkeywords:\ndescription:\n---\n\n这三题题意基本一样。\n1.136 题：每个数字出现两遍，一个数字例外。找出这个数字。\n2.137 题：每个数字出现三遍，一个数字例外。找出这个数字。\n3.260 题：每个数字出现两遍，两个数字例外。找出这个数字。\n\n## 使用排序的方法\n以136题为例：\n\n这种方法先将给的数组`int[] num`排序，因为数字相同则会在一起，则只需要比较`num[i]`和`nums[i+1]`若不相同，则返回`num[i]`其中`i=i+2`。\n特殊情况：\n数字出现在最末尾。\n\n```java\npublic int singleNumber(int[] nums) {\n    sort(nums);\n    int res=0;\n    for(int i=0;i<nums.length-1;){\n        if(nums[i]==nums[i+1]){\n            i+=2;\n        }else{\n            res=nums[i];\n            i+=2;\n            return res;\n        }\n    }\n    return nums[nums.length-1];\n}\n```\n\n## 使用位操作的方法\n\n### 136题\n\n因为数字会出现两次，所以对所有数字取**异或**会使得最后的数字即所求的数字。\n\n\n```java\npublic int singleNumber(int[] nums) {\n    int diff=0;\n    for(int i:nums){\n        diff=diff^i;\n    }\n    int res=diff;\n    return res;\n}\n```\n\n### 137题\n\n因为每个数字会重复三遍，所以统计32位中每一位上1出现的次数，若次数不为3的整数倍，则说明所求数字该位为1。\n\n```java\npublic int singleNumber(int[] nums) {\n    int [] count=new int[Integer.BYTES*8];\n    int res=0;\n    for(int i=0;i<count.length;i++){\n        int tmp=1<<i;\n        for(int j=0;j<nums.length;j++){\n            if((nums[j]&tmp)!=0){\n                count[i]++;\n            }\n        }\n        if(count[i]%3!=0){\n            res=res|tmp;\n        }\n    }\n\n    return res;\n}\n\n```\n\n\n### 260题\n\n同样是先对所有数字取异或，因为有两个数字只出现了一次，所以最终的结果`diff`是这两个数字的异或值。\n\n因为这两个数字不相同，所以这两个数字的二进制必定有某一位不相同。假设在`Xth`位上，一个数为0，另一个数为1。\n\n那么把所有数字分为两类，一类是在`Xth`为0的，另一类是在`Xth`为1的。\n\n关键是如何找到`Xth`位。方法时`diff ^=-diff`。\n该式子会找出最右侧的两个数字不同的位置，并将该为置为1，其余位置为0。其实就是找`diff`中为1的最右边的位置。\n\n\n```java\npublic int[] singleNumber(int[] nums) {\n    int diff = 0;\n    for (int num : nums) {\n        diff ^= num;\n    }\n\n    diff &= -diff;\n\n\n    int[] rets = {0, 0};\n    \n    for (int num : nums)\n    {\n    //将数字分为两类，一类为某一位为0，另一类为某一位为1\n        if ((num & diff) == 0)\n        {\n            rets[0] ^= num;\n        }\n        else\n        {\n            rets[1] ^= num;\n        }\n    }\n    return rets;\n}\n```\n\n\n","slug":"OJ/LeetCode/2016-04-21-medium-SingleNum","published":1,"updated":"2016-10-13T06:34:38.543Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f00zc000vcwjrrkqgzp7n","content":"<p>这三题题意基本一样。<br>1.136 题：每个数字出现两遍，一个数字例外。找出这个数字。<br>2.137 题：每个数字出现三遍，一个数字例外。找出这个数字。<br>3.260 题：每个数字出现两遍，两个数字例外。找出这个数字。</p>\n<h2 id=\"使用排序的方法\"><a href=\"#使用排序的方法\" class=\"headerlink\" title=\"使用排序的方法\"></a>使用排序的方法</h2><p>以136题为例：</p>\n<p>这种方法先将给的数组<code>int[] num</code>排序，因为数字相同则会在一起，则只需要比较<code>num[i]</code>和<code>nums[i+1]</code>若不相同，则返回<code>num[i]</code>其中<code>i=i+2</code>。<br>特殊情况：<br>数字出现在最末尾。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">singleNumber</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums)</span> </span>&#123;</div><div class=\"line\">    sort(nums);</div><div class=\"line\">    <span class=\"keyword\">int</span> res=<span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;nums.length-<span class=\"number\">1</span>;)&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(nums[i]==nums[i+<span class=\"number\">1</span>])&#123;</div><div class=\"line\">            i+=<span class=\"number\">2</span>;</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">            res=nums[i];</div><div class=\"line\">            i+=<span class=\"number\">2</span>;</div><div class=\"line\">            <span class=\"keyword\">return</span> res;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> nums[nums.length-<span class=\"number\">1</span>];</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"使用位操作的方法\"><a href=\"#使用位操作的方法\" class=\"headerlink\" title=\"使用位操作的方法\"></a>使用位操作的方法</h2><h3 id=\"136题\"><a href=\"#136题\" class=\"headerlink\" title=\"136题\"></a>136题</h3><p>因为数字会出现两次，所以对所有数字取<strong>异或</strong>会使得最后的数字即所求的数字。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">singleNumber</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> diff=<span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i:nums)&#123;</div><div class=\"line\">        diff=diff^i;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">int</span> res=diff;</div><div class=\"line\">    <span class=\"keyword\">return</span> res;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"137题\"><a href=\"#137题\" class=\"headerlink\" title=\"137题\"></a>137题</h3><p>因为每个数字会重复三遍，所以统计32位中每一位上1出现的次数，若次数不为3的整数倍，则说明所求数字该位为1。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">singleNumber</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> [] count=<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[Integer.BYTES*<span class=\"number\">8</span>];</div><div class=\"line\">    <span class=\"keyword\">int</span> res=<span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;count.length;i++)&#123;</div><div class=\"line\">        <span class=\"keyword\">int</span> tmp=<span class=\"number\">1</span>&lt;&lt;i;</div><div class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;nums.length;j++)&#123;</div><div class=\"line\">            <span class=\"keyword\">if</span>((nums[j]&amp;tmp)!=<span class=\"number\">0</span>)&#123;</div><div class=\"line\">                count[i]++;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span>(count[i]%<span class=\"number\">3</span>!=<span class=\"number\">0</span>)&#123;</div><div class=\"line\">            res=res|tmp;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> res;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"260题\"><a href=\"#260题\" class=\"headerlink\" title=\"260题\"></a>260题</h3><p>同样是先对所有数字取异或，因为有两个数字只出现了一次，所以最终的结果<code>diff</code>是这两个数字的异或值。</p>\n<p>因为这两个数字不相同，所以这两个数字的二进制必定有某一位不相同。假设在<code>Xth</code>位上，一个数为0，另一个数为1。</p>\n<p>那么把所有数字分为两类，一类是在<code>Xth</code>为0的，另一类是在<code>Xth</code>为1的。</p>\n<p>关键是如何找到<code>Xth</code>位。方法时<code>diff ^=-diff</code>。<br>该式子会找出最右侧的两个数字不同的位置，并将该为置为1，其余位置为0。其实就是找<code>diff</code>中为1的最右边的位置。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span>[] singleNumber(<span class=\"keyword\">int</span>[] nums) &#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> diff = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> num : nums) &#123;</div><div class=\"line\">        diff ^= num;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    diff &amp;= -diff;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">int</span>[] rets = &#123;<span class=\"number\">0</span>, <span class=\"number\">0</span>&#125;;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> num : nums)</div><div class=\"line\">    &#123;</div><div class=\"line\">    <span class=\"comment\">//将数字分为两类，一类为某一位为0，另一类为某一位为1</span></div><div class=\"line\">        <span class=\"keyword\">if</span> ((num &amp; diff) == <span class=\"number\">0</span>)</div><div class=\"line\">        &#123;</div><div class=\"line\">            rets[<span class=\"number\">0</span>] ^= num;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">else</span></div><div class=\"line\">        &#123;</div><div class=\"line\">            rets[<span class=\"number\">1</span>] ^= num;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> rets;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>这三题题意基本一样。<br>1.136 题：每个数字出现两遍，一个数字例外。找出这个数字。<br>2.137 题：每个数字出现三遍，一个数字例外。找出这个数字。<br>3.260 题：每个数字出现两遍，两个数字例外。找出这个数字。</p>\n<h2 id=\"使用排序的方法\"><a href=\"#使用排序的方法\" class=\"headerlink\" title=\"使用排序的方法\"></a>使用排序的方法</h2><p>以136题为例：</p>\n<p>这种方法先将给的数组<code>int[] num</code>排序，因为数字相同则会在一起，则只需要比较<code>num[i]</code>和<code>nums[i+1]</code>若不相同，则返回<code>num[i]</code>其中<code>i=i+2</code>。<br>特殊情况：<br>数字出现在最末尾。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">singleNumber</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums)</span> </span>&#123;</div><div class=\"line\">    sort(nums);</div><div class=\"line\">    <span class=\"keyword\">int</span> res=<span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;nums.length-<span class=\"number\">1</span>;)&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(nums[i]==nums[i+<span class=\"number\">1</span>])&#123;</div><div class=\"line\">            i+=<span class=\"number\">2</span>;</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">            res=nums[i];</div><div class=\"line\">            i+=<span class=\"number\">2</span>;</div><div class=\"line\">            <span class=\"keyword\">return</span> res;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> nums[nums.length-<span class=\"number\">1</span>];</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"使用位操作的方法\"><a href=\"#使用位操作的方法\" class=\"headerlink\" title=\"使用位操作的方法\"></a>使用位操作的方法</h2><h3 id=\"136题\"><a href=\"#136题\" class=\"headerlink\" title=\"136题\"></a>136题</h3><p>因为数字会出现两次，所以对所有数字取<strong>异或</strong>会使得最后的数字即所求的数字。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">singleNumber</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> diff=<span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i:nums)&#123;</div><div class=\"line\">        diff=diff^i;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">int</span> res=diff;</div><div class=\"line\">    <span class=\"keyword\">return</span> res;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"137题\"><a href=\"#137题\" class=\"headerlink\" title=\"137题\"></a>137题</h3><p>因为每个数字会重复三遍，所以统计32位中每一位上1出现的次数，若次数不为3的整数倍，则说明所求数字该位为1。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">singleNumber</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> [] count=<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[Integer.BYTES*<span class=\"number\">8</span>];</div><div class=\"line\">    <span class=\"keyword\">int</span> res=<span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;count.length;i++)&#123;</div><div class=\"line\">        <span class=\"keyword\">int</span> tmp=<span class=\"number\">1</span>&lt;&lt;i;</div><div class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;nums.length;j++)&#123;</div><div class=\"line\">            <span class=\"keyword\">if</span>((nums[j]&amp;tmp)!=<span class=\"number\">0</span>)&#123;</div><div class=\"line\">                count[i]++;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span>(count[i]%<span class=\"number\">3</span>!=<span class=\"number\">0</span>)&#123;</div><div class=\"line\">            res=res|tmp;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> res;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"260题\"><a href=\"#260题\" class=\"headerlink\" title=\"260题\"></a>260题</h3><p>同样是先对所有数字取异或，因为有两个数字只出现了一次，所以最终的结果<code>diff</code>是这两个数字的异或值。</p>\n<p>因为这两个数字不相同，所以这两个数字的二进制必定有某一位不相同。假设在<code>Xth</code>位上，一个数为0，另一个数为1。</p>\n<p>那么把所有数字分为两类，一类是在<code>Xth</code>为0的，另一类是在<code>Xth</code>为1的。</p>\n<p>关键是如何找到<code>Xth</code>位。方法时<code>diff ^=-diff</code>。<br>该式子会找出最右侧的两个数字不同的位置，并将该为置为1，其余位置为0。其实就是找<code>diff</code>中为1的最右边的位置。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span>[] singleNumber(<span class=\"keyword\">int</span>[] nums) &#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> diff = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> num : nums) &#123;</div><div class=\"line\">        diff ^= num;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    diff &amp;= -diff;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">int</span>[] rets = &#123;<span class=\"number\">0</span>, <span class=\"number\">0</span>&#125;;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> num : nums)</div><div class=\"line\">    &#123;</div><div class=\"line\">    <span class=\"comment\">//将数字分为两类，一类为某一位为0，另一类为某一位为1</span></div><div class=\"line\">        <span class=\"keyword\">if</span> ((num &amp; diff) == <span class=\"number\">0</span>)</div><div class=\"line\">        &#123;</div><div class=\"line\">            rets[<span class=\"number\">0</span>] ^= num;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">else</span></div><div class=\"line\">        &#123;</div><div class=\"line\">            rets[<span class=\"number\">1</span>] ^= num;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> rets;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"},{"author":"ivyxjc","date":"2016-04-25T16:00:00.000Z","title":"Maximum Depth of Binary Tree","keywords":null,"description":null,"_content":"\n## 寻找二叉树最长路径\n\n\n###　递归的方法\n\n1.节点为`null`时，返回深度为0\n2.节点的左右子节点中有一个为`null`时，返回`1+maxDepth(root.left(or root.right))`\n3.若节点的左右子节点都不为`null`时，返回两者中大的那一个。\n\n```java\npublic int maxDepth(TreeNode root) {\n        if(root==null){\n            return 0;\n        }else if(root.left!=null&& root.right!=null){\n            return max(1+maxDepth(root.left),1+maxDepth(root.right));\n        }else if(root.left==null){\n            return 1+maxDepth(root.right);\n        }else{\n            return 1+maxDepth(root.left);\n        }\n    }\n\n    public int max(int a,int b){\n        return (a>b?a:b);\n    }\n```\n\n","source":"_posts/OJ/LeetCode/2016-04-26-easy-MaximunDepthofBinary.md","raw":"---\nauthor: ivyxjc\ndate: 2016-04-26\ntitle: Maximum Depth of Binary Tree\ncategory: OJ\ntags: [recursion]\nkeywords:\ndescription:\n---\n\n## 寻找二叉树最长路径\n\n\n###　递归的方法\n\n1.节点为`null`时，返回深度为0\n2.节点的左右子节点中有一个为`null`时，返回`1+maxDepth(root.left(or root.right))`\n3.若节点的左右子节点都不为`null`时，返回两者中大的那一个。\n\n```java\npublic int maxDepth(TreeNode root) {\n        if(root==null){\n            return 0;\n        }else if(root.left!=null&& root.right!=null){\n            return max(1+maxDepth(root.left),1+maxDepth(root.right));\n        }else if(root.left==null){\n            return 1+maxDepth(root.right);\n        }else{\n            return 1+maxDepth(root.left);\n        }\n    }\n\n    public int max(int a,int b){\n        return (a>b?a:b);\n    }\n```\n\n","slug":"OJ/LeetCode/2016-04-26-easy-MaximunDepthofBinary","published":1,"updated":"2016-10-13T06:34:38.548Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f00ze000xcwjr4fcgqx3z","content":"<h2 id=\"寻找二叉树最长路径\"><a href=\"#寻找二叉树最长路径\" class=\"headerlink\" title=\"寻找二叉树最长路径\"></a>寻找二叉树最长路径</h2><p>###　递归的方法</p>\n<p>1.节点为<code>null</code>时，返回深度为0<br>2.节点的左右子节点中有一个为<code>null</code>时，返回<code>1+maxDepth(root.left(or root.right))</code><br>3.若节点的左右子节点都不为<code>null</code>时，返回两者中大的那一个。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">maxDepth</span><span class=\"params\">(TreeNode root)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(root==<span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(root.left!=<span class=\"keyword\">null</span>&amp;&amp; root.right!=<span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> max(<span class=\"number\">1</span>+maxDepth(root.left),<span class=\"number\">1</span>+maxDepth(root.right));</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(root.left==<span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">1</span>+maxDepth(root.right);</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">1</span>+maxDepth(root.left);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">max</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> (a&gt;b?a:b);</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h2 id=\"寻找二叉树最长路径\"><a href=\"#寻找二叉树最长路径\" class=\"headerlink\" title=\"寻找二叉树最长路径\"></a>寻找二叉树最长路径</h2><p>###　递归的方法</p>\n<p>1.节点为<code>null</code>时，返回深度为0<br>2.节点的左右子节点中有一个为<code>null</code>时，返回<code>1+maxDepth(root.left(or root.right))</code><br>3.若节点的左右子节点都不为<code>null</code>时，返回两者中大的那一个。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">maxDepth</span><span class=\"params\">(TreeNode root)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(root==<span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(root.left!=<span class=\"keyword\">null</span>&amp;&amp; root.right!=<span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> max(<span class=\"number\">1</span>+maxDepth(root.left),<span class=\"number\">1</span>+maxDepth(root.right));</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(root.left==<span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">1</span>+maxDepth(root.right);</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">1</span>+maxDepth(root.left);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">max</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> (a&gt;b?a:b);</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n"},{"author":"ivyxjc","date":"2016-04-25T16:00:00.000Z","title":"数根","keywords":null,"description":null,"_content":"\n## 简介\n\n数根就是指将一个数的各位数字相加之后得到一个数字，若该数大于等于10则继续该运算所得到的那个数。\n\n例如：\n158 --》 1+5+8=14 --》 1+4=5\n\n\n## O(n) 解法\n\n就是按照树根的定义来做。\n\n```java\npublic int addDigits(int num) {\n   while(num>=10){\n       int [] tmp=getDigits(num);\n       num=0;\n       for(int i=0;i<tmp.length;i++){\n           num+=tmp[i];\n       }\n   }\n   return num;\n}\n\n\npublic int[] getDigits(int num){\n   int tmp=num;\n   int [] digits=new int[(int)Math.log(num)];\n   int index=0;\n   while(tmp!=0){\n       digits[index]=tmp%10;\n       tmp=tmp/10;\n       index+=1;\n   }\n   return digits;\n}\n```\n\n## O(1)解法\n\n树根有一些很巧妙的数学规律，使得该题可以在O(1)时间内完成。\n\n例：\n$$12345=1*10000+2*1000+3*100+4*10+5*1$$\n\n$$ =1*9999+2*999+3*99+4*9+5*0+(1+2+3+4+5)$$\n\n我们发现一个数的各位数字之和和该数和9同余。\n\n所以树根与原数也应该同余（当一个数为9的倍数时，树根即为9）、\n\n```java\npublic int addDigits(int num) {\n    if(num==0){\n        return 0;\n    }\n    if(num%9==0){\n        return 9;\n    }else{\n        return num%9;\n    }\n\n}\n```\n","source":"_posts/OJ/LeetCode/2016-04-26-easy-add-digits.md","raw":"---\nauthor: ivyxjc\ndate: 2016-04-26\ntitle: 数根\ncategory: OJ\ntags: [math]\nkeywords:\ndescription:\n---\n\n## 简介\n\n数根就是指将一个数的各位数字相加之后得到一个数字，若该数大于等于10则继续该运算所得到的那个数。\n\n例如：\n158 --》 1+5+8=14 --》 1+4=5\n\n\n## O(n) 解法\n\n就是按照树根的定义来做。\n\n```java\npublic int addDigits(int num) {\n   while(num>=10){\n       int [] tmp=getDigits(num);\n       num=0;\n       for(int i=0;i<tmp.length;i++){\n           num+=tmp[i];\n       }\n   }\n   return num;\n}\n\n\npublic int[] getDigits(int num){\n   int tmp=num;\n   int [] digits=new int[(int)Math.log(num)];\n   int index=0;\n   while(tmp!=0){\n       digits[index]=tmp%10;\n       tmp=tmp/10;\n       index+=1;\n   }\n   return digits;\n}\n```\n\n## O(1)解法\n\n树根有一些很巧妙的数学规律，使得该题可以在O(1)时间内完成。\n\n例：\n$$12345=1*10000+2*1000+3*100+4*10+5*1$$\n\n$$ =1*9999+2*999+3*99+4*9+5*0+(1+2+3+4+5)$$\n\n我们发现一个数的各位数字之和和该数和9同余。\n\n所以树根与原数也应该同余（当一个数为9的倍数时，树根即为9）、\n\n```java\npublic int addDigits(int num) {\n    if(num==0){\n        return 0;\n    }\n    if(num%9==0){\n        return 9;\n    }else{\n        return num%9;\n    }\n\n}\n```\n","slug":"OJ/LeetCode/2016-04-26-easy-add-digits","published":1,"updated":"2016-10-13T06:34:38.546Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f00zg000zcwjr762ugxv6","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>数根就是指将一个数的各位数字相加之后得到一个数字，若该数大于等于10则继续该运算所得到的那个数。</p>\n<p>例如：<br>158 –》 1+5+8=14 –》 1+4=5</p>\n<h2 id=\"O-n-解法\"><a href=\"#O-n-解法\" class=\"headerlink\" title=\"O(n) 解法\"></a>O(n) 解法</h2><p>就是按照树根的定义来做。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">addDigits</span><span class=\"params\">(<span class=\"keyword\">int</span> num)</span> </span>&#123;</div><div class=\"line\">   <span class=\"keyword\">while</span>(num&gt;=<span class=\"number\">10</span>)&#123;</div><div class=\"line\">       <span class=\"keyword\">int</span> [] tmp=getDigits(num);</div><div class=\"line\">       num=<span class=\"number\">0</span>;</div><div class=\"line\">       <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;tmp.length;i++)&#123;</div><div class=\"line\">           num+=tmp[i];</div><div class=\"line\">       &#125;</div><div class=\"line\">   &#125;</div><div class=\"line\">   <span class=\"keyword\">return</span> num;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span>[] getDigits(<span class=\"keyword\">int</span> num)&#123;</div><div class=\"line\">   <span class=\"keyword\">int</span> tmp=num;</div><div class=\"line\">   <span class=\"keyword\">int</span> [] digits=<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[(<span class=\"keyword\">int</span>)Math.log(num)];</div><div class=\"line\">   <span class=\"keyword\">int</span> index=<span class=\"number\">0</span>;</div><div class=\"line\">   <span class=\"keyword\">while</span>(tmp!=<span class=\"number\">0</span>)&#123;</div><div class=\"line\">       digits[index]=tmp%<span class=\"number\">10</span>;</div><div class=\"line\">       tmp=tmp/<span class=\"number\">10</span>;</div><div class=\"line\">       index+=<span class=\"number\">1</span>;</div><div class=\"line\">   &#125;</div><div class=\"line\">   <span class=\"keyword\">return</span> digits;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"O-1-解法\"><a href=\"#O-1-解法\" class=\"headerlink\" title=\"O(1)解法\"></a>O(1)解法</h2><p>树根有一些很巧妙的数学规律，使得该题可以在O(1)时间内完成。</p>\n<p>例：<br>$$12345=1<em>10000+2</em>1000+3<em>100+4</em>10+5*1$$</p>\n<p>$$ =1<em>9999+2</em>999+3<em>99+4</em>9+5*0+(1+2+3+4+5)$$</p>\n<p>我们发现一个数的各位数字之和和该数和9同余。</p>\n<p>所以树根与原数也应该同余（当一个数为9的倍数时，树根即为9）、</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">addDigits</span><span class=\"params\">(<span class=\"keyword\">int</span> num)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span>(num==<span class=\"number\">0</span>)&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">if</span>(num%<span class=\"number\">9</span>==<span class=\"number\">0</span>)&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">9</span>;</div><div class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> num%<span class=\"number\">9</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>数根就是指将一个数的各位数字相加之后得到一个数字，若该数大于等于10则继续该运算所得到的那个数。</p>\n<p>例如：<br>158 –》 1+5+8=14 –》 1+4=5</p>\n<h2 id=\"O-n-解法\"><a href=\"#O-n-解法\" class=\"headerlink\" title=\"O(n) 解法\"></a>O(n) 解法</h2><p>就是按照树根的定义来做。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">addDigits</span><span class=\"params\">(<span class=\"keyword\">int</span> num)</span> </span>&#123;</div><div class=\"line\">   <span class=\"keyword\">while</span>(num&gt;=<span class=\"number\">10</span>)&#123;</div><div class=\"line\">       <span class=\"keyword\">int</span> [] tmp=getDigits(num);</div><div class=\"line\">       num=<span class=\"number\">0</span>;</div><div class=\"line\">       <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;tmp.length;i++)&#123;</div><div class=\"line\">           num+=tmp[i];</div><div class=\"line\">       &#125;</div><div class=\"line\">   &#125;</div><div class=\"line\">   <span class=\"keyword\">return</span> num;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span>[] getDigits(<span class=\"keyword\">int</span> num)&#123;</div><div class=\"line\">   <span class=\"keyword\">int</span> tmp=num;</div><div class=\"line\">   <span class=\"keyword\">int</span> [] digits=<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[(<span class=\"keyword\">int</span>)Math.log(num)];</div><div class=\"line\">   <span class=\"keyword\">int</span> index=<span class=\"number\">0</span>;</div><div class=\"line\">   <span class=\"keyword\">while</span>(tmp!=<span class=\"number\">0</span>)&#123;</div><div class=\"line\">       digits[index]=tmp%<span class=\"number\">10</span>;</div><div class=\"line\">       tmp=tmp/<span class=\"number\">10</span>;</div><div class=\"line\">       index+=<span class=\"number\">1</span>;</div><div class=\"line\">   &#125;</div><div class=\"line\">   <span class=\"keyword\">return</span> digits;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"O-1-解法\"><a href=\"#O-1-解法\" class=\"headerlink\" title=\"O(1)解法\"></a>O(1)解法</h2><p>树根有一些很巧妙的数学规律，使得该题可以在O(1)时间内完成。</p>\n<p>例：<br>$$12345=1<em>10000+2</em>1000+3<em>100+4</em>10+5*1$$</p>\n<p>$$ =1<em>9999+2</em>999+3<em>99+4</em>9+5*0+(1+2+3+4+5)$$</p>\n<p>我们发现一个数的各位数字之和和该数和9同余。</p>\n<p>所以树根与原数也应该同余（当一个数为9的倍数时，树根即为9）、</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">addDigits</span><span class=\"params\">(<span class=\"keyword\">int</span> num)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span>(num==<span class=\"number\">0</span>)&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">if</span>(num%<span class=\"number\">9</span>==<span class=\"number\">0</span>)&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">9</span>;</div><div class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> num%<span class=\"number\">9</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"},{"author":"ivyxjc","date":"2016-04-25T16:00:00.000Z","title":"283 将0移到数组末尾","keywords":null,"description":null,"_content":"\n将数组中的0移动数组尾部，其它数字顺序不变。\n必须就地完成\n\n## 解法I（用时34ms）\n\n就是遍历数组，当一个数为0时，将该0和后面每一个数字都替换\n\n用zeroFinalIndex作为一个flag,该数后面的数都为0，初始值为nums.length。每有一个数为0，zeroFinalIndex--\n\n注意点：当有连续的0时，两个0替换，替换完成时nums[i]==0，此时i不应该+1.\n\n```java\npublic void moveZeroes(int[] nums) {\n    int zeroFinalIndex=nums.length;\n    for(int i=0;i<nums.length;){\n        if(nums[i]==0&&i<zeroFinalIndex){\n            int j=i+1;\n            if(j<zeroFinalIndex&&nums[j]==0){\n                i--;\n            }\n            while(j<zeroFinalIndex){\n                exch(nums,j-1,j);\n                j++;\n            }\n            zeroFinalIndex--;\n        }\n        i++;\n\n    }\n}\n```\n\n\n\n## 解法II（用时1ms）\n\n即将不为0的数字和第一个0交换，关键在于找到第一个0的位置 `zeroIndex`。\n\n首先将`zeroIndex`设为0，即使该数不为0，也只是自己和自己交换，不影响结果。\n\n当遇到一个数为0，此时`zeroIndex`等于该数的秩（即第一个0的秩序），等到`numsIndex`增加到一个不为0的数，和它交换。\n\n`zeroIndex`再+1仍是第一个0所在的位置。\n因为若只有一个0，则`nusm[zeroIndex]`和`nums[numsIndex]`交换后，`zeroIndex`所在的数仍为0。\n\n若有连续多个0，第一0交换后，`zeroIndex++`后仍为交换后第一个0所在的位置。\n\n```java\npublic void moveZeroesII(int [] nums){\n    for(int zeroIndex=0,numIndex=0;numIndex<nums.length;numIndex++){\n        if(nums[numIndex]!=0){\n            exch(nums,zeroIndex++,numIndex);\n        }\n    }\n\n}\n```","source":"_posts/OJ/LeetCode/2016-04-26-easy-move-zeroes.md","raw":"---\nauthor: ivyxjc\ndate: 2016-04-26\ntitle: 283 将0移到数组末尾\ncategory: OJ\ntags: [array,twoPointer]\nkeywords:\ndescription:\n---\n\n将数组中的0移动数组尾部，其它数字顺序不变。\n必须就地完成\n\n## 解法I（用时34ms）\n\n就是遍历数组，当一个数为0时，将该0和后面每一个数字都替换\n\n用zeroFinalIndex作为一个flag,该数后面的数都为0，初始值为nums.length。每有一个数为0，zeroFinalIndex--\n\n注意点：当有连续的0时，两个0替换，替换完成时nums[i]==0，此时i不应该+1.\n\n```java\npublic void moveZeroes(int[] nums) {\n    int zeroFinalIndex=nums.length;\n    for(int i=0;i<nums.length;){\n        if(nums[i]==0&&i<zeroFinalIndex){\n            int j=i+1;\n            if(j<zeroFinalIndex&&nums[j]==0){\n                i--;\n            }\n            while(j<zeroFinalIndex){\n                exch(nums,j-1,j);\n                j++;\n            }\n            zeroFinalIndex--;\n        }\n        i++;\n\n    }\n}\n```\n\n\n\n## 解法II（用时1ms）\n\n即将不为0的数字和第一个0交换，关键在于找到第一个0的位置 `zeroIndex`。\n\n首先将`zeroIndex`设为0，即使该数不为0，也只是自己和自己交换，不影响结果。\n\n当遇到一个数为0，此时`zeroIndex`等于该数的秩（即第一个0的秩序），等到`numsIndex`增加到一个不为0的数，和它交换。\n\n`zeroIndex`再+1仍是第一个0所在的位置。\n因为若只有一个0，则`nusm[zeroIndex]`和`nums[numsIndex]`交换后，`zeroIndex`所在的数仍为0。\n\n若有连续多个0，第一0交换后，`zeroIndex++`后仍为交换后第一个0所在的位置。\n\n```java\npublic void moveZeroesII(int [] nums){\n    for(int zeroIndex=0,numIndex=0;numIndex<nums.length;numIndex++){\n        if(nums[numIndex]!=0){\n            exch(nums,zeroIndex++,numIndex);\n        }\n    }\n\n}\n```","slug":"OJ/LeetCode/2016-04-26-easy-move-zeroes","published":1,"updated":"2016-10-13T06:34:38.551Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f00zl0010cwjrcthh8hfd","content":"<p>将数组中的0移动数组尾部，其它数字顺序不变。<br>必须就地完成</p>\n<h2 id=\"解法I（用时34ms）\"><a href=\"#解法I（用时34ms）\" class=\"headerlink\" title=\"解法I（用时34ms）\"></a>解法I（用时34ms）</h2><p>就是遍历数组，当一个数为0时，将该0和后面每一个数字都替换</p>\n<p>用zeroFinalIndex作为一个flag,该数后面的数都为0，初始值为nums.length。每有一个数为0，zeroFinalIndex–</p>\n<p>注意点：当有连续的0时，两个0替换，替换完成时nums[i]==0，此时i不应该+1.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">moveZeroes</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> zeroFinalIndex=nums.length;</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;nums.length;)&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(nums[i]==<span class=\"number\">0</span>&amp;&amp;i&lt;zeroFinalIndex)&#123;</div><div class=\"line\">            <span class=\"keyword\">int</span> j=i+<span class=\"number\">1</span>;</div><div class=\"line\">            <span class=\"keyword\">if</span>(j&lt;zeroFinalIndex&amp;&amp;nums[j]==<span class=\"number\">0</span>)&#123;</div><div class=\"line\">                i--;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">while</span>(j&lt;zeroFinalIndex)&#123;</div><div class=\"line\">                exch(nums,j-<span class=\"number\">1</span>,j);</div><div class=\"line\">                j++;</div><div class=\"line\">            &#125;</div><div class=\"line\">            zeroFinalIndex--;</div><div class=\"line\">        &#125;</div><div class=\"line\">        i++;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"解法II（用时1ms）\"><a href=\"#解法II（用时1ms）\" class=\"headerlink\" title=\"解法II（用时1ms）\"></a>解法II（用时1ms）</h2><p>即将不为0的数字和第一个0交换，关键在于找到第一个0的位置 <code>zeroIndex</code>。</p>\n<p>首先将<code>zeroIndex</code>设为0，即使该数不为0，也只是自己和自己交换，不影响结果。</p>\n<p>当遇到一个数为0，此时<code>zeroIndex</code>等于该数的秩（即第一个0的秩序），等到<code>numsIndex</code>增加到一个不为0的数，和它交换。</p>\n<p><code>zeroIndex</code>再+1仍是第一个0所在的位置。<br>因为若只有一个0，则<code>nusm[zeroIndex]</code>和<code>nums[numsIndex]</code>交换后，<code>zeroIndex</code>所在的数仍为0。</p>\n<p>若有连续多个0，第一0交换后，<code>zeroIndex++</code>后仍为交换后第一个0所在的位置。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">moveZeroesII</span><span class=\"params\">(<span class=\"keyword\">int</span> [] nums)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> zeroIndex=<span class=\"number\">0</span>,numIndex=<span class=\"number\">0</span>;numIndex&lt;nums.length;numIndex++)&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(nums[numIndex]!=<span class=\"number\">0</span>)&#123;</div><div class=\"line\">            exch(nums,zeroIndex++,numIndex);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","excerpt":"","more":"<p>将数组中的0移动数组尾部，其它数字顺序不变。<br>必须就地完成</p>\n<h2 id=\"解法I（用时34ms）\"><a href=\"#解法I（用时34ms）\" class=\"headerlink\" title=\"解法I（用时34ms）\"></a>解法I（用时34ms）</h2><p>就是遍历数组，当一个数为0时，将该0和后面每一个数字都替换</p>\n<p>用zeroFinalIndex作为一个flag,该数后面的数都为0，初始值为nums.length。每有一个数为0，zeroFinalIndex–</p>\n<p>注意点：当有连续的0时，两个0替换，替换完成时nums[i]==0，此时i不应该+1.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">moveZeroes</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> zeroFinalIndex=nums.length;</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;nums.length;)&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(nums[i]==<span class=\"number\">0</span>&amp;&amp;i&lt;zeroFinalIndex)&#123;</div><div class=\"line\">            <span class=\"keyword\">int</span> j=i+<span class=\"number\">1</span>;</div><div class=\"line\">            <span class=\"keyword\">if</span>(j&lt;zeroFinalIndex&amp;&amp;nums[j]==<span class=\"number\">0</span>)&#123;</div><div class=\"line\">                i--;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">while</span>(j&lt;zeroFinalIndex)&#123;</div><div class=\"line\">                exch(nums,j-<span class=\"number\">1</span>,j);</div><div class=\"line\">                j++;</div><div class=\"line\">            &#125;</div><div class=\"line\">            zeroFinalIndex--;</div><div class=\"line\">        &#125;</div><div class=\"line\">        i++;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"解法II（用时1ms）\"><a href=\"#解法II（用时1ms）\" class=\"headerlink\" title=\"解法II（用时1ms）\"></a>解法II（用时1ms）</h2><p>即将不为0的数字和第一个0交换，关键在于找到第一个0的位置 <code>zeroIndex</code>。</p>\n<p>首先将<code>zeroIndex</code>设为0，即使该数不为0，也只是自己和自己交换，不影响结果。</p>\n<p>当遇到一个数为0，此时<code>zeroIndex</code>等于该数的秩（即第一个0的秩序），等到<code>numsIndex</code>增加到一个不为0的数，和它交换。</p>\n<p><code>zeroIndex</code>再+1仍是第一个0所在的位置。<br>因为若只有一个0，则<code>nusm[zeroIndex]</code>和<code>nums[numsIndex]</code>交换后，<code>zeroIndex</code>所在的数仍为0。</p>\n<p>若有连续多个0，第一0交换后，<code>zeroIndex++</code>后仍为交换后第一个0所在的位置。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">moveZeroesII</span><span class=\"params\">(<span class=\"keyword\">int</span> [] nums)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> zeroIndex=<span class=\"number\">0</span>,numIndex=<span class=\"number\">0</span>;numIndex&lt;nums.length;numIndex++)&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(nums[numIndex]!=<span class=\"number\">0</span>)&#123;</div><div class=\"line\">            exch(nums,zeroIndex++,numIndex);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"author":"ivyxjc","date":"2016-02-20T16:00:00.000Z","title":"PAT 1010 Radix 25","keywords":null,"description":null,"_content":"\n该题未全部完成，未通过全部测例 20/25\n\n这道题目是[PAT甲级习题](http://www.patest.cn/contests/pat-a-practise)中通过率最低的一道题，通过率只有$$$0.08$$$。我暂时也未能通过全部测例，还差4个测例。应该是边界条件未考虑充分。\n\n\n## 题目\nEach input file contains one test case. Each case occupies a line which contains 4 positive integers:<br>\n$$$N1$$$ $$$N2$$$ tag radix<br>\nHere $$$N1$$$ and $$$N2$$$ each has no more than 10 digits. A digit is less than its radix and is chosen from the set {0-9, a-z} where 0-9 represent the decimal numbers 0-9, and a-z represent the decimal numbers 10-35. The last number \"radix\" is the radix of N1 if \"tag\" is 1, or of N2 if \"tag\" is 2. <br>\n\n中文大意：\n输入4个数\n其中第四个数表示第三个数所指的那个数$$$N$$$的进制，现在来判断另一个数$$$M$$$在哪一种进制下回合$$$N$$$相同，若存在则输出进制，否则输出\"Impossible\"。<br>\n\n## 解法\n\n### String Convert to Long\n就是输入数据，由于数据中可能含有字母，仍存储为```String```格式。对已经给出进制的树先算出其对应的十进制数是多少：\n\n```java\n//已知字符串和进制，算出对应的十进制数\npublic static long strToLong(String str,long radix){\n    long res=0;\n    int tmp=0;\n    for(int i=str.length()-1;i>=0;i--){\n        res+=map.get(str.charAt(i))*Math.pow(radix,tmp++);\n    }\n    return res;\n}\n\n```\n\n### 获得未知进制数中最大的字符所代表的十进制数\n\n因为进制数一定要大于最大的字符，所以可以通过这一步获得进制的下限\n\n```java\nString resNumStr = dataStr[resRadixNumPosi];\n    //获取未知进制数中最大的字符所代表的十进制数\n    int biggestCharInResNumStr = map.get(resNumStr.charAt(0));\n    for (int i = 0; i < resNumStr.length(); i++) {\n        if (map.get(resNumStr.charAt(i)) > biggestCharInResNumStr) {\n            biggestCharInResNumStr = map.get(resNumStr.charAt(i));\n        }\n    }\n```\n\n### 二分查找\n\n    下限即上一步所求出的数+1\n    上限即为已知进制的数\n    \n    退出条件:\n        若上下限相同，检查对应两个数在该进制是否相同\n        若下限大于上限，输出Impossible; return;\n        \n```java\npublic static void findRadix(long num,String str,long radixBegin,long radixEnd){\n    if(radixBegin>radixEnd){\n        System.out.println(\"Impossible\");\n        return;\n    }\n    if(radixBegin==radixEnd){\n        if(strToLong(str,radixBegin)==num){\n            System.out.println(radixBegin);\n            return;\n        }else{\n            System.out.println(\"Impossible\");\n            return;\n        }\n    }\n    long radixMiddle=(radixBegin+radixEnd)>>1;\n    long middleRadixNum=strToLong(str,radixMiddle);\n    if(middleRadixNum>num){\n        findRadix(num,str,radixBegin,radixMiddle);\n    }else if(middleRadixNum==num){\n        System.out.println(radixMiddle);\n        return;\n    }else{\n        findRadix(num,str,radixMiddle+1,radixEnd);\n    }\n\n\n}\n\n```\n\n### 边界条件\n\n    1.N1和N2一样时，应该输出其中最大字符所代表的数值再+1；\n    2.\n\n\n### 代码实现\n\n\n```java\npackage PAT;\n\nimport java.util.HashMap;\nimport java.util.Scanner;\n\n/**\n * Created by xgh on 2016/2/21.\n */\npublic class _1010_Radix_25{\n    private static HashMap<Character,Integer> map=new HashMap<Character, Integer>();\n\n    public static void main(String[] args) {\n    \n        Scanner in = new Scanner(System.in);\n        String[] dataStr = (in.nextLine()).split(\" \");\n        int charRepNum = 10;\n        for (char i = 'a'; i <= 'z'; i++) {\n            map.put(i, charRepNum++);\n        }\n        for (int i = 0; i < 9; i++) {\n            map.put((char) (i + 48), i);\n        }\n\n\n        int givenRadixNumPosi = Integer.parseInt(dataStr[2]);\n        long givenRadix = Integer.parseInt(dataStr[3]);\n\n        long aaa = 0;\n        long givenNum = 0;\n        String givenNumStr = dataStr[givenRadixNumPosi - 1];\n//        System.out.println(givenNumStr);\n//        System.out.println(givenRadixNumPosi-1);\n//        for(char e:map.keySet()){\n//            System.out.println(e+\" ==== \"+map.get(e));\n//        }\n        for (int i = givenNumStr.length() - 1; i >= 0; i--) {\n            givenNum += map.get(givenNumStr.charAt(i)) * Math.pow(givenRadix, aaa++);\n        }\n\n        int resRadixNumPosi = 0;\n        if (givenRadixNumPosi == 1) {\n            resRadixNumPosi = 1;\n        } else {\n            resRadixNumPosi = 0;\n        }\n\n        String resNumStr = dataStr[resRadixNumPosi];\n        int biggestCharInResNumStr = map.get(resNumStr.charAt(0));\n        for (int i = 0; i < resNumStr.length(); i++) {\n            if (map.get(resNumStr.charAt(i)) > biggestCharInResNumStr) {\n                biggestCharInResNumStr = map.get(resNumStr.charAt(i));\n            }\n        }\n\n\n        if(strToLong(resNumStr,biggestCharInResNumStr+1)==givenNum){\n            System.out.println(biggestCharInResNumStr+1);\n            return;\n        }\n\n//        System.out.println(Integer.parseInt(\"ab\"));\n//        System.out.println(givenNum);\n//        System.out.println(resNumStr);\n//        System.out.println(givenRadix+1);\n//        System.out.println(biggestCharInResNumStr+1);\n\n        findRadix(givenNum,resNumStr,biggestCharInResNumStr+1,givenNum+1);\n    }\n\n\n    public static void findRadix(long num,String str,long radixBegin,long radixEnd){\n        if(radixBegin>radixEnd){\n            System.out.println(\"Impossible\");\n            return;\n        }\n        if(radixBegin==radixEnd){\n            if(strToLong(str,radixBegin)==num){\n                System.out.println(radixBegin);\n                return;\n            }else{\n                System.out.println(\"Impossible\");\n                return;\n            }\n        }\n        long radixMiddle=(radixBegin+radixEnd)>>1;\n        long middleRadixNum=strToLong(str,radixMiddle);\n        if(middleRadixNum>num){\n            findRadix(num,str,radixBegin,radixMiddle);\n        }else if(middleRadixNum==num){\n            System.out.println(radixMiddle);\n            return;\n        }else{\n            findRadix(num,str,radixMiddle+1,radixEnd);\n        }\n\n\n    }\n\n    public static long strToLong(String str,long radix){\n        long res=0;\n        int tmp=0;\n        for(int i=str.length()-1;i>=0;i--){\n            res+=map.get(str.charAt(i))*Math.pow(radix,tmp++);\n        }\n        return res;\n    }\n}\n```","source":"_posts/OJ/PAT/2016-02-21-1010题-Radix-25分.md","raw":"---\nauthor: ivyxjc\ndate: 2016-02-21\ntitle: PAT 1010 Radix 25\ncategory: OJ\ntags: [todo,onlinejudge,binarysearch]\nkeywords:\ndescription:\n---\n\n该题未全部完成，未通过全部测例 20/25\n\n这道题目是[PAT甲级习题](http://www.patest.cn/contests/pat-a-practise)中通过率最低的一道题，通过率只有$$$0.08$$$。我暂时也未能通过全部测例，还差4个测例。应该是边界条件未考虑充分。\n\n\n## 题目\nEach input file contains one test case. Each case occupies a line which contains 4 positive integers:<br>\n$$$N1$$$ $$$N2$$$ tag radix<br>\nHere $$$N1$$$ and $$$N2$$$ each has no more than 10 digits. A digit is less than its radix and is chosen from the set {0-9, a-z} where 0-9 represent the decimal numbers 0-9, and a-z represent the decimal numbers 10-35. The last number \"radix\" is the radix of N1 if \"tag\" is 1, or of N2 if \"tag\" is 2. <br>\n\n中文大意：\n输入4个数\n其中第四个数表示第三个数所指的那个数$$$N$$$的进制，现在来判断另一个数$$$M$$$在哪一种进制下回合$$$N$$$相同，若存在则输出进制，否则输出\"Impossible\"。<br>\n\n## 解法\n\n### String Convert to Long\n就是输入数据，由于数据中可能含有字母，仍存储为```String```格式。对已经给出进制的树先算出其对应的十进制数是多少：\n\n```java\n//已知字符串和进制，算出对应的十进制数\npublic static long strToLong(String str,long radix){\n    long res=0;\n    int tmp=0;\n    for(int i=str.length()-1;i>=0;i--){\n        res+=map.get(str.charAt(i))*Math.pow(radix,tmp++);\n    }\n    return res;\n}\n\n```\n\n### 获得未知进制数中最大的字符所代表的十进制数\n\n因为进制数一定要大于最大的字符，所以可以通过这一步获得进制的下限\n\n```java\nString resNumStr = dataStr[resRadixNumPosi];\n    //获取未知进制数中最大的字符所代表的十进制数\n    int biggestCharInResNumStr = map.get(resNumStr.charAt(0));\n    for (int i = 0; i < resNumStr.length(); i++) {\n        if (map.get(resNumStr.charAt(i)) > biggestCharInResNumStr) {\n            biggestCharInResNumStr = map.get(resNumStr.charAt(i));\n        }\n    }\n```\n\n### 二分查找\n\n    下限即上一步所求出的数+1\n    上限即为已知进制的数\n    \n    退出条件:\n        若上下限相同，检查对应两个数在该进制是否相同\n        若下限大于上限，输出Impossible; return;\n        \n```java\npublic static void findRadix(long num,String str,long radixBegin,long radixEnd){\n    if(radixBegin>radixEnd){\n        System.out.println(\"Impossible\");\n        return;\n    }\n    if(radixBegin==radixEnd){\n        if(strToLong(str,radixBegin)==num){\n            System.out.println(radixBegin);\n            return;\n        }else{\n            System.out.println(\"Impossible\");\n            return;\n        }\n    }\n    long radixMiddle=(radixBegin+radixEnd)>>1;\n    long middleRadixNum=strToLong(str,radixMiddle);\n    if(middleRadixNum>num){\n        findRadix(num,str,radixBegin,radixMiddle);\n    }else if(middleRadixNum==num){\n        System.out.println(radixMiddle);\n        return;\n    }else{\n        findRadix(num,str,radixMiddle+1,radixEnd);\n    }\n\n\n}\n\n```\n\n### 边界条件\n\n    1.N1和N2一样时，应该输出其中最大字符所代表的数值再+1；\n    2.\n\n\n### 代码实现\n\n\n```java\npackage PAT;\n\nimport java.util.HashMap;\nimport java.util.Scanner;\n\n/**\n * Created by xgh on 2016/2/21.\n */\npublic class _1010_Radix_25{\n    private static HashMap<Character,Integer> map=new HashMap<Character, Integer>();\n\n    public static void main(String[] args) {\n    \n        Scanner in = new Scanner(System.in);\n        String[] dataStr = (in.nextLine()).split(\" \");\n        int charRepNum = 10;\n        for (char i = 'a'; i <= 'z'; i++) {\n            map.put(i, charRepNum++);\n        }\n        for (int i = 0; i < 9; i++) {\n            map.put((char) (i + 48), i);\n        }\n\n\n        int givenRadixNumPosi = Integer.parseInt(dataStr[2]);\n        long givenRadix = Integer.parseInt(dataStr[3]);\n\n        long aaa = 0;\n        long givenNum = 0;\n        String givenNumStr = dataStr[givenRadixNumPosi - 1];\n//        System.out.println(givenNumStr);\n//        System.out.println(givenRadixNumPosi-1);\n//        for(char e:map.keySet()){\n//            System.out.println(e+\" ==== \"+map.get(e));\n//        }\n        for (int i = givenNumStr.length() - 1; i >= 0; i--) {\n            givenNum += map.get(givenNumStr.charAt(i)) * Math.pow(givenRadix, aaa++);\n        }\n\n        int resRadixNumPosi = 0;\n        if (givenRadixNumPosi == 1) {\n            resRadixNumPosi = 1;\n        } else {\n            resRadixNumPosi = 0;\n        }\n\n        String resNumStr = dataStr[resRadixNumPosi];\n        int biggestCharInResNumStr = map.get(resNumStr.charAt(0));\n        for (int i = 0; i < resNumStr.length(); i++) {\n            if (map.get(resNumStr.charAt(i)) > biggestCharInResNumStr) {\n                biggestCharInResNumStr = map.get(resNumStr.charAt(i));\n            }\n        }\n\n\n        if(strToLong(resNumStr,biggestCharInResNumStr+1)==givenNum){\n            System.out.println(biggestCharInResNumStr+1);\n            return;\n        }\n\n//        System.out.println(Integer.parseInt(\"ab\"));\n//        System.out.println(givenNum);\n//        System.out.println(resNumStr);\n//        System.out.println(givenRadix+1);\n//        System.out.println(biggestCharInResNumStr+1);\n\n        findRadix(givenNum,resNumStr,biggestCharInResNumStr+1,givenNum+1);\n    }\n\n\n    public static void findRadix(long num,String str,long radixBegin,long radixEnd){\n        if(radixBegin>radixEnd){\n            System.out.println(\"Impossible\");\n            return;\n        }\n        if(radixBegin==radixEnd){\n            if(strToLong(str,radixBegin)==num){\n                System.out.println(radixBegin);\n                return;\n            }else{\n                System.out.println(\"Impossible\");\n                return;\n            }\n        }\n        long radixMiddle=(radixBegin+radixEnd)>>1;\n        long middleRadixNum=strToLong(str,radixMiddle);\n        if(middleRadixNum>num){\n            findRadix(num,str,radixBegin,radixMiddle);\n        }else if(middleRadixNum==num){\n            System.out.println(radixMiddle);\n            return;\n        }else{\n            findRadix(num,str,radixMiddle+1,radixEnd);\n        }\n\n\n    }\n\n    public static long strToLong(String str,long radix){\n        long res=0;\n        int tmp=0;\n        for(int i=str.length()-1;i>=0;i--){\n            res+=map.get(str.charAt(i))*Math.pow(radix,tmp++);\n        }\n        return res;\n    }\n}\n```","slug":"OJ/PAT/2016-02-21-1010题-Radix-25分","published":1,"updated":"2016-10-13T06:34:38.554Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f00zo0012cwjr5zwqyi6l","content":"<p>该题未全部完成，未通过全部测例 20/25</p>\n<p>这道题目是<a href=\"http://www.patest.cn/contests/pat-a-practise\" target=\"_blank\" rel=\"external\">PAT甲级习题</a>中通过率最低的一道题，通过率只有$$$0.08$$$。我暂时也未能通过全部测例，还差4个测例。应该是边界条件未考虑充分。</p>\n<h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p>Each input file contains one test case. Each case occupies a line which contains 4 positive integers:<br><br>$$$N1$$$ $$$N2$$$ tag radix<br><br>Here $$$N1$$$ and $$$N2$$$ each has no more than 10 digits. A digit is less than its radix and is chosen from the set {0-9, a-z} where 0-9 represent the decimal numbers 0-9, and a-z represent the decimal numbers 10-35. The last number “radix” is the radix of N1 if “tag” is 1, or of N2 if “tag” is 2. <br></p>\n<p>中文大意：<br>输入4个数<br>其中第四个数表示第三个数所指的那个数$$$N$$$的进制，现在来判断另一个数$$$M$$$在哪一种进制下回合$$$N$$$相同，若存在则输出进制，否则输出”Impossible”。<br></p>\n<h2 id=\"解法\"><a href=\"#解法\" class=\"headerlink\" title=\"解法\"></a>解法</h2><h3 id=\"String-Convert-to-Long\"><a href=\"#String-Convert-to-Long\" class=\"headerlink\" title=\"String Convert to Long\"></a>String Convert to Long</h3><p>就是输入数据，由于数据中可能含有字母，仍存储为<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">```java</div><div class=\"line\">//已知字符串和进制，算出对应的十进制数</div><div class=\"line\">public static long strToLong(String str,long radix)&#123;</div><div class=\"line\">    long res=0;</div><div class=\"line\">    int tmp=0;</div><div class=\"line\">    for(int i=str.length()-1;i&gt;=0;i--)&#123;</div><div class=\"line\">        res+=map.get(str.charAt(i))*Math.pow(radix,tmp++);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return res;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h3 id=\"获得未知进制数中最大的字符所代表的十进制数\"><a href=\"#获得未知进制数中最大的字符所代表的十进制数\" class=\"headerlink\" title=\"获得未知进制数中最大的字符所代表的十进制数\"></a>获得未知进制数中最大的字符所代表的十进制数</h3><p>因为进制数一定要大于最大的字符，所以可以通过这一步获得进制的下限</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">String resNumStr = dataStr[resRadixNumPosi];</div><div class=\"line\">    <span class=\"comment\">//获取未知进制数中最大的字符所代表的十进制数</span></div><div class=\"line\">    <span class=\"keyword\">int</span> biggestCharInResNumStr = map.get(resNumStr.charAt(<span class=\"number\">0</span>));</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; resNumStr.length(); i++) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (map.get(resNumStr.charAt(i)) &gt; biggestCharInResNumStr) &#123;</div><div class=\"line\">            biggestCharInResNumStr = map.get(resNumStr.charAt(i));</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<h3 id=\"二分查找\"><a href=\"#二分查找\" class=\"headerlink\" title=\"二分查找\"></a>二分查找</h3><pre><code>下限即上一步所求出的数+1\n上限即为已知进制的数\n\n退出条件:\n    若上下限相同，检查对应两个数在该进制是否相同\n    若下限大于上限，输出Impossible; return;\n</code></pre><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">findRadix</span><span class=\"params\">(<span class=\"keyword\">long</span> num,String str,<span class=\"keyword\">long</span> radixBegin,<span class=\"keyword\">long</span> radixEnd)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span>(radixBegin&gt;radixEnd)&#123;</div><div class=\"line\">        System.out.println(<span class=\"string\">\"Impossible\"</span>);</div><div class=\"line\">        <span class=\"keyword\">return</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">if</span>(radixBegin==radixEnd)&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(strToLong(str,radixBegin)==num)&#123;</div><div class=\"line\">            System.out.println(radixBegin);</div><div class=\"line\">            <span class=\"keyword\">return</span>;</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">            System.out.println(<span class=\"string\">\"Impossible\"</span>);</div><div class=\"line\">            <span class=\"keyword\">return</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">long</span> radixMiddle=(radixBegin+radixEnd)&gt;&gt;<span class=\"number\">1</span>;</div><div class=\"line\">    <span class=\"keyword\">long</span> middleRadixNum=strToLong(str,radixMiddle);</div><div class=\"line\">    <span class=\"keyword\">if</span>(middleRadixNum&gt;num)&#123;</div><div class=\"line\">        findRadix(num,str,radixBegin,radixMiddle);</div><div class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(middleRadixNum==num)&#123;</div><div class=\"line\">        System.out.println(radixMiddle);</div><div class=\"line\">        <span class=\"keyword\">return</span>;</div><div class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">        findRadix(num,str,radixMiddle+<span class=\"number\">1</span>,radixEnd);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"边界条件\"><a href=\"#边界条件\" class=\"headerlink\" title=\"边界条件\"></a>边界条件</h3><pre><code>1.N1和N2一样时，应该输出其中最大字符所代表的数值再+1；\n2.\n</code></pre><h3 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> PAT;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * Created by xgh on 2016/2/21.</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">_1010_Radix_25</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> HashMap&lt;Character,Integer&gt; map=<span class=\"keyword\">new</span> HashMap&lt;Character, Integer&gt;();</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">    </div><div class=\"line\">        Scanner in = <span class=\"keyword\">new</span> Scanner(System.in);</div><div class=\"line\">        String[] dataStr = (in.nextLine()).split(<span class=\"string\">\" \"</span>);</div><div class=\"line\">        <span class=\"keyword\">int</span> charRepNum = <span class=\"number\">10</span>;</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">char</span> i = <span class=\"string\">'a'</span>; i &lt;= <span class=\"string\">'z'</span>; i++) &#123;</div><div class=\"line\">            map.put(i, charRepNum++);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">9</span>; i++) &#123;</div><div class=\"line\">            map.put((<span class=\"keyword\">char</span>) (i + <span class=\"number\">48</span>), i);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">int</span> givenRadixNumPosi = Integer.parseInt(dataStr[<span class=\"number\">2</span>]);</div><div class=\"line\">        <span class=\"keyword\">long</span> givenRadix = Integer.parseInt(dataStr[<span class=\"number\">3</span>]);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">long</span> aaa = <span class=\"number\">0</span>;</div><div class=\"line\">        <span class=\"keyword\">long</span> givenNum = <span class=\"number\">0</span>;</div><div class=\"line\">        String givenNumStr = dataStr[givenRadixNumPosi - <span class=\"number\">1</span>];</div><div class=\"line\"><span class=\"comment\">//        System.out.println(givenNumStr);</span></div><div class=\"line\"><span class=\"comment\">//        System.out.println(givenRadixNumPosi-1);</span></div><div class=\"line\"><span class=\"comment\">//        for(char e:map.keySet())&#123;</span></div><div class=\"line\"><span class=\"comment\">//            System.out.println(e+\" ==== \"+map.get(e));</span></div><div class=\"line\"><span class=\"comment\">//        &#125;</span></div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = givenNumStr.length() - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--) &#123;</div><div class=\"line\">            givenNum += map.get(givenNumStr.charAt(i)) * Math.pow(givenRadix, aaa++);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">int</span> resRadixNumPosi = <span class=\"number\">0</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span> (givenRadixNumPosi == <span class=\"number\">1</span>) &#123;</div><div class=\"line\">            resRadixNumPosi = <span class=\"number\">1</span>;</div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">            resRadixNumPosi = <span class=\"number\">0</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        String resNumStr = dataStr[resRadixNumPosi];</div><div class=\"line\">        <span class=\"keyword\">int</span> biggestCharInResNumStr = map.get(resNumStr.charAt(<span class=\"number\">0</span>));</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; resNumStr.length(); i++) &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (map.get(resNumStr.charAt(i)) &gt; biggestCharInResNumStr) &#123;</div><div class=\"line\">                biggestCharInResNumStr = map.get(resNumStr.charAt(i));</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span>(strToLong(resNumStr,biggestCharInResNumStr+<span class=\"number\">1</span>)==givenNum)&#123;</div><div class=\"line\">            System.out.println(biggestCharInResNumStr+<span class=\"number\">1</span>);</div><div class=\"line\">            <span class=\"keyword\">return</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//        System.out.println(Integer.parseInt(\"ab\"));</span></div><div class=\"line\"><span class=\"comment\">//        System.out.println(givenNum);</span></div><div class=\"line\"><span class=\"comment\">//        System.out.println(resNumStr);</span></div><div class=\"line\"><span class=\"comment\">//        System.out.println(givenRadix+1);</span></div><div class=\"line\"><span class=\"comment\">//        System.out.println(biggestCharInResNumStr+1);</span></div><div class=\"line\"></div><div class=\"line\">        findRadix(givenNum,resNumStr,biggestCharInResNumStr+<span class=\"number\">1</span>,givenNum+<span class=\"number\">1</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">findRadix</span><span class=\"params\">(<span class=\"keyword\">long</span> num,String str,<span class=\"keyword\">long</span> radixBegin,<span class=\"keyword\">long</span> radixEnd)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(radixBegin&gt;radixEnd)&#123;</div><div class=\"line\">            System.out.println(<span class=\"string\">\"Impossible\"</span>);</div><div class=\"line\">            <span class=\"keyword\">return</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span>(radixBegin==radixEnd)&#123;</div><div class=\"line\">            <span class=\"keyword\">if</span>(strToLong(str,radixBegin)==num)&#123;</div><div class=\"line\">                System.out.println(radixBegin);</div><div class=\"line\">                <span class=\"keyword\">return</span>;</div><div class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">                System.out.println(<span class=\"string\">\"Impossible\"</span>);</div><div class=\"line\">                <span class=\"keyword\">return</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">long</span> radixMiddle=(radixBegin+radixEnd)&gt;&gt;<span class=\"number\">1</span>;</div><div class=\"line\">        <span class=\"keyword\">long</span> middleRadixNum=strToLong(str,radixMiddle);</div><div class=\"line\">        <span class=\"keyword\">if</span>(middleRadixNum&gt;num)&#123;</div><div class=\"line\">            findRadix(num,str,radixBegin,radixMiddle);</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(middleRadixNum==num)&#123;</div><div class=\"line\">            System.out.println(radixMiddle);</div><div class=\"line\">            <span class=\"keyword\">return</span>;</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">            findRadix(num,str,radixMiddle+<span class=\"number\">1</span>,radixEnd);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">long</span> <span class=\"title\">strToLong</span><span class=\"params\">(String str,<span class=\"keyword\">long</span> radix)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">long</span> res=<span class=\"number\">0</span>;</div><div class=\"line\">        <span class=\"keyword\">int</span> tmp=<span class=\"number\">0</span>;</div><div class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=str.length()-<span class=\"number\">1</span>;i&gt;=<span class=\"number\">0</span>;i--)&#123;</div><div class=\"line\">            res+=map.get(str.charAt(i))*Math.pow(radix,tmp++);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> res;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","excerpt":"","more":"<p>该题未全部完成，未通过全部测例 20/25</p>\n<p>这道题目是<a href=\"http://www.patest.cn/contests/pat-a-practise\">PAT甲级习题</a>中通过率最低的一道题，通过率只有$$$0.08$$$。我暂时也未能通过全部测例，还差4个测例。应该是边界条件未考虑充分。</p>\n<h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p>Each input file contains one test case. Each case occupies a line which contains 4 positive integers:<br><br>$$$N1$$$ $$$N2$$$ tag radix<br><br>Here $$$N1$$$ and $$$N2$$$ each has no more than 10 digits. A digit is less than its radix and is chosen from the set {0-9, a-z} where 0-9 represent the decimal numbers 0-9, and a-z represent the decimal numbers 10-35. The last number “radix” is the radix of N1 if “tag” is 1, or of N2 if “tag” is 2. <br></p>\n<p>中文大意：<br>输入4个数<br>其中第四个数表示第三个数所指的那个数$$$N$$$的进制，现在来判断另一个数$$$M$$$在哪一种进制下回合$$$N$$$相同，若存在则输出进制，否则输出”Impossible”。<br></p>\n<h2 id=\"解法\"><a href=\"#解法\" class=\"headerlink\" title=\"解法\"></a>解法</h2><h3 id=\"String-Convert-to-Long\"><a href=\"#String-Convert-to-Long\" class=\"headerlink\" title=\"String Convert to Long\"></a>String Convert to Long</h3><p>就是输入数据，由于数据中可能含有字母，仍存储为<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">```java</div><div class=\"line\">//已知字符串和进制，算出对应的十进制数</div><div class=\"line\">public static long strToLong(String str,long radix)&#123;</div><div class=\"line\">    long res=0;</div><div class=\"line\">    int tmp=0;</div><div class=\"line\">    for(int i=str.length()-1;i&gt;=0;i--)&#123;</div><div class=\"line\">        res+=map.get(str.charAt(i))*Math.pow(radix,tmp++);</div><div class=\"line\">    &#125;</div><div class=\"line\">    return res;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h3 id=\"获得未知进制数中最大的字符所代表的十进制数\"><a href=\"#获得未知进制数中最大的字符所代表的十进制数\" class=\"headerlink\" title=\"获得未知进制数中最大的字符所代表的十进制数\"></a>获得未知进制数中最大的字符所代表的十进制数</h3><p>因为进制数一定要大于最大的字符，所以可以通过这一步获得进制的下限</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">String resNumStr = dataStr[resRadixNumPosi];</div><div class=\"line\">    <span class=\"comment\">//获取未知进制数中最大的字符所代表的十进制数</span></div><div class=\"line\">    <span class=\"keyword\">int</span> biggestCharInResNumStr = map.get(resNumStr.charAt(<span class=\"number\">0</span>));</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; resNumStr.length(); i++) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (map.get(resNumStr.charAt(i)) &gt; biggestCharInResNumStr) &#123;</div><div class=\"line\">            biggestCharInResNumStr = map.get(resNumStr.charAt(i));</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<h3 id=\"二分查找\"><a href=\"#二分查找\" class=\"headerlink\" title=\"二分查找\"></a>二分查找</h3><pre><code>下限即上一步所求出的数+1\n上限即为已知进制的数\n\n退出条件:\n    若上下限相同，检查对应两个数在该进制是否相同\n    若下限大于上限，输出Impossible; return;\n</code></pre><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">findRadix</span><span class=\"params\">(<span class=\"keyword\">long</span> num,String str,<span class=\"keyword\">long</span> radixBegin,<span class=\"keyword\">long</span> radixEnd)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span>(radixBegin&gt;radixEnd)&#123;</div><div class=\"line\">        System.out.println(<span class=\"string\">\"Impossible\"</span>);</div><div class=\"line\">        <span class=\"keyword\">return</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">if</span>(radixBegin==radixEnd)&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(strToLong(str,radixBegin)==num)&#123;</div><div class=\"line\">            System.out.println(radixBegin);</div><div class=\"line\">            <span class=\"keyword\">return</span>;</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">            System.out.println(<span class=\"string\">\"Impossible\"</span>);</div><div class=\"line\">            <span class=\"keyword\">return</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">long</span> radixMiddle=(radixBegin+radixEnd)&gt;&gt;<span class=\"number\">1</span>;</div><div class=\"line\">    <span class=\"keyword\">long</span> middleRadixNum=strToLong(str,radixMiddle);</div><div class=\"line\">    <span class=\"keyword\">if</span>(middleRadixNum&gt;num)&#123;</div><div class=\"line\">        findRadix(num,str,radixBegin,radixMiddle);</div><div class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(middleRadixNum==num)&#123;</div><div class=\"line\">        System.out.println(radixMiddle);</div><div class=\"line\">        <span class=\"keyword\">return</span>;</div><div class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">        findRadix(num,str,radixMiddle+<span class=\"number\">1</span>,radixEnd);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"边界条件\"><a href=\"#边界条件\" class=\"headerlink\" title=\"边界条件\"></a>边界条件</h3><pre><code>1.N1和N2一样时，应该输出其中最大字符所代表的数值再+1；\n2.\n</code></pre><h3 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> PAT;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * Created by xgh on 2016/2/21.</div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">_1010_Radix_25</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> HashMap&lt;Character,Integer&gt; map=<span class=\"keyword\">new</span> HashMap&lt;Character, Integer&gt;();</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">    </div><div class=\"line\">        Scanner in = <span class=\"keyword\">new</span> Scanner(System.in);</div><div class=\"line\">        String[] dataStr = (in.nextLine()).split(<span class=\"string\">\" \"</span>);</div><div class=\"line\">        <span class=\"keyword\">int</span> charRepNum = <span class=\"number\">10</span>;</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">char</span> i = <span class=\"string\">'a'</span>; i &lt;= <span class=\"string\">'z'</span>; i++) &#123;</div><div class=\"line\">            map.put(i, charRepNum++);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">9</span>; i++) &#123;</div><div class=\"line\">            map.put((<span class=\"keyword\">char</span>) (i + <span class=\"number\">48</span>), i);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">int</span> givenRadixNumPosi = Integer.parseInt(dataStr[<span class=\"number\">2</span>]);</div><div class=\"line\">        <span class=\"keyword\">long</span> givenRadix = Integer.parseInt(dataStr[<span class=\"number\">3</span>]);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">long</span> aaa = <span class=\"number\">0</span>;</div><div class=\"line\">        <span class=\"keyword\">long</span> givenNum = <span class=\"number\">0</span>;</div><div class=\"line\">        String givenNumStr = dataStr[givenRadixNumPosi - <span class=\"number\">1</span>];</div><div class=\"line\"><span class=\"comment\">//        System.out.println(givenNumStr);</span></div><div class=\"line\"><span class=\"comment\">//        System.out.println(givenRadixNumPosi-1);</span></div><div class=\"line\"><span class=\"comment\">//        for(char e:map.keySet())&#123;</span></div><div class=\"line\"><span class=\"comment\">//            System.out.println(e+\" ==== \"+map.get(e));</span></div><div class=\"line\"><span class=\"comment\">//        &#125;</span></div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = givenNumStr.length() - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--) &#123;</div><div class=\"line\">            givenNum += map.get(givenNumStr.charAt(i)) * Math.pow(givenRadix, aaa++);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">int</span> resRadixNumPosi = <span class=\"number\">0</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span> (givenRadixNumPosi == <span class=\"number\">1</span>) &#123;</div><div class=\"line\">            resRadixNumPosi = <span class=\"number\">1</span>;</div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">            resRadixNumPosi = <span class=\"number\">0</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        String resNumStr = dataStr[resRadixNumPosi];</div><div class=\"line\">        <span class=\"keyword\">int</span> biggestCharInResNumStr = map.get(resNumStr.charAt(<span class=\"number\">0</span>));</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; resNumStr.length(); i++) &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (map.get(resNumStr.charAt(i)) &gt; biggestCharInResNumStr) &#123;</div><div class=\"line\">                biggestCharInResNumStr = map.get(resNumStr.charAt(i));</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span>(strToLong(resNumStr,biggestCharInResNumStr+<span class=\"number\">1</span>)==givenNum)&#123;</div><div class=\"line\">            System.out.println(biggestCharInResNumStr+<span class=\"number\">1</span>);</div><div class=\"line\">            <span class=\"keyword\">return</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//        System.out.println(Integer.parseInt(\"ab\"));</span></div><div class=\"line\"><span class=\"comment\">//        System.out.println(givenNum);</span></div><div class=\"line\"><span class=\"comment\">//        System.out.println(resNumStr);</span></div><div class=\"line\"><span class=\"comment\">//        System.out.println(givenRadix+1);</span></div><div class=\"line\"><span class=\"comment\">//        System.out.println(biggestCharInResNumStr+1);</span></div><div class=\"line\"></div><div class=\"line\">        findRadix(givenNum,resNumStr,biggestCharInResNumStr+<span class=\"number\">1</span>,givenNum+<span class=\"number\">1</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">findRadix</span><span class=\"params\">(<span class=\"keyword\">long</span> num,String str,<span class=\"keyword\">long</span> radixBegin,<span class=\"keyword\">long</span> radixEnd)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(radixBegin&gt;radixEnd)&#123;</div><div class=\"line\">            System.out.println(<span class=\"string\">\"Impossible\"</span>);</div><div class=\"line\">            <span class=\"keyword\">return</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span>(radixBegin==radixEnd)&#123;</div><div class=\"line\">            <span class=\"keyword\">if</span>(strToLong(str,radixBegin)==num)&#123;</div><div class=\"line\">                System.out.println(radixBegin);</div><div class=\"line\">                <span class=\"keyword\">return</span>;</div><div class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">                System.out.println(<span class=\"string\">\"Impossible\"</span>);</div><div class=\"line\">                <span class=\"keyword\">return</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">long</span> radixMiddle=(radixBegin+radixEnd)&gt;&gt;<span class=\"number\">1</span>;</div><div class=\"line\">        <span class=\"keyword\">long</span> middleRadixNum=strToLong(str,radixMiddle);</div><div class=\"line\">        <span class=\"keyword\">if</span>(middleRadixNum&gt;num)&#123;</div><div class=\"line\">            findRadix(num,str,radixBegin,radixMiddle);</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(middleRadixNum==num)&#123;</div><div class=\"line\">            System.out.println(radixMiddle);</div><div class=\"line\">            <span class=\"keyword\">return</span>;</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">            findRadix(num,str,radixMiddle+<span class=\"number\">1</span>,radixEnd);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">long</span> <span class=\"title\">strToLong</span><span class=\"params\">(String str,<span class=\"keyword\">long</span> radix)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">long</span> res=<span class=\"number\">0</span>;</div><div class=\"line\">        <span class=\"keyword\">int</span> tmp=<span class=\"number\">0</span>;</div><div class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=str.length()-<span class=\"number\">1</span>;i&gt;=<span class=\"number\">0</span>;i--)&#123;</div><div class=\"line\">            res+=map.get(str.charAt(i))*Math.pow(radix,tmp++);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> res;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"author":"ivyxjc","date":"2016-09-17T16:00:00.000Z","title":"RecyclerView","keywords":null,"description":null,"_content":"\n## RecyclerView 设置布局格式\n```java\nmRecyclerView = (RecyclerView) v.findViewById(R.id.main_rv);\n//类似ListView显示用\nmRecyclerView.setLayoutManager(new LinearLayoutManager(getActivity()));\n//类似GridView显示\nmRecyclerView.setLayoutManager(new GridLayoutManager(getActivity(), 3));\n\n```\n## RecyclerView 添加适配器 以及设置item点击监听\n\n```java\nMainFragment.java\n\nmRecyclerViewAdapter = new RecyclerViewAdapter(getActivity(), mItems, false);\nmRecyclerView.setAdapter(mRecyclerViewAdapter)\n\nmRecyclerViewAdapter.setOnItemClickListener(new RecyclerViewAdapter.OnItemClickListenerCustom() {\n            @Override\n            public void onItemClick(String id, String title) {\n                Log.i(LogKeys.MAIN_FRAGMENT, \"item is clicked \");\n                Intent intent = new Intent(getActivity(), MovieDetailActivity.class);\n                intent.putExtra(TransferKeys.MAIN_MOVIE_DETAIL_ID, id);\n                intent.putExtra(TransferKeys.MAIN_MOVIE_DETAIL_MOVIE_NAME, title);\n                startActivity(intent);\n                Log.i(LogKeys.MAIN_FRAGMENT, \"startactivity\");\n            }\n        });\n```\n\n```java\npublic class RecyclerViewAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder> {\n    private final Context mContext;\n    private List<MainItem> mData;\n    private OnItemClickListenerCustom mCallback;\n    private boolean mIsComingMovie;\n    private int mTotalCount;\n\n\n    public interface OnItemClickListenerCustom {\n        void onItemClick(String id,String title);\n    }\n\n    public RecyclerViewAdapter_Main(Context context, List<MainItem> data,\n                          boolean isComingMovie) {\n\n        this.mContext = context;\n        this.mData = data;\n        this.mIsComingMovie=isComingMovie;\n    }\n\n    public void refresh(ArrayList<MainItem> data){\n        mData.addAll(data);\n        notifyDataSetChanged();\n    }\n\n    @Override\n    public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n        View view=LayoutInflater.from(mContext)\n                                .inflate(R.layout.item_movie_main,parent,false);\n        return new ItemViewHolder(view);\n    }\n\n    @Override\n    public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {\n        ((ItemViewHolder)holder).update();\n    }\n\n    @Override\n    public int getItemCount() {\n        return mData.size();\n    }\n\n    public void setOnItemClickListener(OnItemClickListenerCustom listener){\n        this.mCallback=listener;\n    }\n\n\n    class ItemViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {\n        TextView textTitle;\n        MainItem mMainItem;\n\n        public ItemViewHolder(View itemView) {\n            super(itemView);\n            //初始化控件\n            itemView.setOnClickListener(this);\n        }\n\n        public void update() {\n            //填充控件\n        }\n\n\n        @Override\n        public void onClick(View v) {\n            if(mCallback!=null){\n                mCallback.onItemClick(mMainItem.getMovieId(),mMainItem.getTitle());\n            }\n        }\n    }\n}\n\n```\n\n## RecyclerView上滑加载\n\n要使FetchItemTask顺序执行, 否则当下滑触发loadMoreData时,会出现多个线程, 若这几个线程同时\n进行,会导致数据重复加载, 这些Task顺序执行, 只需要在doInBackground执行时\n检查star<mRecyclerViewAdapter.getStart()\n若true, 则说明该线程为重复线程 return null\n否则, 执行之后的步骤\n\n```java\nMainFragmentBase.java\nmRecyclerView.addOnScrollListener(new RecyclerView.OnScrollListener()\n{\n    int lastVisibleItem;\n    @Override\n    public void onScrollStateChanged(RecyclerView recyclerView,\n                                     int newState) {\n        super.onScrollStateChanged(recyclerView, newState);\n        if (newState == SCROLL_STATE_IDLE\n                && lastVisibleItem + 1 >= mRecyclerViewAdapter.getItemCount()\n                && mRecyclerViewAdapter.getItemCount() < mRecyclerViewAdapter.getTotalDataCount()) {\n            loadMoreData(mRecyclerViewAdapter.getStart());\n        }\n    }\n\n    @Override\n    public void onScrolled(RecyclerView recyclerView, int dx, int dy) {\n        super.onScrolled(recyclerView, dx, dy);\n        LinearLayoutManager layoutManager = (LinearLayoutManager) mRecyclerView.getLayoutManager();\n        lastVisibleItem = layoutManager.findLastVisibleItemPosition();\n\n    }\n});\n\nprotected abstract void loadMoreData(int start);\n\n\nMainFragment.java extentds MainFragmentBase.java\n\n\n\n@Override\npublic void onCreate(@Nullable Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n\n    new FetchItemTask(0).executeOnExecutor(AsyncTask.SERIAL_EXECUTOR);\n}\n\n@Override\nprotected void loadMoreData(int start) {\n    new FetchItemTask(start).executeOnExecutor(AsyncTask.SERIAL_EXECUTOR);\n}\n\nprivate class FetchItemTask extends AsyncTask<Void, Void, ArrayList<MainItem>> {\n    private int start=0;\n\n    public FetchItemTask(int s){\n        start=s;\n    }\n\n\n    @Override\n    protected ArrayList<MainItem> doInBackground(Void... params) {\n        if(start<mRecyclerViewAdapter.getStart()){\n            return null\n        }\n        DoubanFetchrMain df=new DoubanFetchrMain(0,start);\n        mRecyclerViewAdapter.setTotalCount(df.getTotalCount());\n        return df.fetchItems_SubjectInTheaters();\n    }\n\n    @Override\n    protected void onPostExecute(ArrayList<MainItem> galleryItems){\n        mItems = galleryItems;\n        if(mItems==null){\n            return;\n        }\n        mRecyclerViewAdapter.addMoreData(mItems,start);\n\n    }\n\n}\n```\n\n## 注意点\n\n点击图片进入电影详细页面时, 如果在详细页面图片未加载时返回, 应用会crash.<br>\n应该是此时ImageView已经被销毁了, 所以就造成NullPointerException.\n\n官方说已经解决这个问题, 但是下面这写法还是会crash.\n\n```java\nGlide.with(getActivity())\n     .load(url)\n     .diskCacheStrategy(DiskCacheStrategy.ALL)\n     .centerCrop()\n     .into(imageMovie);\n```\n\n更改为\n\n```java\nonCreate(...){\nmRequestManager=Glide.with(getActivity());\n}\n\n...\nmRequestManager\n           .load(url)\n           .diskCacheStrategy(DiskCacheStrategy.ALL)\n           .centerCrop()\n           .into(imageMovie);\n```\n\n这样就不会出问题.\n","source":"_posts/android/UI相关/2016-09-18-RecyclerView.md","raw":"---\nauthor: ivyxjc\ndate: 2016-09-18\ntitle: RecyclerView\ncategory: Android\ntags: [android,UI,RecyclerView]\nkeywords:\ndescription:\n---\n\n## RecyclerView 设置布局格式\n```java\nmRecyclerView = (RecyclerView) v.findViewById(R.id.main_rv);\n//类似ListView显示用\nmRecyclerView.setLayoutManager(new LinearLayoutManager(getActivity()));\n//类似GridView显示\nmRecyclerView.setLayoutManager(new GridLayoutManager(getActivity(), 3));\n\n```\n## RecyclerView 添加适配器 以及设置item点击监听\n\n```java\nMainFragment.java\n\nmRecyclerViewAdapter = new RecyclerViewAdapter(getActivity(), mItems, false);\nmRecyclerView.setAdapter(mRecyclerViewAdapter)\n\nmRecyclerViewAdapter.setOnItemClickListener(new RecyclerViewAdapter.OnItemClickListenerCustom() {\n            @Override\n            public void onItemClick(String id, String title) {\n                Log.i(LogKeys.MAIN_FRAGMENT, \"item is clicked \");\n                Intent intent = new Intent(getActivity(), MovieDetailActivity.class);\n                intent.putExtra(TransferKeys.MAIN_MOVIE_DETAIL_ID, id);\n                intent.putExtra(TransferKeys.MAIN_MOVIE_DETAIL_MOVIE_NAME, title);\n                startActivity(intent);\n                Log.i(LogKeys.MAIN_FRAGMENT, \"startactivity\");\n            }\n        });\n```\n\n```java\npublic class RecyclerViewAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder> {\n    private final Context mContext;\n    private List<MainItem> mData;\n    private OnItemClickListenerCustom mCallback;\n    private boolean mIsComingMovie;\n    private int mTotalCount;\n\n\n    public interface OnItemClickListenerCustom {\n        void onItemClick(String id,String title);\n    }\n\n    public RecyclerViewAdapter_Main(Context context, List<MainItem> data,\n                          boolean isComingMovie) {\n\n        this.mContext = context;\n        this.mData = data;\n        this.mIsComingMovie=isComingMovie;\n    }\n\n    public void refresh(ArrayList<MainItem> data){\n        mData.addAll(data);\n        notifyDataSetChanged();\n    }\n\n    @Override\n    public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n        View view=LayoutInflater.from(mContext)\n                                .inflate(R.layout.item_movie_main,parent,false);\n        return new ItemViewHolder(view);\n    }\n\n    @Override\n    public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {\n        ((ItemViewHolder)holder).update();\n    }\n\n    @Override\n    public int getItemCount() {\n        return mData.size();\n    }\n\n    public void setOnItemClickListener(OnItemClickListenerCustom listener){\n        this.mCallback=listener;\n    }\n\n\n    class ItemViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {\n        TextView textTitle;\n        MainItem mMainItem;\n\n        public ItemViewHolder(View itemView) {\n            super(itemView);\n            //初始化控件\n            itemView.setOnClickListener(this);\n        }\n\n        public void update() {\n            //填充控件\n        }\n\n\n        @Override\n        public void onClick(View v) {\n            if(mCallback!=null){\n                mCallback.onItemClick(mMainItem.getMovieId(),mMainItem.getTitle());\n            }\n        }\n    }\n}\n\n```\n\n## RecyclerView上滑加载\n\n要使FetchItemTask顺序执行, 否则当下滑触发loadMoreData时,会出现多个线程, 若这几个线程同时\n进行,会导致数据重复加载, 这些Task顺序执行, 只需要在doInBackground执行时\n检查star<mRecyclerViewAdapter.getStart()\n若true, 则说明该线程为重复线程 return null\n否则, 执行之后的步骤\n\n```java\nMainFragmentBase.java\nmRecyclerView.addOnScrollListener(new RecyclerView.OnScrollListener()\n{\n    int lastVisibleItem;\n    @Override\n    public void onScrollStateChanged(RecyclerView recyclerView,\n                                     int newState) {\n        super.onScrollStateChanged(recyclerView, newState);\n        if (newState == SCROLL_STATE_IDLE\n                && lastVisibleItem + 1 >= mRecyclerViewAdapter.getItemCount()\n                && mRecyclerViewAdapter.getItemCount() < mRecyclerViewAdapter.getTotalDataCount()) {\n            loadMoreData(mRecyclerViewAdapter.getStart());\n        }\n    }\n\n    @Override\n    public void onScrolled(RecyclerView recyclerView, int dx, int dy) {\n        super.onScrolled(recyclerView, dx, dy);\n        LinearLayoutManager layoutManager = (LinearLayoutManager) mRecyclerView.getLayoutManager();\n        lastVisibleItem = layoutManager.findLastVisibleItemPosition();\n\n    }\n});\n\nprotected abstract void loadMoreData(int start);\n\n\nMainFragment.java extentds MainFragmentBase.java\n\n\n\n@Override\npublic void onCreate(@Nullable Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n\n    new FetchItemTask(0).executeOnExecutor(AsyncTask.SERIAL_EXECUTOR);\n}\n\n@Override\nprotected void loadMoreData(int start) {\n    new FetchItemTask(start).executeOnExecutor(AsyncTask.SERIAL_EXECUTOR);\n}\n\nprivate class FetchItemTask extends AsyncTask<Void, Void, ArrayList<MainItem>> {\n    private int start=0;\n\n    public FetchItemTask(int s){\n        start=s;\n    }\n\n\n    @Override\n    protected ArrayList<MainItem> doInBackground(Void... params) {\n        if(start<mRecyclerViewAdapter.getStart()){\n            return null\n        }\n        DoubanFetchrMain df=new DoubanFetchrMain(0,start);\n        mRecyclerViewAdapter.setTotalCount(df.getTotalCount());\n        return df.fetchItems_SubjectInTheaters();\n    }\n\n    @Override\n    protected void onPostExecute(ArrayList<MainItem> galleryItems){\n        mItems = galleryItems;\n        if(mItems==null){\n            return;\n        }\n        mRecyclerViewAdapter.addMoreData(mItems,start);\n\n    }\n\n}\n```\n\n## 注意点\n\n点击图片进入电影详细页面时, 如果在详细页面图片未加载时返回, 应用会crash.<br>\n应该是此时ImageView已经被销毁了, 所以就造成NullPointerException.\n\n官方说已经解决这个问题, 但是下面这写法还是会crash.\n\n```java\nGlide.with(getActivity())\n     .load(url)\n     .diskCacheStrategy(DiskCacheStrategy.ALL)\n     .centerCrop()\n     .into(imageMovie);\n```\n\n更改为\n\n```java\nonCreate(...){\nmRequestManager=Glide.with(getActivity());\n}\n\n...\nmRequestManager\n           .load(url)\n           .diskCacheStrategy(DiskCacheStrategy.ALL)\n           .centerCrop()\n           .into(imageMovie);\n```\n\n这样就不会出问题.\n","slug":"android/UI相关/2016-09-18-RecyclerView","published":1,"updated":"2016-10-13T13:27:56.808Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f00zr0015cwjrszxh772o","content":"<h2 id=\"RecyclerView-设置布局格式\"><a href=\"#RecyclerView-设置布局格式\" class=\"headerlink\" title=\"RecyclerView 设置布局格式\"></a>RecyclerView 设置布局格式</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">mRecyclerView = (RecyclerView) v.findViewById(R.id.main_rv);</div><div class=\"line\"><span class=\"comment\">//类似ListView显示用</span></div><div class=\"line\">mRecyclerView.setLayoutManager(<span class=\"keyword\">new</span> LinearLayoutManager(getActivity()));</div><div class=\"line\"><span class=\"comment\">//类似GridView显示</span></div><div class=\"line\">mRecyclerView.setLayoutManager(<span class=\"keyword\">new</span> GridLayoutManager(getActivity(), <span class=\"number\">3</span>));</div></pre></td></tr></table></figure>\n<h2 id=\"RecyclerView-添加适配器-以及设置item点击监听\"><a href=\"#RecyclerView-添加适配器-以及设置item点击监听\" class=\"headerlink\" title=\"RecyclerView 添加适配器 以及设置item点击监听\"></a>RecyclerView 添加适配器 以及设置item点击监听</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">MainFragment.java</div><div class=\"line\"></div><div class=\"line\">mRecyclerViewAdapter = <span class=\"keyword\">new</span> RecyclerViewAdapter(getActivity(), mItems, <span class=\"keyword\">false</span>);</div><div class=\"line\">mRecyclerView.setAdapter(mRecyclerViewAdapter)</div><div class=\"line\"></div><div class=\"line\">mRecyclerViewAdapter.setOnItemClickListener(<span class=\"keyword\">new</span> RecyclerViewAdapter.OnItemClickListenerCustom() &#123;</div><div class=\"line\">            <span class=\"meta\">@Override</span></div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onItemClick</span><span class=\"params\">(String id, String title)</span> </span>&#123;</div><div class=\"line\">                Log.i(LogKeys.MAIN_FRAGMENT, <span class=\"string\">\"item is clicked \"</span>);</div><div class=\"line\">                Intent intent = <span class=\"keyword\">new</span> Intent(getActivity(), MovieDetailActivity.class);</div><div class=\"line\">                intent.putExtra(TransferKeys.MAIN_MOVIE_DETAIL_ID, id);</div><div class=\"line\">                intent.putExtra(TransferKeys.MAIN_MOVIE_DETAIL_MOVIE_NAME, title);</div><div class=\"line\">                startActivity(intent);</div><div class=\"line\">                Log.i(LogKeys.MAIN_FRAGMENT, <span class=\"string\">\"startactivity\"</span>);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;);</div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RecyclerViewAdapter</span> <span class=\"keyword\">extends</span> <span class=\"title\">RecyclerView</span>.<span class=\"title\">Adapter</span>&lt;<span class=\"title\">RecyclerView</span>.<span class=\"title\">ViewHolder</span>&gt; </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Context mContext;</div><div class=\"line\">    <span class=\"keyword\">private</span> List&lt;MainItem&gt; mData;</div><div class=\"line\">    <span class=\"keyword\">private</span> OnItemClickListenerCustom mCallback;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> mIsComingMovie;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> mTotalCount;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">OnItemClickListenerCustom</span> </span>&#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onItemClick</span><span class=\"params\">(String id,String title)</span></span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">RecyclerViewAdapter_Main</span><span class=\"params\">(Context context, List&lt;MainItem&gt; data,</span></span></div><div class=\"line\">                          <span class=\"keyword\">boolean</span> isComingMovie) &#123;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">this</span>.mContext = context;</div><div class=\"line\">        <span class=\"keyword\">this</span>.mData = data;</div><div class=\"line\">        <span class=\"keyword\">this</span>.mIsComingMovie=isComingMovie;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">refresh</span><span class=\"params\">(ArrayList&lt;MainItem&gt; data)</span></span>&#123;</div><div class=\"line\">        mData.addAll(data);</div><div class=\"line\">        notifyDataSetChanged();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"keyword\">public</span> RecyclerView.<span class=\"function\">ViewHolder <span class=\"title\">onCreateViewHolder</span><span class=\"params\">(ViewGroup parent, <span class=\"keyword\">int</span> viewType)</span> </span>&#123;</div><div class=\"line\">        View view=LayoutInflater.from(mContext)</div><div class=\"line\">                                .inflate(R.layout.item_movie_main,parent,<span class=\"keyword\">false</span>);</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> ItemViewHolder(view);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onBindViewHolder</span><span class=\"params\">(RecyclerView.ViewHolder holder, <span class=\"keyword\">int</span> position)</span> </span>&#123;</div><div class=\"line\">        ((ItemViewHolder)holder).update();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getItemCount</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> mData.size();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setOnItemClickListener</span><span class=\"params\">(OnItemClickListenerCustom listener)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.mCallback=listener;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ItemViewHolder</span> <span class=\"keyword\">extends</span> <span class=\"title\">RecyclerView</span>.<span class=\"title\">ViewHolder</span> <span class=\"keyword\">implements</span> <span class=\"title\">View</span>.<span class=\"title\">OnClickListener</span> </span>&#123;</div><div class=\"line\">        TextView textTitle;</div><div class=\"line\">        MainItem mMainItem;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ItemViewHolder</span><span class=\"params\">(View itemView)</span> </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">super</span>(itemView);</div><div class=\"line\">            <span class=\"comment\">//初始化控件</span></div><div class=\"line\">            itemView.setOnClickListener(<span class=\"keyword\">this</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">update</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">            <span class=\"comment\">//填充控件</span></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">@Override</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span> </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">if</span>(mCallback!=<span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">                mCallback.onItemClick(mMainItem.getMovieId(),mMainItem.getTitle());</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"RecyclerView上滑加载\"><a href=\"#RecyclerView上滑加载\" class=\"headerlink\" title=\"RecyclerView上滑加载\"></a>RecyclerView上滑加载</h2><p>要使FetchItemTask顺序执行, 否则当下滑触发loadMoreData时,会出现多个线程, 若这几个线程同时<br>进行,会导致数据重复加载, 这些Task顺序执行, 只需要在doInBackground执行时<br>检查star&lt;mRecyclerViewAdapter.getStart()<br>若true, 则说明该线程为重复线程 return null<br>否则, 执行之后的步骤</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div></pre></td><td class=\"code\"><pre><div class=\"line\">MainFragmentBase.java</div><div class=\"line\">mRecyclerView.addOnScrollListener(<span class=\"keyword\">new</span> RecyclerView.OnScrollListener()</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> lastVisibleItem;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onScrollStateChanged</span><span class=\"params\">(RecyclerView recyclerView,</span></span></div><div class=\"line\">                                     <span class=\"keyword\">int</span> newState) &#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onScrollStateChanged(recyclerView, newState);</div><div class=\"line\">        <span class=\"keyword\">if</span> (newState == SCROLL_STATE_IDLE</div><div class=\"line\">                &amp;&amp; lastVisibleItem + <span class=\"number\">1</span> &gt;= mRecyclerViewAdapter.getItemCount()</div><div class=\"line\">                &amp;&amp; mRecyclerViewAdapter.getItemCount() &lt; mRecyclerViewAdapter.getTotalDataCount()) &#123;</div><div class=\"line\">            loadMoreData(mRecyclerViewAdapter.getStart());</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onScrolled</span><span class=\"params\">(RecyclerView recyclerView, <span class=\"keyword\">int</span> dx, <span class=\"keyword\">int</span> dy)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onScrolled(recyclerView, dx, dy);</div><div class=\"line\">        LinearLayoutManager layoutManager = (LinearLayoutManager) mRecyclerView.getLayoutManager();</div><div class=\"line\">        lastVisibleItem = layoutManager.findLastVisibleItemPosition();</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">loadMoreData</span><span class=\"params\">(<span class=\"keyword\">int</span> start)</span></span>;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">MainFragment.java extentds MainFragmentBase.java</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@Override</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(@Nullable Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">new</span> FetchItemTask(<span class=\"number\">0</span>).executeOnExecutor(AsyncTask.SERIAL_EXECUTOR);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@Override</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">loadMoreData</span><span class=\"params\">(<span class=\"keyword\">int</span> start)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">new</span> FetchItemTask(start).executeOnExecutor(AsyncTask.SERIAL_EXECUTOR);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FetchItemTask</span> <span class=\"keyword\">extends</span> <span class=\"title\">AsyncTask</span>&lt;<span class=\"title\">Void</span>, <span class=\"title\">Void</span>, <span class=\"title\">ArrayList</span>&lt;<span class=\"title\">MainItem</span>&gt;&gt; </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> start=<span class=\"number\">0</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">FetchItemTask</span><span class=\"params\">(<span class=\"keyword\">int</span> s)</span></span>&#123;</div><div class=\"line\">        start=s;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> ArrayList&lt;MainItem&gt; <span class=\"title\">doInBackground</span><span class=\"params\">(Void... params)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(start&lt;mRecyclerViewAdapter.getStart())&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span></div><div class=\"line\">        &#125;</div><div class=\"line\">        DoubanFetchrMain df=<span class=\"keyword\">new</span> DoubanFetchrMain(<span class=\"number\">0</span>,start);</div><div class=\"line\">        mRecyclerViewAdapter.setTotalCount(df.getTotalCount());</div><div class=\"line\">        <span class=\"keyword\">return</span> df.fetchItems_SubjectInTheaters();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onPostExecute</span><span class=\"params\">(ArrayList&lt;MainItem&gt; galleryItems)</span></span>&#123;</div><div class=\"line\">        mItems = galleryItems;</div><div class=\"line\">        <span class=\"keyword\">if</span>(mItems==<span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        mRecyclerViewAdapter.addMoreData(mItems,start);</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"注意点\"><a href=\"#注意点\" class=\"headerlink\" title=\"注意点\"></a>注意点</h2><p>点击图片进入电影详细页面时, 如果在详细页面图片未加载时返回, 应用会crash.<br><br>应该是此时ImageView已经被销毁了, 所以就造成NullPointerException.</p>\n<p>官方说已经解决这个问题, 但是下面这写法还是会crash.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">Glide.with(getActivity())</div><div class=\"line\">     .load(url)</div><div class=\"line\">     .diskCacheStrategy(DiskCacheStrategy.ALL)</div><div class=\"line\">     .centerCrop()</div><div class=\"line\">     .into(imageMovie);</div></pre></td></tr></table></figure>\n<p>更改为</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">onCreate(...)&#123;</div><div class=\"line\">mRequestManager=Glide.with(getActivity());</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">...</div><div class=\"line\">mRequestManager</div><div class=\"line\">           .load(url)</div><div class=\"line\">           .diskCacheStrategy(DiskCacheStrategy.ALL)</div><div class=\"line\">           .centerCrop()</div><div class=\"line\">           .into(imageMovie);</div></pre></td></tr></table></figure>\n<p>这样就不会出问题.</p>\n","excerpt":"","more":"<h2 id=\"RecyclerView-设置布局格式\"><a href=\"#RecyclerView-设置布局格式\" class=\"headerlink\" title=\"RecyclerView 设置布局格式\"></a>RecyclerView 设置布局格式</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">mRecyclerView = (RecyclerView) v.findViewById(R.id.main_rv);</div><div class=\"line\"><span class=\"comment\">//类似ListView显示用</span></div><div class=\"line\">mRecyclerView.setLayoutManager(<span class=\"keyword\">new</span> LinearLayoutManager(getActivity()));</div><div class=\"line\"><span class=\"comment\">//类似GridView显示</span></div><div class=\"line\">mRecyclerView.setLayoutManager(<span class=\"keyword\">new</span> GridLayoutManager(getActivity(), <span class=\"number\">3</span>));</div></pre></td></tr></table></figure>\n<h2 id=\"RecyclerView-添加适配器-以及设置item点击监听\"><a href=\"#RecyclerView-添加适配器-以及设置item点击监听\" class=\"headerlink\" title=\"RecyclerView 添加适配器 以及设置item点击监听\"></a>RecyclerView 添加适配器 以及设置item点击监听</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">MainFragment.java</div><div class=\"line\"></div><div class=\"line\">mRecyclerViewAdapter = <span class=\"keyword\">new</span> RecyclerViewAdapter(getActivity(), mItems, <span class=\"keyword\">false</span>);</div><div class=\"line\">mRecyclerView.setAdapter(mRecyclerViewAdapter)</div><div class=\"line\"></div><div class=\"line\">mRecyclerViewAdapter.setOnItemClickListener(<span class=\"keyword\">new</span> RecyclerViewAdapter.OnItemClickListenerCustom() &#123;</div><div class=\"line\">            <span class=\"meta\">@Override</span></div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onItemClick</span><span class=\"params\">(String id, String title)</span> </span>&#123;</div><div class=\"line\">                Log.i(LogKeys.MAIN_FRAGMENT, <span class=\"string\">\"item is clicked \"</span>);</div><div class=\"line\">                Intent intent = <span class=\"keyword\">new</span> Intent(getActivity(), MovieDetailActivity.class);</div><div class=\"line\">                intent.putExtra(TransferKeys.MAIN_MOVIE_DETAIL_ID, id);</div><div class=\"line\">                intent.putExtra(TransferKeys.MAIN_MOVIE_DETAIL_MOVIE_NAME, title);</div><div class=\"line\">                startActivity(intent);</div><div class=\"line\">                Log.i(LogKeys.MAIN_FRAGMENT, <span class=\"string\">\"startactivity\"</span>);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;);</div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RecyclerViewAdapter</span> <span class=\"keyword\">extends</span> <span class=\"title\">RecyclerView</span>.<span class=\"title\">Adapter</span>&lt;<span class=\"title\">RecyclerView</span>.<span class=\"title\">ViewHolder</span>&gt; </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Context mContext;</div><div class=\"line\">    <span class=\"keyword\">private</span> List&lt;MainItem&gt; mData;</div><div class=\"line\">    <span class=\"keyword\">private</span> OnItemClickListenerCustom mCallback;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> mIsComingMovie;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> mTotalCount;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">OnItemClickListenerCustom</span> </span>&#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onItemClick</span><span class=\"params\">(String id,String title)</span></span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">RecyclerViewAdapter_Main</span><span class=\"params\">(Context context, List&lt;MainItem&gt; data,</div><div class=\"line\">                          <span class=\"keyword\">boolean</span> isComingMovie)</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">this</span>.mContext = context;</div><div class=\"line\">        <span class=\"keyword\">this</span>.mData = data;</div><div class=\"line\">        <span class=\"keyword\">this</span>.mIsComingMovie=isComingMovie;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">refresh</span><span class=\"params\">(ArrayList&lt;MainItem&gt; data)</span></span>&#123;</div><div class=\"line\">        mData.addAll(data);</div><div class=\"line\">        notifyDataSetChanged();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"keyword\">public</span> RecyclerView.<span class=\"function\">ViewHolder <span class=\"title\">onCreateViewHolder</span><span class=\"params\">(ViewGroup parent, <span class=\"keyword\">int</span> viewType)</span> </span>&#123;</div><div class=\"line\">        View view=LayoutInflater.from(mContext)</div><div class=\"line\">                                .inflate(R.layout.item_movie_main,parent,<span class=\"keyword\">false</span>);</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> ItemViewHolder(view);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onBindViewHolder</span><span class=\"params\">(RecyclerView.ViewHolder holder, <span class=\"keyword\">int</span> position)</span> </span>&#123;</div><div class=\"line\">        ((ItemViewHolder)holder).update();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getItemCount</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> mData.size();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setOnItemClickListener</span><span class=\"params\">(OnItemClickListenerCustom listener)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.mCallback=listener;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ItemViewHolder</span> <span class=\"keyword\">extends</span> <span class=\"title\">RecyclerView</span>.<span class=\"title\">ViewHolder</span> <span class=\"keyword\">implements</span> <span class=\"title\">View</span>.<span class=\"title\">OnClickListener</span> </span>&#123;</div><div class=\"line\">        TextView textTitle;</div><div class=\"line\">        MainItem mMainItem;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ItemViewHolder</span><span class=\"params\">(View itemView)</span> </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">super</span>(itemView);</div><div class=\"line\">            <span class=\"comment\">//初始化控件</span></div><div class=\"line\">            itemView.setOnClickListener(<span class=\"keyword\">this</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">update</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">            <span class=\"comment\">//填充控件</span></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">@Override</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span> </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">if</span>(mCallback!=<span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">                mCallback.onItemClick(mMainItem.getMovieId(),mMainItem.getTitle());</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"RecyclerView上滑加载\"><a href=\"#RecyclerView上滑加载\" class=\"headerlink\" title=\"RecyclerView上滑加载\"></a>RecyclerView上滑加载</h2><p>要使FetchItemTask顺序执行, 否则当下滑触发loadMoreData时,会出现多个线程, 若这几个线程同时<br>进行,会导致数据重复加载, 这些Task顺序执行, 只需要在doInBackground执行时<br>检查star&lt;mRecyclerViewAdapter.getStart()<br>若true, 则说明该线程为重复线程 return null<br>否则, 执行之后的步骤</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div></pre></td><td class=\"code\"><pre><div class=\"line\">MainFragmentBase.java</div><div class=\"line\">mRecyclerView.addOnScrollListener(<span class=\"keyword\">new</span> RecyclerView.OnScrollListener()</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> lastVisibleItem;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onScrollStateChanged</span><span class=\"params\">(RecyclerView recyclerView,</div><div class=\"line\">                                     <span class=\"keyword\">int</span> newState)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onScrollStateChanged(recyclerView, newState);</div><div class=\"line\">        <span class=\"keyword\">if</span> (newState == SCROLL_STATE_IDLE</div><div class=\"line\">                &amp;&amp; lastVisibleItem + <span class=\"number\">1</span> &gt;= mRecyclerViewAdapter.getItemCount()</div><div class=\"line\">                &amp;&amp; mRecyclerViewAdapter.getItemCount() &lt; mRecyclerViewAdapter.getTotalDataCount()) &#123;</div><div class=\"line\">            loadMoreData(mRecyclerViewAdapter.getStart());</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onScrolled</span><span class=\"params\">(RecyclerView recyclerView, <span class=\"keyword\">int</span> dx, <span class=\"keyword\">int</span> dy)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onScrolled(recyclerView, dx, dy);</div><div class=\"line\">        LinearLayoutManager layoutManager = (LinearLayoutManager) mRecyclerView.getLayoutManager();</div><div class=\"line\">        lastVisibleItem = layoutManager.findLastVisibleItemPosition();</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">loadMoreData</span><span class=\"params\">(<span class=\"keyword\">int</span> start)</span></span>;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">MainFragment.java extentds MainFragmentBase.java</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@Override</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(@Nullable Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">new</span> FetchItemTask(<span class=\"number\">0</span>).executeOnExecutor(AsyncTask.SERIAL_EXECUTOR);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@Override</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">loadMoreData</span><span class=\"params\">(<span class=\"keyword\">int</span> start)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">new</span> FetchItemTask(start).executeOnExecutor(AsyncTask.SERIAL_EXECUTOR);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FetchItemTask</span> <span class=\"keyword\">extends</span> <span class=\"title\">AsyncTask</span>&lt;<span class=\"title\">Void</span>, <span class=\"title\">Void</span>, <span class=\"title\">ArrayList</span>&lt;<span class=\"title\">MainItem</span>&gt;&gt; </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> start=<span class=\"number\">0</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">FetchItemTask</span><span class=\"params\">(<span class=\"keyword\">int</span> s)</span></span>&#123;</div><div class=\"line\">        start=s;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> ArrayList&lt;MainItem&gt; <span class=\"title\">doInBackground</span><span class=\"params\">(Void... params)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(start&lt;mRecyclerViewAdapter.getStart())&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span></div><div class=\"line\">        &#125;</div><div class=\"line\">        DoubanFetchrMain df=<span class=\"keyword\">new</span> DoubanFetchrMain(<span class=\"number\">0</span>,start);</div><div class=\"line\">        mRecyclerViewAdapter.setTotalCount(df.getTotalCount());</div><div class=\"line\">        <span class=\"keyword\">return</span> df.fetchItems_SubjectInTheaters();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onPostExecute</span><span class=\"params\">(ArrayList&lt;MainItem&gt; galleryItems)</span></span>&#123;</div><div class=\"line\">        mItems = galleryItems;</div><div class=\"line\">        <span class=\"keyword\">if</span>(mItems==<span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        mRecyclerViewAdapter.addMoreData(mItems,start);</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"注意点\"><a href=\"#注意点\" class=\"headerlink\" title=\"注意点\"></a>注意点</h2><p>点击图片进入电影详细页面时, 如果在详细页面图片未加载时返回, 应用会crash.<br><br>应该是此时ImageView已经被销毁了, 所以就造成NullPointerException.</p>\n<p>官方说已经解决这个问题, 但是下面这写法还是会crash.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">Glide.with(getActivity())</div><div class=\"line\">     .load(url)</div><div class=\"line\">     .diskCacheStrategy(DiskCacheStrategy.ALL)</div><div class=\"line\">     .centerCrop()</div><div class=\"line\">     .into(imageMovie);</div></pre></td></tr></table></figure>\n<p>更改为</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">onCreate(...)&#123;</div><div class=\"line\">mRequestManager=Glide.with(getActivity());</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">...</div><div class=\"line\">mRequestManager</div><div class=\"line\">           .load(url)</div><div class=\"line\">           .diskCacheStrategy(DiskCacheStrategy.ALL)</div><div class=\"line\">           .centerCrop()</div><div class=\"line\">           .into(imageMovie);</div></pre></td></tr></table></figure>\n<p>这样就不会出问题.</p>\n"},{"author":"ivyxjc","date":"2016-03-09T16:00:00.000Z","title":"adb常用命令","keywords":null,"description":null,"_content":"\n## 设备相关\n**adb devices**:查看连接的设备<br>\n\n**adb -s  serial number shell** :serial number及上命令得到的设备编号\n\n## 录制屏幕相关\n<<<<<<< HEAD\n**adb screerecord /sdcard/test.mp4**：录制手机实况视频到test.mp4，按**ctrl+c**结束，否则录制320s。\n\n**adb screerecord --size 1280*720 /sdcard/test.mp4** :制定视频大小\n\n** adb shell screenrecord --bit-rate 6000000 /sdcard/test.mp4** :制定视频码率\n\n**adb shell screenrecord --rotate /sdcard/test.mp4** :旋转\n\n**adb pull /sdcard/test.mp4 E:/** :导出视频\n=======\n**adb screenrecord /sdcard/test.mp4**：录制手机实况视频到test.mp4，按**ctrl+c**结束，否则录制320s。\n","source":"_posts/android/adb/2016-03-10-adb-console.md","raw":"---\nauthor: ivyxjc\ndate: 2016-03-10\ntitle: adb常用命令\ncategory: Android\ntags: [android,android_adb]\nkeywords:\ndescription:\n---\n\n## 设备相关\n**adb devices**:查看连接的设备<br>\n\n**adb -s  serial number shell** :serial number及上命令得到的设备编号\n\n## 录制屏幕相关\n<<<<<<< HEAD\n**adb screerecord /sdcard/test.mp4**：录制手机实况视频到test.mp4，按**ctrl+c**结束，否则录制320s。\n\n**adb screerecord --size 1280*720 /sdcard/test.mp4** :制定视频大小\n\n** adb shell screenrecord --bit-rate 6000000 /sdcard/test.mp4** :制定视频码率\n\n**adb shell screenrecord --rotate /sdcard/test.mp4** :旋转\n\n**adb pull /sdcard/test.mp4 E:/** :导出视频\n=======\n**adb screenrecord /sdcard/test.mp4**：录制手机实况视频到test.mp4，按**ctrl+c**结束，否则录制320s。\n","slug":"android/adb/2016-03-10-adb-console","published":1,"updated":"2016-10-13T13:26:28.372Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f00zx0018cwjrfrpa0s19","content":"<h2 id=\"设备相关\"><a href=\"#设备相关\" class=\"headerlink\" title=\"设备相关\"></a>设备相关</h2><p><strong>adb devices</strong>:查看连接的设备<br></p>\n<p><strong>adb -s  serial number shell</strong> :serial number及上命令得到的设备编号</p>\n<h2 id=\"录制屏幕相关\"><a href=\"#录制屏幕相关\" class=\"headerlink\" title=\"录制屏幕相关\"></a>录制屏幕相关</h2><p>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD<br><strong>adb screerecord /sdcard/test.mp4</strong>：录制手机实况视频到test.mp4，按<strong>ctrl+c</strong>结束，否则录制320s。</p>\n<p><strong>adb screerecord –size 1280*720 /sdcard/test.mp4</strong> :制定视频大小</p>\n<p><strong> adb shell screenrecord –bit-rate 6000000 /sdcard/test.mp4</strong> :制定视频码率</p>\n<p><strong>adb shell screenrecord –rotate /sdcard/test.mp4</strong> :旋转</p>\n<h1 id=\"adb-pull-sdcard-test-mp4-E-导出视频\"><a href=\"#adb-pull-sdcard-test-mp4-E-导出视频\" class=\"headerlink\" title=\"adb pull /sdcard/test.mp4 E:/ :导出视频\"></a><strong>adb pull /sdcard/test.mp4 E:/</strong> :导出视频</h1><p><strong>adb screenrecord /sdcard/test.mp4</strong>：录制手机实况视频到test.mp4，按<strong>ctrl+c</strong>结束，否则录制320s。</p>\n","excerpt":"","more":"<h2 id=\"设备相关\"><a href=\"#设备相关\" class=\"headerlink\" title=\"设备相关\"></a>设备相关</h2><p><strong>adb devices</strong>:查看连接的设备<br></p>\n<p><strong>adb -s  serial number shell</strong> :serial number及上命令得到的设备编号</p>\n<h2 id=\"录制屏幕相关\"><a href=\"#录制屏幕相关\" class=\"headerlink\" title=\"录制屏幕相关\"></a>录制屏幕相关</h2><p>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD<br><strong>adb screerecord /sdcard/test.mp4</strong>：录制手机实况视频到test.mp4，按<strong>ctrl+c</strong>结束，否则录制320s。</p>\n<p><strong>adb screerecord –size 1280*720 /sdcard/test.mp4</strong> :制定视频大小</p>\n<p><strong> adb shell screenrecord –bit-rate 6000000 /sdcard/test.mp4</strong> :制定视频码率</p>\n<p><strong>adb shell screenrecord –rotate /sdcard/test.mp4</strong> :旋转</p>\n<h1 id=\"adb-pull-sdcard-test-mp4-E-导出视频\"><a href=\"#adb-pull-sdcard-test-mp4-E-导出视频\" class=\"headerlink\" title=\"adb pull /sdcard/test.mp4 E:/ :导出视频\"></a><strong>adb pull /sdcard/test.mp4 E:/</strong> :导出视频</h1><p><strong>adb screenrecord /sdcard/test.mp4</strong>：录制手机实况视频到test.mp4，按<strong>ctrl+c</strong>结束，否则录制320s。</p>\n"},{"date":"2016-06-01T16:00:00.000Z","title":"Activity的生命周期","keywords":null,"description":null,"_content":"## 生命周期\n1. `onCreate()``\n2. `onStart()`\n3. `onResume()`\n4. `onPause()`\n5. `onPause()`\n6. `onDestory()`\n\n\n### `onCreate()`的作用\n\n1. 实例化组件并将组件放在屏幕上\n2. 引用已经实例化的组件\n3. 为组件设置监听器以处理用户交互\n4. 访问外部模型数据\n\n## 翻转屏幕对生命周期的影响\n翻转屏幕会导致`Activity`先会被销毁再重新创建，若不加以处理会导致很多意外的问题。顺序为`onPause()`,`onStop()`,`onDestory()`,`onCreate()`,`onStart()`,`onResume()`\n","source":"_posts/android/lifecycle/2016-06-02-lifecycle-basic.md","raw":"---\ndate: 2016-06-02\ntitle: Activity的生命周期\ncategory: Android\ntags: [android,android_lifecycle]\nkeywords:\ndescription:\n---\n## 生命周期\n1. `onCreate()``\n2. `onStart()`\n3. `onResume()`\n4. `onPause()`\n5. `onPause()`\n6. `onDestory()`\n\n\n### `onCreate()`的作用\n\n1. 实例化组件并将组件放在屏幕上\n2. 引用已经实例化的组件\n3. 为组件设置监听器以处理用户交互\n4. 访问外部模型数据\n\n## 翻转屏幕对生命周期的影响\n翻转屏幕会导致`Activity`先会被销毁再重新创建，若不加以处理会导致很多意外的问题。顺序为`onPause()`,`onStop()`,`onDestory()`,`onCreate()`,`onStart()`,`onResume()`\n","slug":"android/lifecycle/2016-06-02-lifecycle-basic","published":1,"updated":"2016-10-13T06:51:20.556Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f0100001bcwjronifxltz","content":"<h2 id=\"生命周期\"><a href=\"#生命周期\" class=\"headerlink\" title=\"生命周期\"></a>生命周期</h2><ol>\n<li>`onCreate()``</li>\n<li><code>onStart()</code></li>\n<li><code>onResume()</code></li>\n<li><code>onPause()</code></li>\n<li><code>onPause()</code></li>\n<li><code>onDestory()</code></li>\n</ol>\n<h3 id=\"onCreate-的作用\"><a href=\"#onCreate-的作用\" class=\"headerlink\" title=\"onCreate()的作用\"></a><code>onCreate()</code>的作用</h3><ol>\n<li>实例化组件并将组件放在屏幕上</li>\n<li>引用已经实例化的组件</li>\n<li>为组件设置监听器以处理用户交互</li>\n<li>访问外部模型数据</li>\n</ol>\n<h2 id=\"翻转屏幕对生命周期的影响\"><a href=\"#翻转屏幕对生命周期的影响\" class=\"headerlink\" title=\"翻转屏幕对生命周期的影响\"></a>翻转屏幕对生命周期的影响</h2><p>翻转屏幕会导致<code>Activity</code>先会被销毁再重新创建，若不加以处理会导致很多意外的问题。顺序为<code>onPause()</code>,<code>onStop()</code>,<code>onDestory()</code>,<code>onCreate()</code>,<code>onStart()</code>,<code>onResume()</code></p>\n","excerpt":"","more":"<h2 id=\"生命周期\"><a href=\"#生命周期\" class=\"headerlink\" title=\"生命周期\"></a>生命周期</h2><ol>\n<li>`onCreate()``</li>\n<li><code>onStart()</code></li>\n<li><code>onResume()</code></li>\n<li><code>onPause()</code></li>\n<li><code>onPause()</code></li>\n<li><code>onDestory()</code></li>\n</ol>\n<h3 id=\"onCreate-的作用\"><a href=\"#onCreate-的作用\" class=\"headerlink\" title=\"onCreate()的作用\"></a><code>onCreate()</code>的作用</h3><ol>\n<li>实例化组件并将组件放在屏幕上</li>\n<li>引用已经实例化的组件</li>\n<li>为组件设置监听器以处理用户交互</li>\n<li>访问外部模型数据</li>\n</ol>\n<h2 id=\"翻转屏幕对生命周期的影响\"><a href=\"#翻转屏幕对生命周期的影响\" class=\"headerlink\" title=\"翻转屏幕对生命周期的影响\"></a>翻转屏幕对生命周期的影响</h2><p>翻转屏幕会导致<code>Activity</code>先会被销毁再重新创建，若不加以处理会导致很多意外的问题。顺序为<code>onPause()</code>,<code>onStop()</code>,<code>onDestory()</code>,<code>onCreate()</code>,<code>onStart()</code>,<code>onResume()</code></p>\n"},{"author":"ivyxjc","date":"2016-03-19T16:00:00.000Z","title":"广播机制初步","keywords":null,"description":null,"_content":"\n## 分类\n\n标准广播(Normal broadcasts)是一种完全异步执行的广播，在广播发出后，所有的广播接收器都在同一时刻受到这条广播消息，没有先后顺序。效率高，无法被截断。\n\n有序广播(Ordered broadcasts)是一种同步执行的广播，同一时刻，只有一个广播接收器能受到这条广播消息，当这个广播接收器中的逻辑执行完毕后，广播才会继续传递。\n有先后顺序，优先级高的会先收到广播消息，并且前面的广播接收器可以截断正在传递的广播。\n\n接受广播：广播接收器(Broadcast Receiver)\n\n## 系统广播\n\n\n## 注册广播\n\n动态注册的广播接收器一定要取消注册，一般是在`onDestroy()`方法中通过调用`unregisterReceiver()`方法来实现的。\n\n### 动态注册\n\n```java\npublic class MainActivity extends AppCompatActivity {\n\n    private IntentFilter mIntentFilter;\n    // Whether there is a Wi-Fi connection.\n    private static boolean wifiConnected = false;\n    // Whether there is a mobile connection.\n    private static boolean mobileConnected = false;\n\n    private TextView mWifiTextView;\n    private TextView mMobileTextView;\n\n    private NetworkChangeReceiver mNetworkChangeReceiver;\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        mWifiTextView=(TextView)findViewById(R.id.wifi);\n        mMobileTextView=(TextView)findViewById(R.id.mobile_network);\n        /*\n        注册广播接收器\n        当网络发生变化时，系统发出的是一条值为\"android.net.conn.CONNECTIVITY_CHANGE\"的广播消息\n         */\n        mIntentFilter=new IntentFilter();\n        mIntentFilter.addAction(ConnectivityManager.CONNECTIVITY_ACTION);\n        mNetworkChangeReceiver=new NetworkChangeReceiver();\n        registerReceiver(mNetworkChangeReceiver,mIntentFilter);\n\n    }\n\n\n    //注册的广播接收都需要解除注册\n    @Override\n    protected void onDestroy() {\n        super.onDestroy();\n        unregisterReceiver(mNetworkChangeReceiver);\n    }\n\n    class NetworkChangeReceiver extends BroadcastReceiver{\n\n        @Override\n        public void onReceive(Context context, Intent intent) {\n//            Toast.makeText(context,\"network change\",Toast.LENGTH_SHORT).show();\n            ConnectivityManager connMgr =\n                    (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);\n            NetworkInfo activeInfo = connMgr.getActiveNetworkInfo();\n\n            if (activeInfo != null && activeInfo.isConnected()) {\n                wifiConnected = activeInfo.getType() == ConnectivityManager.TYPE_WIFI;\n                mobileConnected = activeInfo.getType() == ConnectivityManager.TYPE_MOBILE;\n                if(wifiConnected) {\n//                    Toast.makeText(context,\"wifi is connected\",Toast.LENGTH_LONG).show();\n                    mWifiTextView.setText(\"Wifi is connected\");\n                    mMobileTextView.setText(\"mobile network is not connected\");\n                } else if (mobileConnected) {\n//                    Toast.makeText(context,\"mobile network is connected\",Toast.LENGTH_LONG).show();\n                    mWifiTextView.setText(\"Wifi is not connected\");\n                    mMobileTextView.setText(\"mobile network is connected\");\n                }\n            } else {\n//                Toast.makeText(context,\"no network\",Toast.LENGTH_LONG).show();\n                mWifiTextView.setText(\"Wifi is not connected\");\n                mMobileTextView.setText(\"mobile network is not connected\");\n            }\n        }\n    }\n}\n```\n\n另外还需在增加以下两个权限，否则会在打开的时候崩溃。\n\n```xml\n<uses-permission android:name=\"android.permission.INTERNET\" />\n<uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\n```\n\n#### 效果\n\n![](http://oezmbgg4j.bkt.clouddn.com/broadcast_network_connectivity.gif)\n\n\n### 静态注册\n\n```java\npublic class BootCompleteReceiver extends BroadcastReceiver{\n\n    @Override\n    public void onReceive(Context context, Intent intent) {\n        Toast.makeText(context,\"Boot Complete\",Toast.LENGTH_LONG).show();\n    }\n}\n```\n\n在AndroidManifest.xml中需要添加下列语句：\n\n```xml\n<user-permission android:name=\"android.permission.RECEIVE_BOOT_COMPLETED\"/>\n......\n<application\n\t...>\n\t.....\n\n    <receiver android:name=\".BootCompleteReceiver\">\n        <intent-filter>\n            <action android:name=\"android.intent.action.BOOT_COMPLETED\"/>\n        </intent-filter>\n    </receiver>\n\n</application>\n```\n\n\n## 自定义广播\n写一个自定义的广播接收器\n\n```java\npublic class MyBroadcastReceiver extends BroadcastReceiver {\n\n    @Override\n    public void onReceive(Context context, Intent intent) {\n        Toast.makeText(context,\"received in MyBroadcastReceiver\", Toast.LENGTH_LONG).show();\n    }\n}\n```\n发出一个广播\n\n```java\nIntent intent=new Intent(\"com.jc.broadcast_1.MY_BROADCAST\");\nsendBroadcast(intent);\n```\n\n在一个应用程序中发出的广播，也是可以被其它应用程序所接收到的。\n\n## 发送有序广播\n\n```java\nsendOrderedBroadcast(Intent intent,String receiverPermission);\n```\n\n这样可以截断广播，\n在`onReceiver(...)`方法里调用`abortBroadcast()`方法，就表示将这条广播截断。后面的广播就无法再接收到这条广播。\n\n## 本地广播\n\n只能在应用程序的内部进行传递，并且广播接收器也只能接受来自本应用发出的广播。\n\n\n```java\nmLocalBroadcastManager=LocalBroadcastManager.getInstance(this);\n\nbutton.setOnClickListener(new View.OnClickListener() {\n    @Override\n    public void onClick(View v) {\n        Intent intent=new Intent(\"com.jc.broadcast_2.LOCAL_BROADCAST\");\n        mLocalBroadcastManager.sendBroadcast(intent);\n    }\n});\n\nmIntentFilter=new IntentFilter();\nmIntentFilter.addAction(\"com.jc.broadcast_2.LOCAL_BROADCAST\");\nmLocalReceiver=new LocalReceiver();\nmLocalBroadcastManager.registerReceiver(mLocalReceiver,mIntentFilter);\n```\n","source":"_posts/android/四大组件/2016-03-20-broadcast-basic.md","raw":"---\nauthor: ivyxjc\ndate: 2016-03-20\ntitle: 广播机制初步\ncategory: Android\ntags: [android,android_broadcast]\nkeywords:\ndescription:\n---\n\n## 分类\n\n标准广播(Normal broadcasts)是一种完全异步执行的广播，在广播发出后，所有的广播接收器都在同一时刻受到这条广播消息，没有先后顺序。效率高，无法被截断。\n\n有序广播(Ordered broadcasts)是一种同步执行的广播，同一时刻，只有一个广播接收器能受到这条广播消息，当这个广播接收器中的逻辑执行完毕后，广播才会继续传递。\n有先后顺序，优先级高的会先收到广播消息，并且前面的广播接收器可以截断正在传递的广播。\n\n接受广播：广播接收器(Broadcast Receiver)\n\n## 系统广播\n\n\n## 注册广播\n\n动态注册的广播接收器一定要取消注册，一般是在`onDestroy()`方法中通过调用`unregisterReceiver()`方法来实现的。\n\n### 动态注册\n\n```java\npublic class MainActivity extends AppCompatActivity {\n\n    private IntentFilter mIntentFilter;\n    // Whether there is a Wi-Fi connection.\n    private static boolean wifiConnected = false;\n    // Whether there is a mobile connection.\n    private static boolean mobileConnected = false;\n\n    private TextView mWifiTextView;\n    private TextView mMobileTextView;\n\n    private NetworkChangeReceiver mNetworkChangeReceiver;\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        mWifiTextView=(TextView)findViewById(R.id.wifi);\n        mMobileTextView=(TextView)findViewById(R.id.mobile_network);\n        /*\n        注册广播接收器\n        当网络发生变化时，系统发出的是一条值为\"android.net.conn.CONNECTIVITY_CHANGE\"的广播消息\n         */\n        mIntentFilter=new IntentFilter();\n        mIntentFilter.addAction(ConnectivityManager.CONNECTIVITY_ACTION);\n        mNetworkChangeReceiver=new NetworkChangeReceiver();\n        registerReceiver(mNetworkChangeReceiver,mIntentFilter);\n\n    }\n\n\n    //注册的广播接收都需要解除注册\n    @Override\n    protected void onDestroy() {\n        super.onDestroy();\n        unregisterReceiver(mNetworkChangeReceiver);\n    }\n\n    class NetworkChangeReceiver extends BroadcastReceiver{\n\n        @Override\n        public void onReceive(Context context, Intent intent) {\n//            Toast.makeText(context,\"network change\",Toast.LENGTH_SHORT).show();\n            ConnectivityManager connMgr =\n                    (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);\n            NetworkInfo activeInfo = connMgr.getActiveNetworkInfo();\n\n            if (activeInfo != null && activeInfo.isConnected()) {\n                wifiConnected = activeInfo.getType() == ConnectivityManager.TYPE_WIFI;\n                mobileConnected = activeInfo.getType() == ConnectivityManager.TYPE_MOBILE;\n                if(wifiConnected) {\n//                    Toast.makeText(context,\"wifi is connected\",Toast.LENGTH_LONG).show();\n                    mWifiTextView.setText(\"Wifi is connected\");\n                    mMobileTextView.setText(\"mobile network is not connected\");\n                } else if (mobileConnected) {\n//                    Toast.makeText(context,\"mobile network is connected\",Toast.LENGTH_LONG).show();\n                    mWifiTextView.setText(\"Wifi is not connected\");\n                    mMobileTextView.setText(\"mobile network is connected\");\n                }\n            } else {\n//                Toast.makeText(context,\"no network\",Toast.LENGTH_LONG).show();\n                mWifiTextView.setText(\"Wifi is not connected\");\n                mMobileTextView.setText(\"mobile network is not connected\");\n            }\n        }\n    }\n}\n```\n\n另外还需在增加以下两个权限，否则会在打开的时候崩溃。\n\n```xml\n<uses-permission android:name=\"android.permission.INTERNET\" />\n<uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\n```\n\n#### 效果\n\n![](http://oezmbgg4j.bkt.clouddn.com/broadcast_network_connectivity.gif)\n\n\n### 静态注册\n\n```java\npublic class BootCompleteReceiver extends BroadcastReceiver{\n\n    @Override\n    public void onReceive(Context context, Intent intent) {\n        Toast.makeText(context,\"Boot Complete\",Toast.LENGTH_LONG).show();\n    }\n}\n```\n\n在AndroidManifest.xml中需要添加下列语句：\n\n```xml\n<user-permission android:name=\"android.permission.RECEIVE_BOOT_COMPLETED\"/>\n......\n<application\n\t...>\n\t.....\n\n    <receiver android:name=\".BootCompleteReceiver\">\n        <intent-filter>\n            <action android:name=\"android.intent.action.BOOT_COMPLETED\"/>\n        </intent-filter>\n    </receiver>\n\n</application>\n```\n\n\n## 自定义广播\n写一个自定义的广播接收器\n\n```java\npublic class MyBroadcastReceiver extends BroadcastReceiver {\n\n    @Override\n    public void onReceive(Context context, Intent intent) {\n        Toast.makeText(context,\"received in MyBroadcastReceiver\", Toast.LENGTH_LONG).show();\n    }\n}\n```\n发出一个广播\n\n```java\nIntent intent=new Intent(\"com.jc.broadcast_1.MY_BROADCAST\");\nsendBroadcast(intent);\n```\n\n在一个应用程序中发出的广播，也是可以被其它应用程序所接收到的。\n\n## 发送有序广播\n\n```java\nsendOrderedBroadcast(Intent intent,String receiverPermission);\n```\n\n这样可以截断广播，\n在`onReceiver(...)`方法里调用`abortBroadcast()`方法，就表示将这条广播截断。后面的广播就无法再接收到这条广播。\n\n## 本地广播\n\n只能在应用程序的内部进行传递，并且广播接收器也只能接受来自本应用发出的广播。\n\n\n```java\nmLocalBroadcastManager=LocalBroadcastManager.getInstance(this);\n\nbutton.setOnClickListener(new View.OnClickListener() {\n    @Override\n    public void onClick(View v) {\n        Intent intent=new Intent(\"com.jc.broadcast_2.LOCAL_BROADCAST\");\n        mLocalBroadcastManager.sendBroadcast(intent);\n    }\n});\n\nmIntentFilter=new IntentFilter();\nmIntentFilter.addAction(\"com.jc.broadcast_2.LOCAL_BROADCAST\");\nmLocalReceiver=new LocalReceiver();\nmLocalBroadcastManager.registerReceiver(mLocalReceiver,mIntentFilter);\n```\n","slug":"android/四大组件/2016-03-20-broadcast-basic","published":1,"updated":"2016-10-13T13:28:16.492Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f0102001dcwjrsrnt6adn","content":"<h2 id=\"分类\"><a href=\"#分类\" class=\"headerlink\" title=\"分类\"></a>分类</h2><p>标准广播(Normal broadcasts)是一种完全异步执行的广播，在广播发出后，所有的广播接收器都在同一时刻受到这条广播消息，没有先后顺序。效率高，无法被截断。</p>\n<p>有序广播(Ordered broadcasts)是一种同步执行的广播，同一时刻，只有一个广播接收器能受到这条广播消息，当这个广播接收器中的逻辑执行完毕后，广播才会继续传递。<br>有先后顺序，优先级高的会先收到广播消息，并且前面的广播接收器可以截断正在传递的广播。</p>\n<p>接受广播：广播接收器(Broadcast Receiver)</p>\n<h2 id=\"系统广播\"><a href=\"#系统广播\" class=\"headerlink\" title=\"系统广播\"></a>系统广播</h2><h2 id=\"注册广播\"><a href=\"#注册广播\" class=\"headerlink\" title=\"注册广播\"></a>注册广播</h2><p>动态注册的广播接收器一定要取消注册，一般是在<code>onDestroy()</code>方法中通过调用<code>unregisterReceiver()</code>方法来实现的。</p>\n<h3 id=\"动态注册\"><a href=\"#动态注册\" class=\"headerlink\" title=\"动态注册\"></a>动态注册</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">private</span> IntentFilter mIntentFilter;</div><div class=\"line\">    <span class=\"comment\">// Whether there is a Wi-Fi connection.</span></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> wifiConnected = <span class=\"keyword\">false</span>;</div><div class=\"line\">    <span class=\"comment\">// Whether there is a mobile connection.</span></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> mobileConnected = <span class=\"keyword\">false</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">private</span> TextView mWifiTextView;</div><div class=\"line\">    <span class=\"keyword\">private</span> TextView mMobileTextView;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">private</span> NetworkChangeReceiver mNetworkChangeReceiver;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">        setContentView(R.layout.activity_main);</div><div class=\"line\"></div><div class=\"line\">        mWifiTextView=(TextView)findViewById(R.id.wifi);</div><div class=\"line\">        mMobileTextView=(TextView)findViewById(R.id.mobile_network);</div><div class=\"line\">        <span class=\"comment\">/*</span></div><div class=\"line\">        注册广播接收器</div><div class=\"line\">        当网络发生变化时，系统发出的是一条值为\"android.net.conn.CONNECTIVITY_CHANGE\"的广播消息</div><div class=\"line\">         */</div><div class=\"line\">        mIntentFilter=<span class=\"keyword\">new</span> IntentFilter();</div><div class=\"line\">        mIntentFilter.addAction(ConnectivityManager.CONNECTIVITY_ACTION);</div><div class=\"line\">        mNetworkChangeReceiver=<span class=\"keyword\">new</span> NetworkChangeReceiver();</div><div class=\"line\">        registerReceiver(mNetworkChangeReceiver,mIntentFilter);</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//注册的广播接收都需要解除注册</span></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onDestroy</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onDestroy();</div><div class=\"line\">        unregisterReceiver(mNetworkChangeReceiver);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">NetworkChangeReceiver</span> <span class=\"keyword\">extends</span> <span class=\"title\">BroadcastReceiver</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">@Override</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onReceive</span><span class=\"params\">(Context context, Intent intent)</span> </span>&#123;</div><div class=\"line\"><span class=\"comment\">//            Toast.makeText(context,\"network change\",Toast.LENGTH_SHORT).show();</span></div><div class=\"line\">            ConnectivityManager connMgr =</div><div class=\"line\">                    (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);</div><div class=\"line\">            NetworkInfo activeInfo = connMgr.getActiveNetworkInfo();</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">if</span> (activeInfo != <span class=\"keyword\">null</span> &amp;&amp; activeInfo.isConnected()) &#123;</div><div class=\"line\">                wifiConnected = activeInfo.getType() == ConnectivityManager.TYPE_WIFI;</div><div class=\"line\">                mobileConnected = activeInfo.getType() == ConnectivityManager.TYPE_MOBILE;</div><div class=\"line\">                <span class=\"keyword\">if</span>(wifiConnected) &#123;</div><div class=\"line\"><span class=\"comment\">//                    Toast.makeText(context,\"wifi is connected\",Toast.LENGTH_LONG).show();</span></div><div class=\"line\">                    mWifiTextView.setText(<span class=\"string\">\"Wifi is connected\"</span>);</div><div class=\"line\">                    mMobileTextView.setText(<span class=\"string\">\"mobile network is not connected\"</span>);</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (mobileConnected) &#123;</div><div class=\"line\"><span class=\"comment\">//                    Toast.makeText(context,\"mobile network is connected\",Toast.LENGTH_LONG).show();</span></div><div class=\"line\">                    mWifiTextView.setText(<span class=\"string\">\"Wifi is not connected\"</span>);</div><div class=\"line\">                    mMobileTextView.setText(<span class=\"string\">\"mobile network is connected\"</span>);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\"><span class=\"comment\">//                Toast.makeText(context,\"no network\",Toast.LENGTH_LONG).show();</span></div><div class=\"line\">                mWifiTextView.setText(<span class=\"string\">\"Wifi is not connected\"</span>);</div><div class=\"line\">                mMobileTextView.setText(<span class=\"string\">\"mobile network is not connected\"</span>);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>另外还需在增加以下两个权限，否则会在打开的时候崩溃。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">uses-permission</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.permission.INTERNET\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">uses-permission</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.permission.ACCESS_NETWORK_STATE\"</span> /&gt;</span></div></pre></td></tr></table></figure>\n<h4 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果\"></a>效果</h4><p><img src=\"http://oezmbgg4j.bkt.clouddn.com/broadcast_network_connectivity.gif\" alt=\"\"></p>\n<h3 id=\"静态注册\"><a href=\"#静态注册\" class=\"headerlink\" title=\"静态注册\"></a>静态注册</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BootCompleteReceiver</span> <span class=\"keyword\">extends</span> <span class=\"title\">BroadcastReceiver</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onReceive</span><span class=\"params\">(Context context, Intent intent)</span> </span>&#123;</div><div class=\"line\">        Toast.makeText(context,<span class=\"string\">\"Boot Complete\"</span>,Toast.LENGTH_LONG).show();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>在AndroidManifest.xml中需要添加下列语句：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">user-permission</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.permission.RECEIVE_BOOT_COMPLETED\"</span>/&gt;</span></div><div class=\"line\">......</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">application</span></span></div><div class=\"line\">\t<span class=\"attr\">...</span>&gt;</div><div class=\"line\">\t.....</div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">receiver</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\".BootCompleteReceiver\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">intent-filter</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">action</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.intent.action.BOOT_COMPLETED\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">intent-filter</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">receiver</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">application</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"自定义广播\"><a href=\"#自定义广播\" class=\"headerlink\" title=\"自定义广播\"></a>自定义广播</h2><p>写一个自定义的广播接收器</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyBroadcastReceiver</span> <span class=\"keyword\">extends</span> <span class=\"title\">BroadcastReceiver</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onReceive</span><span class=\"params\">(Context context, Intent intent)</span> </span>&#123;</div><div class=\"line\">        Toast.makeText(context,<span class=\"string\">\"received in MyBroadcastReceiver\"</span>, Toast.LENGTH_LONG).show();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>发出一个广播</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Intent intent=<span class=\"keyword\">new</span> Intent(<span class=\"string\">\"com.jc.broadcast_1.MY_BROADCAST\"</span>);</div><div class=\"line\">sendBroadcast(intent);</div></pre></td></tr></table></figure>\n<p>在一个应用程序中发出的广播，也是可以被其它应用程序所接收到的。</p>\n<h2 id=\"发送有序广播\"><a href=\"#发送有序广播\" class=\"headerlink\" title=\"发送有序广播\"></a>发送有序广播</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sendOrderedBroadcast(Intent intent,String receiverPermission);</div></pre></td></tr></table></figure>\n<p>这样可以截断广播，<br>在<code>onReceiver(...)</code>方法里调用<code>abortBroadcast()</code>方法，就表示将这条广播截断。后面的广播就无法再接收到这条广播。</p>\n<h2 id=\"本地广播\"><a href=\"#本地广播\" class=\"headerlink\" title=\"本地广播\"></a>本地广播</h2><p>只能在应用程序的内部进行传递，并且广播接收器也只能接受来自本应用发出的广播。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">mLocalBroadcastManager=LocalBroadcastManager.getInstance(<span class=\"keyword\">this</span>);</div><div class=\"line\"></div><div class=\"line\">button.setOnClickListener(<span class=\"keyword\">new</span> View.OnClickListener() &#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span> </span>&#123;</div><div class=\"line\">        Intent intent=<span class=\"keyword\">new</span> Intent(<span class=\"string\">\"com.jc.broadcast_2.LOCAL_BROADCAST\"</span>);</div><div class=\"line\">        mLocalBroadcastManager.sendBroadcast(intent);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">mIntentFilter=<span class=\"keyword\">new</span> IntentFilter();</div><div class=\"line\">mIntentFilter.addAction(<span class=\"string\">\"com.jc.broadcast_2.LOCAL_BROADCAST\"</span>);</div><div class=\"line\">mLocalReceiver=<span class=\"keyword\">new</span> LocalReceiver();</div><div class=\"line\">mLocalBroadcastManager.registerReceiver(mLocalReceiver,mIntentFilter);</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h2 id=\"分类\"><a href=\"#分类\" class=\"headerlink\" title=\"分类\"></a>分类</h2><p>标准广播(Normal broadcasts)是一种完全异步执行的广播，在广播发出后，所有的广播接收器都在同一时刻受到这条广播消息，没有先后顺序。效率高，无法被截断。</p>\n<p>有序广播(Ordered broadcasts)是一种同步执行的广播，同一时刻，只有一个广播接收器能受到这条广播消息，当这个广播接收器中的逻辑执行完毕后，广播才会继续传递。<br>有先后顺序，优先级高的会先收到广播消息，并且前面的广播接收器可以截断正在传递的广播。</p>\n<p>接受广播：广播接收器(Broadcast Receiver)</p>\n<h2 id=\"系统广播\"><a href=\"#系统广播\" class=\"headerlink\" title=\"系统广播\"></a>系统广播</h2><h2 id=\"注册广播\"><a href=\"#注册广播\" class=\"headerlink\" title=\"注册广播\"></a>注册广播</h2><p>动态注册的广播接收器一定要取消注册，一般是在<code>onDestroy()</code>方法中通过调用<code>unregisterReceiver()</code>方法来实现的。</p>\n<h3 id=\"动态注册\"><a href=\"#动态注册\" class=\"headerlink\" title=\"动态注册\"></a>动态注册</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">private</span> IntentFilter mIntentFilter;</div><div class=\"line\">    <span class=\"comment\">// Whether there is a Wi-Fi connection.</span></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> wifiConnected = <span class=\"keyword\">false</span>;</div><div class=\"line\">    <span class=\"comment\">// Whether there is a mobile connection.</span></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> mobileConnected = <span class=\"keyword\">false</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">private</span> TextView mWifiTextView;</div><div class=\"line\">    <span class=\"keyword\">private</span> TextView mMobileTextView;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">private</span> NetworkChangeReceiver mNetworkChangeReceiver;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">        setContentView(R.layout.activity_main);</div><div class=\"line\"></div><div class=\"line\">        mWifiTextView=(TextView)findViewById(R.id.wifi);</div><div class=\"line\">        mMobileTextView=(TextView)findViewById(R.id.mobile_network);</div><div class=\"line\">        <span class=\"comment\">/*</div><div class=\"line\">        注册广播接收器</div><div class=\"line\">        当网络发生变化时，系统发出的是一条值为\"android.net.conn.CONNECTIVITY_CHANGE\"的广播消息</div><div class=\"line\">         */</span></div><div class=\"line\">        mIntentFilter=<span class=\"keyword\">new</span> IntentFilter();</div><div class=\"line\">        mIntentFilter.addAction(ConnectivityManager.CONNECTIVITY_ACTION);</div><div class=\"line\">        mNetworkChangeReceiver=<span class=\"keyword\">new</span> NetworkChangeReceiver();</div><div class=\"line\">        registerReceiver(mNetworkChangeReceiver,mIntentFilter);</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//注册的广播接收都需要解除注册</span></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onDestroy</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onDestroy();</div><div class=\"line\">        unregisterReceiver(mNetworkChangeReceiver);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">NetworkChangeReceiver</span> <span class=\"keyword\">extends</span> <span class=\"title\">BroadcastReceiver</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">@Override</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onReceive</span><span class=\"params\">(Context context, Intent intent)</span> </span>&#123;</div><div class=\"line\"><span class=\"comment\">//            Toast.makeText(context,\"network change\",Toast.LENGTH_SHORT).show();</span></div><div class=\"line\">            ConnectivityManager connMgr =</div><div class=\"line\">                    (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);</div><div class=\"line\">            NetworkInfo activeInfo = connMgr.getActiveNetworkInfo();</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">if</span> (activeInfo != <span class=\"keyword\">null</span> &amp;&amp; activeInfo.isConnected()) &#123;</div><div class=\"line\">                wifiConnected = activeInfo.getType() == ConnectivityManager.TYPE_WIFI;</div><div class=\"line\">                mobileConnected = activeInfo.getType() == ConnectivityManager.TYPE_MOBILE;</div><div class=\"line\">                <span class=\"keyword\">if</span>(wifiConnected) &#123;</div><div class=\"line\"><span class=\"comment\">//                    Toast.makeText(context,\"wifi is connected\",Toast.LENGTH_LONG).show();</span></div><div class=\"line\">                    mWifiTextView.setText(<span class=\"string\">\"Wifi is connected\"</span>);</div><div class=\"line\">                    mMobileTextView.setText(<span class=\"string\">\"mobile network is not connected\"</span>);</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (mobileConnected) &#123;</div><div class=\"line\"><span class=\"comment\">//                    Toast.makeText(context,\"mobile network is connected\",Toast.LENGTH_LONG).show();</span></div><div class=\"line\">                    mWifiTextView.setText(<span class=\"string\">\"Wifi is not connected\"</span>);</div><div class=\"line\">                    mMobileTextView.setText(<span class=\"string\">\"mobile network is connected\"</span>);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\"><span class=\"comment\">//                Toast.makeText(context,\"no network\",Toast.LENGTH_LONG).show();</span></div><div class=\"line\">                mWifiTextView.setText(<span class=\"string\">\"Wifi is not connected\"</span>);</div><div class=\"line\">                mMobileTextView.setText(<span class=\"string\">\"mobile network is not connected\"</span>);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>另外还需在增加以下两个权限，否则会在打开的时候崩溃。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">uses-permission</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.permission.INTERNET\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">uses-permission</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.permission.ACCESS_NETWORK_STATE\"</span> /&gt;</span></div></pre></td></tr></table></figure>\n<h4 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果\"></a>效果</h4><p><img src=\"http://oezmbgg4j.bkt.clouddn.com/broadcast_network_connectivity.gif\" alt=\"\"></p>\n<h3 id=\"静态注册\"><a href=\"#静态注册\" class=\"headerlink\" title=\"静态注册\"></a>静态注册</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BootCompleteReceiver</span> <span class=\"keyword\">extends</span> <span class=\"title\">BroadcastReceiver</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onReceive</span><span class=\"params\">(Context context, Intent intent)</span> </span>&#123;</div><div class=\"line\">        Toast.makeText(context,<span class=\"string\">\"Boot Complete\"</span>,Toast.LENGTH_LONG).show();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>在AndroidManifest.xml中需要添加下列语句：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">user-permission</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.permission.RECEIVE_BOOT_COMPLETED\"</span>/&gt;</span></div><div class=\"line\">......</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">application</span></div><div class=\"line\">\t<span class=\"attr\">...</span>&gt;</span></div><div class=\"line\">\t.....</div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">receiver</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\".BootCompleteReceiver\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">intent-filter</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">action</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.intent.action.BOOT_COMPLETED\"</span>/&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">intent-filter</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">receiver</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">application</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"自定义广播\"><a href=\"#自定义广播\" class=\"headerlink\" title=\"自定义广播\"></a>自定义广播</h2><p>写一个自定义的广播接收器</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyBroadcastReceiver</span> <span class=\"keyword\">extends</span> <span class=\"title\">BroadcastReceiver</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onReceive</span><span class=\"params\">(Context context, Intent intent)</span> </span>&#123;</div><div class=\"line\">        Toast.makeText(context,<span class=\"string\">\"received in MyBroadcastReceiver\"</span>, Toast.LENGTH_LONG).show();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>发出一个广播</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Intent intent=<span class=\"keyword\">new</span> Intent(<span class=\"string\">\"com.jc.broadcast_1.MY_BROADCAST\"</span>);</div><div class=\"line\">sendBroadcast(intent);</div></pre></td></tr></table></figure>\n<p>在一个应用程序中发出的广播，也是可以被其它应用程序所接收到的。</p>\n<h2 id=\"发送有序广播\"><a href=\"#发送有序广播\" class=\"headerlink\" title=\"发送有序广播\"></a>发送有序广播</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sendOrderedBroadcast(Intent intent,String receiverPermission);</div></pre></td></tr></table></figure>\n<p>这样可以截断广播，<br>在<code>onReceiver(...)</code>方法里调用<code>abortBroadcast()</code>方法，就表示将这条广播截断。后面的广播就无法再接收到这条广播。</p>\n<h2 id=\"本地广播\"><a href=\"#本地广播\" class=\"headerlink\" title=\"本地广播\"></a>本地广播</h2><p>只能在应用程序的内部进行传递，并且广播接收器也只能接受来自本应用发出的广播。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">mLocalBroadcastManager=LocalBroadcastManager.getInstance(<span class=\"keyword\">this</span>);</div><div class=\"line\"></div><div class=\"line\">button.setOnClickListener(<span class=\"keyword\">new</span> View.OnClickListener() &#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span> </span>&#123;</div><div class=\"line\">        Intent intent=<span class=\"keyword\">new</span> Intent(<span class=\"string\">\"com.jc.broadcast_2.LOCAL_BROADCAST\"</span>);</div><div class=\"line\">        mLocalBroadcastManager.sendBroadcast(intent);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">mIntentFilter=<span class=\"keyword\">new</span> IntentFilter();</div><div class=\"line\">mIntentFilter.addAction(<span class=\"string\">\"com.jc.broadcast_2.LOCAL_BROADCAST\"</span>);</div><div class=\"line\">mLocalReceiver=<span class=\"keyword\">new</span> LocalReceiver();</div><div class=\"line\">mLocalBroadcastManager.registerReceiver(mLocalReceiver,mIntentFilter);</div></pre></td></tr></table></figure>\n"},{"author":"ivyxjc","date":"2016-05-05T16:00:00.000Z","title":"Service","keywords":null,"description":null,"_content":"\n## 服务的生命周期\n使用startService()<br>\n![](http://oezmbgg4j.bkt.clouddn.com/servicelifecycle.png)\n\n一旦调用`startService()`相应的服务就会启动, 并回调`onStartCommand()`方法. 如果该服务没有创建过, 那么`onCreate()`会先于`onStartCommand()`方法执行. 服务启动之后会一直保持运行状态,知道`stopService()`或`stopSelf()`方法被调用. 即使度从此调用`startService()`方法, 每个服务只会存在一个实例,所以只需要调用一次`stopService()`或`stopSelf()`方法, 服务就会停止下来.\n\n\n另一种方法，使用bindService()<br>\n![](http://oezmbgg4j.bkt.clouddn.com/servicelifecycle2.png)\n\n这会先回调服务中的`onBind()`方法,若该服务之前没有被创建过,那么`onCreate()`方法会先于`onBind()`方法执行.\n\n\n注意: 若一个服务既`startService()`又`bindService()`, 那么只要`stopService()`和`unbindService()`都被调用后,服务的`onDestroy()`方法才会执行.\n\n\n只能解绑定一次,不可以多次解绑定.\n\n\n## 两种方式的区别\n\nStart方式特点:\n1.服务与启动源没有任何关系\n2.无法得到服务对象\n\nBind方式特点:\n1.通过`IBinder`接口实例,返回一个`ServiceConnnection`对象给启动源.\n2.通过`ServiceConnection`对象的相关方法可以得到`Service`对象.\n","source":"_posts/android/四大组件/2016-05-06-service-basic.md","raw":"---\nauthor: ivyxjc\ndate: 2016-05-06\ntitle: Service\ncategory: Android\ntags: [android , android_service]\nkeywords:\ndescription:\n---\n\n## 服务的生命周期\n使用startService()<br>\n![](http://oezmbgg4j.bkt.clouddn.com/servicelifecycle.png)\n\n一旦调用`startService()`相应的服务就会启动, 并回调`onStartCommand()`方法. 如果该服务没有创建过, 那么`onCreate()`会先于`onStartCommand()`方法执行. 服务启动之后会一直保持运行状态,知道`stopService()`或`stopSelf()`方法被调用. 即使度从此调用`startService()`方法, 每个服务只会存在一个实例,所以只需要调用一次`stopService()`或`stopSelf()`方法, 服务就会停止下来.\n\n\n另一种方法，使用bindService()<br>\n![](http://oezmbgg4j.bkt.clouddn.com/servicelifecycle2.png)\n\n这会先回调服务中的`onBind()`方法,若该服务之前没有被创建过,那么`onCreate()`方法会先于`onBind()`方法执行.\n\n\n注意: 若一个服务既`startService()`又`bindService()`, 那么只要`stopService()`和`unbindService()`都被调用后,服务的`onDestroy()`方法才会执行.\n\n\n只能解绑定一次,不可以多次解绑定.\n\n\n## 两种方式的区别\n\nStart方式特点:\n1.服务与启动源没有任何关系\n2.无法得到服务对象\n\nBind方式特点:\n1.通过`IBinder`接口实例,返回一个`ServiceConnnection`对象给启动源.\n2.通过`ServiceConnection`对象的相关方法可以得到`Service`对象.\n","slug":"android/四大组件/2016-05-06-service-basic","published":1,"updated":"2016-10-13T13:28:27.965Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f0103001gcwjrpg82m6cn","content":"<h2 id=\"服务的生命周期\"><a href=\"#服务的生命周期\" class=\"headerlink\" title=\"服务的生命周期\"></a>服务的生命周期</h2><p>使用startService()<br><br><img src=\"http://oezmbgg4j.bkt.clouddn.com/servicelifecycle.png\" alt=\"\"></p>\n<p>一旦调用<code>startService()</code>相应的服务就会启动, 并回调<code>onStartCommand()</code>方法. 如果该服务没有创建过, 那么<code>onCreate()</code>会先于<code>onStartCommand()</code>方法执行. 服务启动之后会一直保持运行状态,知道<code>stopService()</code>或<code>stopSelf()</code>方法被调用. 即使度从此调用<code>startService()</code>方法, 每个服务只会存在一个实例,所以只需要调用一次<code>stopService()</code>或<code>stopSelf()</code>方法, 服务就会停止下来.</p>\n<p>另一种方法，使用bindService()<br><br><img src=\"http://oezmbgg4j.bkt.clouddn.com/servicelifecycle2.png\" alt=\"\"></p>\n<p>这会先回调服务中的<code>onBind()</code>方法,若该服务之前没有被创建过,那么<code>onCreate()</code>方法会先于<code>onBind()</code>方法执行.</p>\n<p>注意: 若一个服务既<code>startService()</code>又<code>bindService()</code>, 那么只要<code>stopService()</code>和<code>unbindService()</code>都被调用后,服务的<code>onDestroy()</code>方法才会执行.</p>\n<p>只能解绑定一次,不可以多次解绑定.</p>\n<h2 id=\"两种方式的区别\"><a href=\"#两种方式的区别\" class=\"headerlink\" title=\"两种方式的区别\"></a>两种方式的区别</h2><p>Start方式特点:<br>1.服务与启动源没有任何关系<br>2.无法得到服务对象</p>\n<p>Bind方式特点:<br>1.通过<code>IBinder</code>接口实例,返回一个<code>ServiceConnnection</code>对象给启动源.<br>2.通过<code>ServiceConnection</code>对象的相关方法可以得到<code>Service</code>对象.</p>\n","excerpt":"","more":"<h2 id=\"服务的生命周期\"><a href=\"#服务的生命周期\" class=\"headerlink\" title=\"服务的生命周期\"></a>服务的生命周期</h2><p>使用startService()<br><br><img src=\"http://oezmbgg4j.bkt.clouddn.com/servicelifecycle.png\" alt=\"\"></p>\n<p>一旦调用<code>startService()</code>相应的服务就会启动, 并回调<code>onStartCommand()</code>方法. 如果该服务没有创建过, 那么<code>onCreate()</code>会先于<code>onStartCommand()</code>方法执行. 服务启动之后会一直保持运行状态,知道<code>stopService()</code>或<code>stopSelf()</code>方法被调用. 即使度从此调用<code>startService()</code>方法, 每个服务只会存在一个实例,所以只需要调用一次<code>stopService()</code>或<code>stopSelf()</code>方法, 服务就会停止下来.</p>\n<p>另一种方法，使用bindService()<br><br><img src=\"http://oezmbgg4j.bkt.clouddn.com/servicelifecycle2.png\" alt=\"\"></p>\n<p>这会先回调服务中的<code>onBind()</code>方法,若该服务之前没有被创建过,那么<code>onCreate()</code>方法会先于<code>onBind()</code>方法执行.</p>\n<p>注意: 若一个服务既<code>startService()</code>又<code>bindService()</code>, 那么只要<code>stopService()</code>和<code>unbindService()</code>都被调用后,服务的<code>onDestroy()</code>方法才会执行.</p>\n<p>只能解绑定一次,不可以多次解绑定.</p>\n<h2 id=\"两种方式的区别\"><a href=\"#两种方式的区别\" class=\"headerlink\" title=\"两种方式的区别\"></a>两种方式的区别</h2><p>Start方式特点:<br>1.服务与启动源没有任何关系<br>2.无法得到服务对象</p>\n<p>Bind方式特点:<br>1.通过<code>IBinder</code>接口实例,返回一个<code>ServiceConnnection</code>对象给启动源.<br>2.通过<code>ServiceConnection</code>对象的相关方法可以得到<code>Service</code>对象.</p>\n"},{"author":"ivyxjc","date":"2016-03-25T16:00:00.000Z","title":"Notification初步","keywords":null,"description":null,"_content":"\n## 通知\n\n```java\nMainActivity.java\n\nNotificationManager notificationManager=(NotificationManager)getSystemService(Context.NOTIFICATION_SERVICE);\n\nNotification.Builder builder=new Notification.Builder(this);\n\n//设置点击通知进入NotificationActivity\nIntent intent=new Intent(this,NotificationActivity.class);\n\n//第二个参数int requestCode相同，表示是同一个pendingIntent\nPendingIntent pi=PendingIntent.getActivity(this,0,intent,PendingIntent.FLAG_CANCEL_CURRENT);\n\n//设置通知栏 布局，内容等...\nbuilder.setSmallIcon(R.mipmap.ic_launcher);\nbuilder.setContentTitle(\"Notification Title\");\nbuilder.setContentText(\"Notification text\");\nbuilder.setContentIntent(pi);\n\n//第一个参数在应用中是唯一的，代表这个通知\nnotificationManager.notify(11, builder.build());\n```\n\n1. FLAG_CANCEL_CURRENT:如果当前系统中已经存在一个相同的PendingIntent对象，那么就将先将已有的PendingIntent取消，然后重新生成一个PendingIntent对象。\n2. FLAG_NO_CREATE:如果当前系统中不存在相同的PendingIntent对象，系统将不会创建该PendingIntent对象而是直接返回null。\n3. FLAG_ONE_SHOT:该PendingIntent只作用一次。在该PendingIntent对象通过send()方法触发过后，PendingIntent将自动调用cancel()进行销毁，那么如果你再调用send()方法的话，系统将会返回一个SendIntentException。\n4. FLAG_UPDATE_CURRENT:如果系统中有一个和你描述的PendingIntent对等的PendingInent，那么系统将使用该PendingIntent对象，但是会使用新的Intent来更新之前PendingIntent中的Intent对象数据，例如更新Intent中的Extras。\n\n\n```java\nNotificationActivity.java\n\nNotificationManager manager=(NotificationManager)getSystemService(NOTIFICATION_SERVICE);\n\n//使通知在通知栏消失\nmanager.cancel(11);\n```\n\n```java\n//设置声音\nUri soundUri=Uri.fromFile(new File(\"/system/media/audio/ringtones/Boxbeat.ogg\"));\nbuilder.setSound(soundUri);\n\n//设置震动上\n//下标为偶数和0的标识手机静止的时长，奇数标识手机震动的时长\nlong [] vibrates={0,1000,1000,1000,1000,1000};\nbuilder.setVibrate(vibrates);\n```\n\n### 效果  \n\n![](/assets/img/posts/notification.gif)\n\n\n\n## 短信\n\n### 接收短信\n\n```java\nmReceiveFilter=new IntentFilter();\nmReceiveFilter.addAction(\"android.provider.Telephony.SMS_RECEIVED\");\nmMessageReceiver=new MessageReceiver();\nregisterReceiver(mMessageReceiver,mReceiveFilter);\n\nclass MessageReceiver extends BroadcastReceiver{\n\n        @Override\n        public void onReceive(Context context, Intent intent) {\n            Bundle bundle=intent.getExtras();\n\n            Object[] pdus=(Object[])bundle.get(\"pdus\");//提取短信消息\n\n            SmsMessage[] messages=new SmsMessage[pdus.length];\n\n            for(int i=0;i<messages.length;i++){\n                messages[i]=SmsMessage.createFromPdu((byte[])pdus[i]);\n            }\n\n            String address=messages[0].getOriginatingAddress();\n\n            String fullMessage=\"\";\n            for(SmsMessage message:messages){\n                fullMessage+=message.getMessageBody();//获取短信内容\n            }\n            sender.setText(address);\n            content.setText(fullMessage);\n        }\n    }\n\n```\n\n### 拦截短信\n系统发出的短信广播是一条有序广播，所以可以先获得该广播，再中止广播传递即可。\n\n1.提高MessageReceiver的优先级，让它能够先于系统短信程序接收到短信广播。\n2.调用`abortBroadcast()`方法，中止广播传递。\n\n### 发送短信\n\n```java\nmSendButton.setOnClickListener(new View.OnClickListener() {\n        @Override\n        public void onClick(View v) {\n            Log.i(\"AAABBB\", \"before\");\n            SmsManager smsManager = SmsManager.getDefault();\n            Log.i(\"AAABBB\", \"getDefault\");\n            smsManager.sendTextMessage(mTo.getText().toString(), null, mEditText.toString(), null, null);\n        }\n    });\n```\n","source":"_posts/android/多媒体/2016-03-26-Multi-Media.md","raw":"---\nauthor: ivyxjc\ndate: 2016-03-26\ntitle: Notification初步\ncategory: Android\ntags: [android,android_notification]\nkeywords:\ndescription:\n---\n\n## 通知\n\n```java\nMainActivity.java\n\nNotificationManager notificationManager=(NotificationManager)getSystemService(Context.NOTIFICATION_SERVICE);\n\nNotification.Builder builder=new Notification.Builder(this);\n\n//设置点击通知进入NotificationActivity\nIntent intent=new Intent(this,NotificationActivity.class);\n\n//第二个参数int requestCode相同，表示是同一个pendingIntent\nPendingIntent pi=PendingIntent.getActivity(this,0,intent,PendingIntent.FLAG_CANCEL_CURRENT);\n\n//设置通知栏 布局，内容等...\nbuilder.setSmallIcon(R.mipmap.ic_launcher);\nbuilder.setContentTitle(\"Notification Title\");\nbuilder.setContentText(\"Notification text\");\nbuilder.setContentIntent(pi);\n\n//第一个参数在应用中是唯一的，代表这个通知\nnotificationManager.notify(11, builder.build());\n```\n\n1. FLAG_CANCEL_CURRENT:如果当前系统中已经存在一个相同的PendingIntent对象，那么就将先将已有的PendingIntent取消，然后重新生成一个PendingIntent对象。\n2. FLAG_NO_CREATE:如果当前系统中不存在相同的PendingIntent对象，系统将不会创建该PendingIntent对象而是直接返回null。\n3. FLAG_ONE_SHOT:该PendingIntent只作用一次。在该PendingIntent对象通过send()方法触发过后，PendingIntent将自动调用cancel()进行销毁，那么如果你再调用send()方法的话，系统将会返回一个SendIntentException。\n4. FLAG_UPDATE_CURRENT:如果系统中有一个和你描述的PendingIntent对等的PendingInent，那么系统将使用该PendingIntent对象，但是会使用新的Intent来更新之前PendingIntent中的Intent对象数据，例如更新Intent中的Extras。\n\n\n```java\nNotificationActivity.java\n\nNotificationManager manager=(NotificationManager)getSystemService(NOTIFICATION_SERVICE);\n\n//使通知在通知栏消失\nmanager.cancel(11);\n```\n\n```java\n//设置声音\nUri soundUri=Uri.fromFile(new File(\"/system/media/audio/ringtones/Boxbeat.ogg\"));\nbuilder.setSound(soundUri);\n\n//设置震动上\n//下标为偶数和0的标识手机静止的时长，奇数标识手机震动的时长\nlong [] vibrates={0,1000,1000,1000,1000,1000};\nbuilder.setVibrate(vibrates);\n```\n\n### 效果  \n\n![](/assets/img/posts/notification.gif)\n\n\n\n## 短信\n\n### 接收短信\n\n```java\nmReceiveFilter=new IntentFilter();\nmReceiveFilter.addAction(\"android.provider.Telephony.SMS_RECEIVED\");\nmMessageReceiver=new MessageReceiver();\nregisterReceiver(mMessageReceiver,mReceiveFilter);\n\nclass MessageReceiver extends BroadcastReceiver{\n\n        @Override\n        public void onReceive(Context context, Intent intent) {\n            Bundle bundle=intent.getExtras();\n\n            Object[] pdus=(Object[])bundle.get(\"pdus\");//提取短信消息\n\n            SmsMessage[] messages=new SmsMessage[pdus.length];\n\n            for(int i=0;i<messages.length;i++){\n                messages[i]=SmsMessage.createFromPdu((byte[])pdus[i]);\n            }\n\n            String address=messages[0].getOriginatingAddress();\n\n            String fullMessage=\"\";\n            for(SmsMessage message:messages){\n                fullMessage+=message.getMessageBody();//获取短信内容\n            }\n            sender.setText(address);\n            content.setText(fullMessage);\n        }\n    }\n\n```\n\n### 拦截短信\n系统发出的短信广播是一条有序广播，所以可以先获得该广播，再中止广播传递即可。\n\n1.提高MessageReceiver的优先级，让它能够先于系统短信程序接收到短信广播。\n2.调用`abortBroadcast()`方法，中止广播传递。\n\n### 发送短信\n\n```java\nmSendButton.setOnClickListener(new View.OnClickListener() {\n        @Override\n        public void onClick(View v) {\n            Log.i(\"AAABBB\", \"before\");\n            SmsManager smsManager = SmsManager.getDefault();\n            Log.i(\"AAABBB\", \"getDefault\");\n            smsManager.sendTextMessage(mTo.getText().toString(), null, mEditText.toString(), null, null);\n        }\n    });\n```\n","slug":"android/多媒体/2016-03-26-Multi-Media","published":1,"updated":"2016-10-13T06:34:38.480Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f0106001jcwjrbtkzp4dp","content":"<h2 id=\"通知\"><a href=\"#通知\" class=\"headerlink\" title=\"通知\"></a>通知</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">MainActivity.java</div><div class=\"line\"></div><div class=\"line\">NotificationManager notificationManager=(NotificationManager)getSystemService(Context.NOTIFICATION_SERVICE);</div><div class=\"line\"></div><div class=\"line\">Notification.Builder builder=<span class=\"keyword\">new</span> Notification.Builder(<span class=\"keyword\">this</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//设置点击通知进入NotificationActivity</span></div><div class=\"line\">Intent intent=<span class=\"keyword\">new</span> Intent(<span class=\"keyword\">this</span>,NotificationActivity.class);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//第二个参数int requestCode相同，表示是同一个pendingIntent</span></div><div class=\"line\">PendingIntent pi=PendingIntent.getActivity(<span class=\"keyword\">this</span>,<span class=\"number\">0</span>,intent,PendingIntent.FLAG_CANCEL_CURRENT);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//设置通知栏 布局，内容等...</span></div><div class=\"line\">builder.setSmallIcon(R.mipmap.ic_launcher);</div><div class=\"line\">builder.setContentTitle(<span class=\"string\">\"Notification Title\"</span>);</div><div class=\"line\">builder.setContentText(<span class=\"string\">\"Notification text\"</span>);</div><div class=\"line\">builder.setContentIntent(pi);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//第一个参数在应用中是唯一的，代表这个通知</span></div><div class=\"line\">notificationManager.notify(<span class=\"number\">11</span>, builder.build());</div></pre></td></tr></table></figure>\n<ol>\n<li>FLAG_CANCEL_CURRENT:如果当前系统中已经存在一个相同的PendingIntent对象，那么就将先将已有的PendingIntent取消，然后重新生成一个PendingIntent对象。</li>\n<li>FLAG_NO_CREATE:如果当前系统中不存在相同的PendingIntent对象，系统将不会创建该PendingIntent对象而是直接返回null。</li>\n<li>FLAG_ONE_SHOT:该PendingIntent只作用一次。在该PendingIntent对象通过send()方法触发过后，PendingIntent将自动调用cancel()进行销毁，那么如果你再调用send()方法的话，系统将会返回一个SendIntentException。</li>\n<li>FLAG_UPDATE_CURRENT:如果系统中有一个和你描述的PendingIntent对等的PendingInent，那么系统将使用该PendingIntent对象，但是会使用新的Intent来更新之前PendingIntent中的Intent对象数据，例如更新Intent中的Extras。</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">NotificationActivity.java</div><div class=\"line\"></div><div class=\"line\">NotificationManager manager=(NotificationManager)getSystemService(NOTIFICATION_SERVICE);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//使通知在通知栏消失</span></div><div class=\"line\">manager.cancel(<span class=\"number\">11</span>);</div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//设置声音</span></div><div class=\"line\">Uri soundUri=Uri.fromFile(<span class=\"keyword\">new</span> File(<span class=\"string\">\"/system/media/audio/ringtones/Boxbeat.ogg\"</span>));</div><div class=\"line\">builder.setSound(soundUri);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//设置震动上</span></div><div class=\"line\"><span class=\"comment\">//下标为偶数和0的标识手机静止的时长，奇数标识手机震动的时长</span></div><div class=\"line\"><span class=\"keyword\">long</span> [] vibrates=&#123;<span class=\"number\">0</span>,<span class=\"number\">1000</span>,<span class=\"number\">1000</span>,<span class=\"number\">1000</span>,<span class=\"number\">1000</span>,<span class=\"number\">1000</span>&#125;;</div><div class=\"line\">builder.setVibrate(vibrates);</div></pre></td></tr></table></figure>\n<h3 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果\"></a>效果</h3><p><img src=\"/assets/img/posts/notification.gif\" alt=\"\"></p>\n<h2 id=\"短信\"><a href=\"#短信\" class=\"headerlink\" title=\"短信\"></a>短信</h2><h3 id=\"接收短信\"><a href=\"#接收短信\" class=\"headerlink\" title=\"接收短信\"></a>接收短信</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\">mReceiveFilter=<span class=\"keyword\">new</span> IntentFilter();</div><div class=\"line\">mReceiveFilter.addAction(<span class=\"string\">\"android.provider.Telephony.SMS_RECEIVED\"</span>);</div><div class=\"line\">mMessageReceiver=<span class=\"keyword\">new</span> MessageReceiver();</div><div class=\"line\">registerReceiver(mMessageReceiver,mReceiveFilter);</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MessageReceiver</span> <span class=\"keyword\">extends</span> <span class=\"title\">BroadcastReceiver</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">@Override</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onReceive</span><span class=\"params\">(Context context, Intent intent)</span> </span>&#123;</div><div class=\"line\">            Bundle bundle=intent.getExtras();</div><div class=\"line\"></div><div class=\"line\">            Object[] pdus=(Object[])bundle.get(<span class=\"string\">\"pdus\"</span>);<span class=\"comment\">//提取短信消息</span></div><div class=\"line\"></div><div class=\"line\">            SmsMessage[] messages=<span class=\"keyword\">new</span> SmsMessage[pdus.length];</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;messages.length;i++)&#123;</div><div class=\"line\">                messages[i]=SmsMessage.createFromPdu((<span class=\"keyword\">byte</span>[])pdus[i]);</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            String address=messages[<span class=\"number\">0</span>].getOriginatingAddress();</div><div class=\"line\"></div><div class=\"line\">            String fullMessage=<span class=\"string\">\"\"</span>;</div><div class=\"line\">            <span class=\"keyword\">for</span>(SmsMessage message:messages)&#123;</div><div class=\"line\">                fullMessage+=message.getMessageBody();<span class=\"comment\">//获取短信内容</span></div><div class=\"line\">            &#125;</div><div class=\"line\">            sender.setText(address);</div><div class=\"line\">            content.setText(fullMessage);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<h3 id=\"拦截短信\"><a href=\"#拦截短信\" class=\"headerlink\" title=\"拦截短信\"></a>拦截短信</h3><p>系统发出的短信广播是一条有序广播，所以可以先获得该广播，再中止广播传递即可。</p>\n<p>1.提高MessageReceiver的优先级，让它能够先于系统短信程序接收到短信广播。<br>2.调用<code>abortBroadcast()</code>方法，中止广播传递。</p>\n<h3 id=\"发送短信\"><a href=\"#发送短信\" class=\"headerlink\" title=\"发送短信\"></a>发送短信</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">mSendButton.setOnClickListener(<span class=\"keyword\">new</span> View.OnClickListener() &#123;</div><div class=\"line\">        <span class=\"meta\">@Override</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span> </span>&#123;</div><div class=\"line\">            Log.i(<span class=\"string\">\"AAABBB\"</span>, <span class=\"string\">\"before\"</span>);</div><div class=\"line\">            SmsManager smsManager = SmsManager.getDefault();</div><div class=\"line\">            Log.i(<span class=\"string\">\"AAABBB\"</span>, <span class=\"string\">\"getDefault\"</span>);</div><div class=\"line\">            smsManager.sendTextMessage(mTo.getText().toString(), <span class=\"keyword\">null</span>, mEditText.toString(), <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;);</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h2 id=\"通知\"><a href=\"#通知\" class=\"headerlink\" title=\"通知\"></a>通知</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">MainActivity.java</div><div class=\"line\"></div><div class=\"line\">NotificationManager notificationManager=(NotificationManager)getSystemService(Context.NOTIFICATION_SERVICE);</div><div class=\"line\"></div><div class=\"line\">Notification.Builder builder=<span class=\"keyword\">new</span> Notification.Builder(<span class=\"keyword\">this</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//设置点击通知进入NotificationActivity</span></div><div class=\"line\">Intent intent=<span class=\"keyword\">new</span> Intent(<span class=\"keyword\">this</span>,NotificationActivity.class);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//第二个参数int requestCode相同，表示是同一个pendingIntent</span></div><div class=\"line\">PendingIntent pi=PendingIntent.getActivity(<span class=\"keyword\">this</span>,<span class=\"number\">0</span>,intent,PendingIntent.FLAG_CANCEL_CURRENT);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//设置通知栏 布局，内容等...</span></div><div class=\"line\">builder.setSmallIcon(R.mipmap.ic_launcher);</div><div class=\"line\">builder.setContentTitle(<span class=\"string\">\"Notification Title\"</span>);</div><div class=\"line\">builder.setContentText(<span class=\"string\">\"Notification text\"</span>);</div><div class=\"line\">builder.setContentIntent(pi);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//第一个参数在应用中是唯一的，代表这个通知</span></div><div class=\"line\">notificationManager.notify(<span class=\"number\">11</span>, builder.build());</div></pre></td></tr></table></figure>\n<ol>\n<li>FLAG_CANCEL_CURRENT:如果当前系统中已经存在一个相同的PendingIntent对象，那么就将先将已有的PendingIntent取消，然后重新生成一个PendingIntent对象。</li>\n<li>FLAG_NO_CREATE:如果当前系统中不存在相同的PendingIntent对象，系统将不会创建该PendingIntent对象而是直接返回null。</li>\n<li>FLAG_ONE_SHOT:该PendingIntent只作用一次。在该PendingIntent对象通过send()方法触发过后，PendingIntent将自动调用cancel()进行销毁，那么如果你再调用send()方法的话，系统将会返回一个SendIntentException。</li>\n<li>FLAG_UPDATE_CURRENT:如果系统中有一个和你描述的PendingIntent对等的PendingInent，那么系统将使用该PendingIntent对象，但是会使用新的Intent来更新之前PendingIntent中的Intent对象数据，例如更新Intent中的Extras。</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">NotificationActivity.java</div><div class=\"line\"></div><div class=\"line\">NotificationManager manager=(NotificationManager)getSystemService(NOTIFICATION_SERVICE);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//使通知在通知栏消失</span></div><div class=\"line\">manager.cancel(<span class=\"number\">11</span>);</div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//设置声音</span></div><div class=\"line\">Uri soundUri=Uri.fromFile(<span class=\"keyword\">new</span> File(<span class=\"string\">\"/system/media/audio/ringtones/Boxbeat.ogg\"</span>));</div><div class=\"line\">builder.setSound(soundUri);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//设置震动上</span></div><div class=\"line\"><span class=\"comment\">//下标为偶数和0的标识手机静止的时长，奇数标识手机震动的时长</span></div><div class=\"line\"><span class=\"keyword\">long</span> [] vibrates=&#123;<span class=\"number\">0</span>,<span class=\"number\">1000</span>,<span class=\"number\">1000</span>,<span class=\"number\">1000</span>,<span class=\"number\">1000</span>,<span class=\"number\">1000</span>&#125;;</div><div class=\"line\">builder.setVibrate(vibrates);</div></pre></td></tr></table></figure>\n<h3 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果\"></a>效果</h3><p><img src=\"/assets/img/posts/notification.gif\" alt=\"\"></p>\n<h2 id=\"短信\"><a href=\"#短信\" class=\"headerlink\" title=\"短信\"></a>短信</h2><h3 id=\"接收短信\"><a href=\"#接收短信\" class=\"headerlink\" title=\"接收短信\"></a>接收短信</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\">mReceiveFilter=<span class=\"keyword\">new</span> IntentFilter();</div><div class=\"line\">mReceiveFilter.addAction(<span class=\"string\">\"android.provider.Telephony.SMS_RECEIVED\"</span>);</div><div class=\"line\">mMessageReceiver=<span class=\"keyword\">new</span> MessageReceiver();</div><div class=\"line\">registerReceiver(mMessageReceiver,mReceiveFilter);</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MessageReceiver</span> <span class=\"keyword\">extends</span> <span class=\"title\">BroadcastReceiver</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">@Override</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onReceive</span><span class=\"params\">(Context context, Intent intent)</span> </span>&#123;</div><div class=\"line\">            Bundle bundle=intent.getExtras();</div><div class=\"line\"></div><div class=\"line\">            Object[] pdus=(Object[])bundle.get(<span class=\"string\">\"pdus\"</span>);<span class=\"comment\">//提取短信消息</span></div><div class=\"line\"></div><div class=\"line\">            SmsMessage[] messages=<span class=\"keyword\">new</span> SmsMessage[pdus.length];</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;messages.length;i++)&#123;</div><div class=\"line\">                messages[i]=SmsMessage.createFromPdu((<span class=\"keyword\">byte</span>[])pdus[i]);</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            String address=messages[<span class=\"number\">0</span>].getOriginatingAddress();</div><div class=\"line\"></div><div class=\"line\">            String fullMessage=<span class=\"string\">\"\"</span>;</div><div class=\"line\">            <span class=\"keyword\">for</span>(SmsMessage message:messages)&#123;</div><div class=\"line\">                fullMessage+=message.getMessageBody();<span class=\"comment\">//获取短信内容</span></div><div class=\"line\">            &#125;</div><div class=\"line\">            sender.setText(address);</div><div class=\"line\">            content.setText(fullMessage);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<h3 id=\"拦截短信\"><a href=\"#拦截短信\" class=\"headerlink\" title=\"拦截短信\"></a>拦截短信</h3><p>系统发出的短信广播是一条有序广播，所以可以先获得该广播，再中止广播传递即可。</p>\n<p>1.提高MessageReceiver的优先级，让它能够先于系统短信程序接收到短信广播。<br>2.调用<code>abortBroadcast()</code>方法，中止广播传递。</p>\n<h3 id=\"发送短信\"><a href=\"#发送短信\" class=\"headerlink\" title=\"发送短信\"></a>发送短信</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">mSendButton.setOnClickListener(<span class=\"keyword\">new</span> View.OnClickListener() &#123;</div><div class=\"line\">        <span class=\"meta\">@Override</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span> </span>&#123;</div><div class=\"line\">            Log.i(<span class=\"string\">\"AAABBB\"</span>, <span class=\"string\">\"before\"</span>);</div><div class=\"line\">            SmsManager smsManager = SmsManager.getDefault();</div><div class=\"line\">            Log.i(<span class=\"string\">\"AAABBB\"</span>, <span class=\"string\">\"getDefault\"</span>);</div><div class=\"line\">            smsManager.sendTextMessage(mTo.getText().toString(), <span class=\"keyword\">null</span>, mEditText.toString(), <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;);</div></pre></td></tr></table></figure>\n"},{"author":"ivyxjc","date":"2016-05-14T16:00:00.000Z","title":"如何处理耗时操作(使用AsyncTask, AsyncAdapter)","keywords":null,"description":null,"_content":"\n使用`AsyncTask`虽然可以非常简单将耗时操作与`UI线程`分开, 但是仍是耗时操作和`Activity`的生命周期绑定在了一起, 那么可能翻转屏幕就会使得该操作中断. 所以使用`Service`是更好的方法, `google`也给出了专用的解决方案, 使用`AsyncAdapter`.\n\n\n![](http://oezmbgg4j.bkt.clouddn.com/async_1.png)\n","source":"_posts/android/并发编程/2016-05-15-async.md","raw":"---\nauthor: ivyxjc\ndate: 2016-05-15\ntitle: 如何处理耗时操作(使用AsyncTask, AsyncAdapter)\ncategory: Android\ntags: [android_async,android_thread]\nkeywords:\ndescription:\n---\n\n使用`AsyncTask`虽然可以非常简单将耗时操作与`UI线程`分开, 但是仍是耗时操作和`Activity`的生命周期绑定在了一起, 那么可能翻转屏幕就会使得该操作中断. 所以使用`Service`是更好的方法, `google`也给出了专用的解决方案, 使用`AsyncAdapter`.\n\n\n![](http://oezmbgg4j.bkt.clouddn.com/async_1.png)\n","slug":"android/并发编程/2016-05-15-async","published":1,"updated":"2016-10-13T13:28:44.063Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f0109001ncwjrabq9gyz1","content":"<p>使用<code>AsyncTask</code>虽然可以非常简单将耗时操作与<code>UI线程</code>分开, 但是仍是耗时操作和<code>Activity</code>的生命周期绑定在了一起, 那么可能翻转屏幕就会使得该操作中断. 所以使用<code>Service</code>是更好的方法, <code>google</code>也给出了专用的解决方案, 使用<code>AsyncAdapter</code>.</p>\n<p><img src=\"http://oezmbgg4j.bkt.clouddn.com/async_1.png\" alt=\"\"></p>\n","excerpt":"","more":"<p>使用<code>AsyncTask</code>虽然可以非常简单将耗时操作与<code>UI线程</code>分开, 但是仍是耗时操作和<code>Activity</code>的生命周期绑定在了一起, 那么可能翻转屏幕就会使得该操作中断. 所以使用<code>Service</code>是更好的方法, <code>google</code>也给出了专用的解决方案, 使用<code>AsyncAdapter</code>.</p>\n<p><img src=\"http://oezmbgg4j.bkt.clouddn.com/async_1.png\" alt=\"\"></p>\n"},{"author":"ivyxjc","date":"2016-03-24T16:00:00.000Z","title":"数据持久化","keywords":null,"description":"存储数据主要有三种方式:<br>1. 存储到文件<br>2. SharedPreferences存储<br>3. SQLite","_content":"\n## 数据存储到文件\n\n`Context`类提供了一个`openFileOutput()`方法，可以将数据存储到指定的文件中。接受两个参数，\n1. 第一个参数是文件名(无需包含路径)，默认存储 到`/data/data/<package name>/files/`目录下。\n2. 第二个参数是文件的操作模式，主要有两种：`MODE_PRIVATE`和`MODE_APPEND`。其中`MODE_PRIVATE`是默认的操作模式，表示当指定同样文件名的时候，所写入的内容将会覆盖原文件中的内容。`MODE_APPEND`则表示如果该文件已存在就往文件里面追加内容。还有另外两种模式：`MODE_WORLD_READABLE`和`MODE_WORLD_WRITEABLE`表示允许其它的应用程序对该程序中的文件进行读写操作，已被废弃。\n\n```java\npublic void save(String inputText){\n    FileOutputStream out=null;\n    BufferedWriter writer=null;\n    try{\n        out=openFileOutput(\"data\", Context.MODE_PRIVATE);\n        writer=new BufferedWriter(new OutputStreamWriter(out));\n        writer.write(inputText);\n    }catch (IOException e){\n        e.printStackTrace();\n    }finally {\n        try{\n            if(writer!=null){\n                writer.close();\n            }\n        }catch (IOException e){\n            e.printStackTrace();\n        }\n    }\n}\n\npublic String load(){\n    FileInputStream in=null;\n    BufferedReader reader=null;\n    StringBuilder content=new StringBuilder();\n\n    try{\n        in=openFileInput(\"data\");\n        reader=new BufferedReader(new InputStreamReader(in));\n        String line=\"\";\n        while ((line=reader.readLine())!=null){\n            content.append(line);\n        }\n    }catch (IOException e){\n        e.printStackTrace();\n    }finally {\n        if(reader!=null){\n            try{\n                reader.close();\n            }catch (IOException e){\n                e.printStackTrace();\n            }\n        }\n    }\n    return content.toString();\n}\n\n```\n\n## SharedPreferences存储\n\n```java\n//存储数据\nSharedPreferences.Editor editor=getSharedPreferences(\"data\",MODE_PRIVATE).edit();\neditor.putString(\"name\",\"Tom\");\neditor.putInt(\"age\", 28);\neditor.putBoolean(\"married\", false);\neditor.commit();\n\n//读取数据\n\nSharedPreferences preferences=getSharedPreferences(\"data\",MODE_PRIVATE);\nString name=preferences.getString(\"name\", \"\");\nboolean married=preferences.getBoolean(\"married\", false);\nint age=preferences.getInt(\"age\",0);\n```\n\n## SQLite\n\n安卓提供了一个`SQLiteOpenHelper`帮助类，可以借助这个类对数据库进行创建和升级。\n\n### 建表\n\n```sql\n//建表\ncreate table Book{\n\tid integer primary key autoincrement,\n    author text,\n    price real,\n    pages integer,\n    name text,\n}\n```\n\n1. `integer`:整型\n2. `real`：浮点型\n3. `text`：文本类型\n4. `blob`：二进制类型\n\n### 添加数据\n\n```java\nSQLiteDatabase db=dbHelper.getWritableDatabase();\nContentValues values=new ContentValues();\nvalues.put(\"author\",\"Dan Brown\");\nvalues.put(\"name\",\"The Da Vinci Code\");\nvalues.put(\"pages\",454);\nvalues.put(\"price\", 16.96);\ndb.insert(\"Book\",null,values);\nvalues.clear();\n```\n\n向数据库中添加数据\n\n### 更新数据\n\n可以使用\n`db.update(String Table,ContenValues values,String WhereClauses,String[] WhereArgs)`\n\n第三个参数对应SQL语句中的`where`，其中用`?`作占位符，第四个参数则表示`?`的内容。\n\n```java\n//表示将name为The Da Vinci Code 的价格改为10.99\nConteValues values=new ContentValues();\nvalues.put(\"price\",10.99);\ndb.update(\"Book\",values,\"name=?\",new String[]{\"The Da Vinci Code\"})；\n```\n\n### 删除数据\n\n可以使用`db.delete(String Table,String WhereClauses,String[] WhereArgs)`\n第二，三两个参数用来约束删除某一行或几行的数据，不指定的话就默认删除所有行。\n\n### 查询数据\n\nquery()方法参数 | 对应SQL部分|描述\n--------|--------|--------\ntable |   from table_name|  指定查询的表名\ncolumns  |   select column1,column2 |  指定查询的列名\nselection  |    where column=value| 指定where的约束条件\nselectionArgs |   -  |  为where中的占位符提供具体的数值\ngroupBy   |    group by column    |  指定需要group by的列\nhaving |   having column=value |对group by后的结果进一步约束\norderBy | order by column1, column2 |  指定查询结果的排序方式\n\n\n`Cursor cursor = db.query(\"Book\", null, null, null, null, null, null);`\n上式查询表中所有数据\n\n\n### 直接使用SQL语句\n\n除查询之外的所有方法可以条用`db.execSQL(...)`接执行SQL语句\n查询数据的方法时可调用它`db.rawQuery(...)`接执行SQL语句\n\n## 代码\n\n```java\npublic class MyDatabaseHelper extends SQLiteOpenHelper {\n    private Context mContext;\n\n    public static final String CREATE_BOOK=\"create table Book (\" +\n            \"id integer primary key autoincrement,\" +\n            \"author text,\" +\n            \"price real,\" +\n            \"pages integer,\" +\n            \"name text)\";\n\n    public MyDatabaseHelper(Context context, String name, SQLiteDatabase.CursorFactory factory, int version) {\n        super(context, name, factory, version);\n        mContext=context;\n    }\n\n    @Override\n    public void onCreate(SQLiteDatabase db) {\n        db.execSQL(CREATE_BOOK);\n        //db.execSQL(CREATE_CATEGORY);\n        Toast.makeText(mContext,\"Create succeeded\", Toast.LENGTH_SHORT).show();\n    }\n\n    @Override\n    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {\n        db.execSQL(\"drop table if exists Book\");\n        db.execSQL(\"drop table if exists Category\");\n        onCreate(db);\n    }\n}\n```\n\n```java\npublic class MainActivity extends AppCompatActivity {\n\n    private MyDatabaseHelper dbHelper;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n//最后一个数是版本号，若版本号比原先高，则会调用  SQLiteOpenHelper中的onUpgrade()。\n        dbHelper=new MyDatabaseHelper(this,\"BookStore.db\",null,5);\n\n        Button button=(Button)findViewById(R.id.button);\n\n        button.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                dbHelper.getWritableDatabase();\n            }\n        });\n\n        Button addData=(Button)findViewById(R.id.add_data);\n        addData.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                SQLiteDatabase db=dbHelper.getWritableDatabase();\n\n                //向数据库中添加数据\n                ContentValues values=new ContentValues();\n                values.put(\"author\",\"Dan Brown\");\n                values.put(\"name\",\"The Da\");\n                values.put(\"pages\",454);\n                values.put(\"price\", 16.96);\n                db.insert(\"Book\",null,values);\n                values.clear();\n            }\n        });\n    }\n}\n```\n","source":"_posts/android/数据持久化/2016-03-25-data-persistence.md","raw":"---\nauthor: ivyxjc\ndate: 2016-03-25\ntitle: 数据持久化\ncategory: Android\ntags: [android,data_persistence]\nkeywords:\ndescription: 存储数据主要有三种方式:<br>1. 存储到文件<br>2. SharedPreferences存储<br>3. SQLite\n---\n\n## 数据存储到文件\n\n`Context`类提供了一个`openFileOutput()`方法，可以将数据存储到指定的文件中。接受两个参数，\n1. 第一个参数是文件名(无需包含路径)，默认存储 到`/data/data/<package name>/files/`目录下。\n2. 第二个参数是文件的操作模式，主要有两种：`MODE_PRIVATE`和`MODE_APPEND`。其中`MODE_PRIVATE`是默认的操作模式，表示当指定同样文件名的时候，所写入的内容将会覆盖原文件中的内容。`MODE_APPEND`则表示如果该文件已存在就往文件里面追加内容。还有另外两种模式：`MODE_WORLD_READABLE`和`MODE_WORLD_WRITEABLE`表示允许其它的应用程序对该程序中的文件进行读写操作，已被废弃。\n\n```java\npublic void save(String inputText){\n    FileOutputStream out=null;\n    BufferedWriter writer=null;\n    try{\n        out=openFileOutput(\"data\", Context.MODE_PRIVATE);\n        writer=new BufferedWriter(new OutputStreamWriter(out));\n        writer.write(inputText);\n    }catch (IOException e){\n        e.printStackTrace();\n    }finally {\n        try{\n            if(writer!=null){\n                writer.close();\n            }\n        }catch (IOException e){\n            e.printStackTrace();\n        }\n    }\n}\n\npublic String load(){\n    FileInputStream in=null;\n    BufferedReader reader=null;\n    StringBuilder content=new StringBuilder();\n\n    try{\n        in=openFileInput(\"data\");\n        reader=new BufferedReader(new InputStreamReader(in));\n        String line=\"\";\n        while ((line=reader.readLine())!=null){\n            content.append(line);\n        }\n    }catch (IOException e){\n        e.printStackTrace();\n    }finally {\n        if(reader!=null){\n            try{\n                reader.close();\n            }catch (IOException e){\n                e.printStackTrace();\n            }\n        }\n    }\n    return content.toString();\n}\n\n```\n\n## SharedPreferences存储\n\n```java\n//存储数据\nSharedPreferences.Editor editor=getSharedPreferences(\"data\",MODE_PRIVATE).edit();\neditor.putString(\"name\",\"Tom\");\neditor.putInt(\"age\", 28);\neditor.putBoolean(\"married\", false);\neditor.commit();\n\n//读取数据\n\nSharedPreferences preferences=getSharedPreferences(\"data\",MODE_PRIVATE);\nString name=preferences.getString(\"name\", \"\");\nboolean married=preferences.getBoolean(\"married\", false);\nint age=preferences.getInt(\"age\",0);\n```\n\n## SQLite\n\n安卓提供了一个`SQLiteOpenHelper`帮助类，可以借助这个类对数据库进行创建和升级。\n\n### 建表\n\n```sql\n//建表\ncreate table Book{\n\tid integer primary key autoincrement,\n    author text,\n    price real,\n    pages integer,\n    name text,\n}\n```\n\n1. `integer`:整型\n2. `real`：浮点型\n3. `text`：文本类型\n4. `blob`：二进制类型\n\n### 添加数据\n\n```java\nSQLiteDatabase db=dbHelper.getWritableDatabase();\nContentValues values=new ContentValues();\nvalues.put(\"author\",\"Dan Brown\");\nvalues.put(\"name\",\"The Da Vinci Code\");\nvalues.put(\"pages\",454);\nvalues.put(\"price\", 16.96);\ndb.insert(\"Book\",null,values);\nvalues.clear();\n```\n\n向数据库中添加数据\n\n### 更新数据\n\n可以使用\n`db.update(String Table,ContenValues values,String WhereClauses,String[] WhereArgs)`\n\n第三个参数对应SQL语句中的`where`，其中用`?`作占位符，第四个参数则表示`?`的内容。\n\n```java\n//表示将name为The Da Vinci Code 的价格改为10.99\nConteValues values=new ContentValues();\nvalues.put(\"price\",10.99);\ndb.update(\"Book\",values,\"name=?\",new String[]{\"The Da Vinci Code\"})；\n```\n\n### 删除数据\n\n可以使用`db.delete(String Table,String WhereClauses,String[] WhereArgs)`\n第二，三两个参数用来约束删除某一行或几行的数据，不指定的话就默认删除所有行。\n\n### 查询数据\n\nquery()方法参数 | 对应SQL部分|描述\n--------|--------|--------\ntable |   from table_name|  指定查询的表名\ncolumns  |   select column1,column2 |  指定查询的列名\nselection  |    where column=value| 指定where的约束条件\nselectionArgs |   -  |  为where中的占位符提供具体的数值\ngroupBy   |    group by column    |  指定需要group by的列\nhaving |   having column=value |对group by后的结果进一步约束\norderBy | order by column1, column2 |  指定查询结果的排序方式\n\n\n`Cursor cursor = db.query(\"Book\", null, null, null, null, null, null);`\n上式查询表中所有数据\n\n\n### 直接使用SQL语句\n\n除查询之外的所有方法可以条用`db.execSQL(...)`接执行SQL语句\n查询数据的方法时可调用它`db.rawQuery(...)`接执行SQL语句\n\n## 代码\n\n```java\npublic class MyDatabaseHelper extends SQLiteOpenHelper {\n    private Context mContext;\n\n    public static final String CREATE_BOOK=\"create table Book (\" +\n            \"id integer primary key autoincrement,\" +\n            \"author text,\" +\n            \"price real,\" +\n            \"pages integer,\" +\n            \"name text)\";\n\n    public MyDatabaseHelper(Context context, String name, SQLiteDatabase.CursorFactory factory, int version) {\n        super(context, name, factory, version);\n        mContext=context;\n    }\n\n    @Override\n    public void onCreate(SQLiteDatabase db) {\n        db.execSQL(CREATE_BOOK);\n        //db.execSQL(CREATE_CATEGORY);\n        Toast.makeText(mContext,\"Create succeeded\", Toast.LENGTH_SHORT).show();\n    }\n\n    @Override\n    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {\n        db.execSQL(\"drop table if exists Book\");\n        db.execSQL(\"drop table if exists Category\");\n        onCreate(db);\n    }\n}\n```\n\n```java\npublic class MainActivity extends AppCompatActivity {\n\n    private MyDatabaseHelper dbHelper;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n//最后一个数是版本号，若版本号比原先高，则会调用  SQLiteOpenHelper中的onUpgrade()。\n        dbHelper=new MyDatabaseHelper(this,\"BookStore.db\",null,5);\n\n        Button button=(Button)findViewById(R.id.button);\n\n        button.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                dbHelper.getWritableDatabase();\n            }\n        });\n\n        Button addData=(Button)findViewById(R.id.add_data);\n        addData.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                SQLiteDatabase db=dbHelper.getWritableDatabase();\n\n                //向数据库中添加数据\n                ContentValues values=new ContentValues();\n                values.put(\"author\",\"Dan Brown\");\n                values.put(\"name\",\"The Da\");\n                values.put(\"pages\",454);\n                values.put(\"price\", 16.96);\n                db.insert(\"Book\",null,values);\n                values.clear();\n            }\n        });\n    }\n}\n```\n","slug":"android/数据持久化/2016-03-25-data-persistence","published":1,"updated":"2016-10-13T06:45:01.817Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f010b001qcwjrf92drdsg","content":"<h2 id=\"数据存储到文件\"><a href=\"#数据存储到文件\" class=\"headerlink\" title=\"数据存储到文件\"></a>数据存储到文件</h2><p><code>Context</code>类提供了一个<code>openFileOutput()</code>方法，可以将数据存储到指定的文件中。接受两个参数，</p>\n<ol>\n<li>第一个参数是文件名(无需包含路径)，默认存储 到<code>/data/data/&lt;package name&gt;/files/</code>目录下。</li>\n<li>第二个参数是文件的操作模式，主要有两种：<code>MODE_PRIVATE</code>和<code>MODE_APPEND</code>。其中<code>MODE_PRIVATE</code>是默认的操作模式，表示当指定同样文件名的时候，所写入的内容将会覆盖原文件中的内容。<code>MODE_APPEND</code>则表示如果该文件已存在就往文件里面追加内容。还有另外两种模式：<code>MODE_WORLD_READABLE</code>和<code>MODE_WORLD_WRITEABLE</code>表示允许其它的应用程序对该程序中的文件进行读写操作，已被废弃。</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">save</span><span class=\"params\">(String inputText)</span></span>&#123;</div><div class=\"line\">    FileOutputStream out=<span class=\"keyword\">null</span>;</div><div class=\"line\">    BufferedWriter writer=<span class=\"keyword\">null</span>;</div><div class=\"line\">    <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">        out=openFileOutput(<span class=\"string\">\"data\"</span>, Context.MODE_PRIVATE);</div><div class=\"line\">        writer=<span class=\"keyword\">new</span> BufferedWriter(<span class=\"keyword\">new</span> OutputStreamWriter(out));</div><div class=\"line\">        writer.write(inputText);</div><div class=\"line\">    &#125;<span class=\"keyword\">catch</span> (IOException e)&#123;</div><div class=\"line\">        e.printStackTrace();</div><div class=\"line\">    &#125;<span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">            <span class=\"keyword\">if</span>(writer!=<span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">                writer.close();</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;<span class=\"keyword\">catch</span> (IOException e)&#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">load</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    FileInputStream in=<span class=\"keyword\">null</span>;</div><div class=\"line\">    BufferedReader reader=<span class=\"keyword\">null</span>;</div><div class=\"line\">    StringBuilder content=<span class=\"keyword\">new</span> StringBuilder();</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">        in=openFileInput(<span class=\"string\">\"data\"</span>);</div><div class=\"line\">        reader=<span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(in));</div><div class=\"line\">        String line=<span class=\"string\">\"\"</span>;</div><div class=\"line\">        <span class=\"keyword\">while</span> ((line=reader.readLine())!=<span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">            content.append(line);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;<span class=\"keyword\">catch</span> (IOException e)&#123;</div><div class=\"line\">        e.printStackTrace();</div><div class=\"line\">    &#125;<span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(reader!=<span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">            <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">                reader.close();</div><div class=\"line\">            &#125;<span class=\"keyword\">catch</span> (IOException e)&#123;</div><div class=\"line\">                e.printStackTrace();</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> content.toString();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"SharedPreferences存储\"><a href=\"#SharedPreferences存储\" class=\"headerlink\" title=\"SharedPreferences存储\"></a>SharedPreferences存储</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//存储数据</span></div><div class=\"line\">SharedPreferences.Editor editor=getSharedPreferences(<span class=\"string\">\"data\"</span>,MODE_PRIVATE).edit();</div><div class=\"line\">editor.putString(<span class=\"string\">\"name\"</span>,<span class=\"string\">\"Tom\"</span>);</div><div class=\"line\">editor.putInt(<span class=\"string\">\"age\"</span>, <span class=\"number\">28</span>);</div><div class=\"line\">editor.putBoolean(<span class=\"string\">\"married\"</span>, <span class=\"keyword\">false</span>);</div><div class=\"line\">editor.commit();</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//读取数据</span></div><div class=\"line\"></div><div class=\"line\">SharedPreferences preferences=getSharedPreferences(<span class=\"string\">\"data\"</span>,MODE_PRIVATE);</div><div class=\"line\">String name=preferences.getString(<span class=\"string\">\"name\"</span>, <span class=\"string\">\"\"</span>);</div><div class=\"line\"><span class=\"keyword\">boolean</span> married=preferences.getBoolean(<span class=\"string\">\"married\"</span>, <span class=\"keyword\">false</span>);</div><div class=\"line\"><span class=\"keyword\">int</span> age=preferences.getInt(<span class=\"string\">\"age\"</span>,<span class=\"number\">0</span>);</div></pre></td></tr></table></figure>\n<h2 id=\"SQLite\"><a href=\"#SQLite\" class=\"headerlink\" title=\"SQLite\"></a>SQLite</h2><p>安卓提供了一个<code>SQLiteOpenHelper</code>帮助类，可以借助这个类对数据库进行创建和升级。</p>\n<h3 id=\"建表\"><a href=\"#建表\" class=\"headerlink\" title=\"建表\"></a>建表</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">//建表</div><div class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> Book&#123;</div><div class=\"line\">\t<span class=\"keyword\">id</span> <span class=\"built_in\">integer</span> primary <span class=\"keyword\">key</span> autoincrement,</div><div class=\"line\">    author <span class=\"built_in\">text</span>,</div><div class=\"line\">    price <span class=\"built_in\">real</span>,</div><div class=\"line\">    pages <span class=\"built_in\">integer</span>,</div><div class=\"line\">    <span class=\"keyword\">name</span> <span class=\"built_in\">text</span>,</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<ol>\n<li><code>integer</code>:整型</li>\n<li><code>real</code>：浮点型</li>\n<li><code>text</code>：文本类型</li>\n<li><code>blob</code>：二进制类型</li>\n</ol>\n<h3 id=\"添加数据\"><a href=\"#添加数据\" class=\"headerlink\" title=\"添加数据\"></a>添加数据</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">SQLiteDatabase db=dbHelper.getWritableDatabase();</div><div class=\"line\">ContentValues values=<span class=\"keyword\">new</span> ContentValues();</div><div class=\"line\">values.put(<span class=\"string\">\"author\"</span>,<span class=\"string\">\"Dan Brown\"</span>);</div><div class=\"line\">values.put(<span class=\"string\">\"name\"</span>,<span class=\"string\">\"The Da Vinci Code\"</span>);</div><div class=\"line\">values.put(<span class=\"string\">\"pages\"</span>,<span class=\"number\">454</span>);</div><div class=\"line\">values.put(<span class=\"string\">\"price\"</span>, <span class=\"number\">16.96</span>);</div><div class=\"line\">db.insert(<span class=\"string\">\"Book\"</span>,<span class=\"keyword\">null</span>,values);</div><div class=\"line\">values.clear();</div></pre></td></tr></table></figure>\n<p>向数据库中添加数据</p>\n<h3 id=\"更新数据\"><a href=\"#更新数据\" class=\"headerlink\" title=\"更新数据\"></a>更新数据</h3><p>可以使用<br><code>db.update(String Table,ContenValues values,String WhereClauses,String[] WhereArgs)</code></p>\n<p>第三个参数对应SQL语句中的<code>where</code>，其中用<code>?</code>作占位符，第四个参数则表示<code>?</code>的内容。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//表示将name为The Da Vinci Code 的价格改为10.99</span></div><div class=\"line\">ConteValues values=<span class=\"keyword\">new</span> ContentValues();</div><div class=\"line\">values.put(<span class=\"string\">\"price\"</span>,<span class=\"number\">10.99</span>);</div><div class=\"line\">db.update(<span class=\"string\">\"Book\"</span>,values,<span class=\"string\">\"name=?\"</span>,<span class=\"keyword\">new</span> String[]&#123;<span class=\"string\">\"The Da Vinci Code\"</span>&#125;)；</div></pre></td></tr></table></figure>\n<h3 id=\"删除数据\"><a href=\"#删除数据\" class=\"headerlink\" title=\"删除数据\"></a>删除数据</h3><p>可以使用<code>db.delete(String Table,String WhereClauses,String[] WhereArgs)</code><br>第二，三两个参数用来约束删除某一行或几行的数据，不指定的话就默认删除所有行。</p>\n<h3 id=\"查询数据\"><a href=\"#查询数据\" class=\"headerlink\" title=\"查询数据\"></a>查询数据</h3><table>\n<thead>\n<tr>\n<th>query()方法参数</th>\n<th>对应SQL部分</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>table</td>\n<td>from table_name</td>\n<td>指定查询的表名</td>\n</tr>\n<tr>\n<td>columns</td>\n<td>select column1,column2</td>\n<td>指定查询的列名</td>\n</tr>\n<tr>\n<td>selection</td>\n<td>where column=value</td>\n<td>指定where的约束条件</td>\n</tr>\n<tr>\n<td>selectionArgs</td>\n<td>-</td>\n<td>为where中的占位符提供具体的数值</td>\n</tr>\n<tr>\n<td>groupBy</td>\n<td>group by column</td>\n<td>指定需要group by的列</td>\n</tr>\n<tr>\n<td>having</td>\n<td>having column=value</td>\n<td>对group by后的结果进一步约束</td>\n</tr>\n<tr>\n<td>orderBy</td>\n<td>order by column1, column2</td>\n<td>指定查询结果的排序方式</td>\n</tr>\n</tbody>\n</table>\n<p><code>Cursor cursor = db.query(&quot;Book&quot;, null, null, null, null, null, null);</code><br>上式查询表中所有数据</p>\n<h3 id=\"直接使用SQL语句\"><a href=\"#直接使用SQL语句\" class=\"headerlink\" title=\"直接使用SQL语句\"></a>直接使用SQL语句</h3><p>除查询之外的所有方法可以条用<code>db.execSQL(...)</code>接执行SQL语句<br>查询数据的方法时可调用它<code>db.rawQuery(...)</code>接执行SQL语句</p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyDatabaseHelper</span> <span class=\"keyword\">extends</span> <span class=\"title\">SQLiteOpenHelper</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> Context mContext;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String CREATE_BOOK=<span class=\"string\">\"create table Book (\"</span> +</div><div class=\"line\">            <span class=\"string\">\"id integer primary key autoincrement,\"</span> +</div><div class=\"line\">            <span class=\"string\">\"author text,\"</span> +</div><div class=\"line\">            <span class=\"string\">\"price real,\"</span> +</div><div class=\"line\">            <span class=\"string\">\"pages integer,\"</span> +</div><div class=\"line\">            <span class=\"string\">\"name text)\"</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MyDatabaseHelper</span><span class=\"params\">(Context context, String name, SQLiteDatabase.CursorFactory factory, <span class=\"keyword\">int</span> version)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>(context, name, factory, version);</div><div class=\"line\">        mContext=context;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(SQLiteDatabase db)</span> </span>&#123;</div><div class=\"line\">        db.execSQL(CREATE_BOOK);</div><div class=\"line\">        <span class=\"comment\">//db.execSQL(CREATE_CATEGORY);</span></div><div class=\"line\">        Toast.makeText(mContext,<span class=\"string\">\"Create succeeded\"</span>, Toast.LENGTH_SHORT).show();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onUpgrade</span><span class=\"params\">(SQLiteDatabase db, <span class=\"keyword\">int</span> oldVersion, <span class=\"keyword\">int</span> newVersion)</span> </span>&#123;</div><div class=\"line\">        db.execSQL(<span class=\"string\">\"drop table if exists Book\"</span>);</div><div class=\"line\">        db.execSQL(<span class=\"string\">\"drop table if exists Category\"</span>);</div><div class=\"line\">        onCreate(db);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">private</span> MyDatabaseHelper dbHelper;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">        setContentView(R.layout.activity_main);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//最后一个数是版本号，若版本号比原先高，则会调用  SQLiteOpenHelper中的onUpgrade()。</span></div><div class=\"line\">        dbHelper=<span class=\"keyword\">new</span> MyDatabaseHelper(<span class=\"keyword\">this</span>,<span class=\"string\">\"BookStore.db\"</span>,<span class=\"keyword\">null</span>,<span class=\"number\">5</span>);</div><div class=\"line\"></div><div class=\"line\">        Button button=(Button)findViewById(R.id.button);</div><div class=\"line\"></div><div class=\"line\">        button.setOnClickListener(<span class=\"keyword\">new</span> View.OnClickListener() &#123;</div><div class=\"line\">            <span class=\"meta\">@Override</span></div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span> </span>&#123;</div><div class=\"line\">                dbHelper.getWritableDatabase();</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;);</div><div class=\"line\"></div><div class=\"line\">        Button addData=(Button)findViewById(R.id.add_data);</div><div class=\"line\">        addData.setOnClickListener(<span class=\"keyword\">new</span> View.OnClickListener() &#123;</div><div class=\"line\">            <span class=\"meta\">@Override</span></div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span> </span>&#123;</div><div class=\"line\">                SQLiteDatabase db=dbHelper.getWritableDatabase();</div><div class=\"line\"></div><div class=\"line\">                <span class=\"comment\">//向数据库中添加数据</span></div><div class=\"line\">                ContentValues values=<span class=\"keyword\">new</span> ContentValues();</div><div class=\"line\">                values.put(<span class=\"string\">\"author\"</span>,<span class=\"string\">\"Dan Brown\"</span>);</div><div class=\"line\">                values.put(<span class=\"string\">\"name\"</span>,<span class=\"string\">\"The Da\"</span>);</div><div class=\"line\">                values.put(<span class=\"string\">\"pages\"</span>,<span class=\"number\">454</span>);</div><div class=\"line\">                values.put(<span class=\"string\">\"price\"</span>, <span class=\"number\">16.96</span>);</div><div class=\"line\">                db.insert(<span class=\"string\">\"Book\"</span>,<span class=\"keyword\">null</span>,values);</div><div class=\"line\">                values.clear();</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h2 id=\"数据存储到文件\"><a href=\"#数据存储到文件\" class=\"headerlink\" title=\"数据存储到文件\"></a>数据存储到文件</h2><p><code>Context</code>类提供了一个<code>openFileOutput()</code>方法，可以将数据存储到指定的文件中。接受两个参数，</p>\n<ol>\n<li>第一个参数是文件名(无需包含路径)，默认存储 到<code>/data/data/&lt;package name&gt;/files/</code>目录下。</li>\n<li>第二个参数是文件的操作模式，主要有两种：<code>MODE_PRIVATE</code>和<code>MODE_APPEND</code>。其中<code>MODE_PRIVATE</code>是默认的操作模式，表示当指定同样文件名的时候，所写入的内容将会覆盖原文件中的内容。<code>MODE_APPEND</code>则表示如果该文件已存在就往文件里面追加内容。还有另外两种模式：<code>MODE_WORLD_READABLE</code>和<code>MODE_WORLD_WRITEABLE</code>表示允许其它的应用程序对该程序中的文件进行读写操作，已被废弃。</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">save</span><span class=\"params\">(String inputText)</span></span>&#123;</div><div class=\"line\">    FileOutputStream out=<span class=\"keyword\">null</span>;</div><div class=\"line\">    BufferedWriter writer=<span class=\"keyword\">null</span>;</div><div class=\"line\">    <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">        out=openFileOutput(<span class=\"string\">\"data\"</span>, Context.MODE_PRIVATE);</div><div class=\"line\">        writer=<span class=\"keyword\">new</span> BufferedWriter(<span class=\"keyword\">new</span> OutputStreamWriter(out));</div><div class=\"line\">        writer.write(inputText);</div><div class=\"line\">    &#125;<span class=\"keyword\">catch</span> (IOException e)&#123;</div><div class=\"line\">        e.printStackTrace();</div><div class=\"line\">    &#125;<span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">            <span class=\"keyword\">if</span>(writer!=<span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">                writer.close();</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;<span class=\"keyword\">catch</span> (IOException e)&#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">load</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    FileInputStream in=<span class=\"keyword\">null</span>;</div><div class=\"line\">    BufferedReader reader=<span class=\"keyword\">null</span>;</div><div class=\"line\">    StringBuilder content=<span class=\"keyword\">new</span> StringBuilder();</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">        in=openFileInput(<span class=\"string\">\"data\"</span>);</div><div class=\"line\">        reader=<span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(in));</div><div class=\"line\">        String line=<span class=\"string\">\"\"</span>;</div><div class=\"line\">        <span class=\"keyword\">while</span> ((line=reader.readLine())!=<span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">            content.append(line);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;<span class=\"keyword\">catch</span> (IOException e)&#123;</div><div class=\"line\">        e.printStackTrace();</div><div class=\"line\">    &#125;<span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(reader!=<span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">            <span class=\"keyword\">try</span>&#123;</div><div class=\"line\">                reader.close();</div><div class=\"line\">            &#125;<span class=\"keyword\">catch</span> (IOException e)&#123;</div><div class=\"line\">                e.printStackTrace();</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> content.toString();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"SharedPreferences存储\"><a href=\"#SharedPreferences存储\" class=\"headerlink\" title=\"SharedPreferences存储\"></a>SharedPreferences存储</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//存储数据</span></div><div class=\"line\">SharedPreferences.Editor editor=getSharedPreferences(<span class=\"string\">\"data\"</span>,MODE_PRIVATE).edit();</div><div class=\"line\">editor.putString(<span class=\"string\">\"name\"</span>,<span class=\"string\">\"Tom\"</span>);</div><div class=\"line\">editor.putInt(<span class=\"string\">\"age\"</span>, <span class=\"number\">28</span>);</div><div class=\"line\">editor.putBoolean(<span class=\"string\">\"married\"</span>, <span class=\"keyword\">false</span>);</div><div class=\"line\">editor.commit();</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//读取数据</span></div><div class=\"line\"></div><div class=\"line\">SharedPreferences preferences=getSharedPreferences(<span class=\"string\">\"data\"</span>,MODE_PRIVATE);</div><div class=\"line\">String name=preferences.getString(<span class=\"string\">\"name\"</span>, <span class=\"string\">\"\"</span>);</div><div class=\"line\"><span class=\"keyword\">boolean</span> married=preferences.getBoolean(<span class=\"string\">\"married\"</span>, <span class=\"keyword\">false</span>);</div><div class=\"line\"><span class=\"keyword\">int</span> age=preferences.getInt(<span class=\"string\">\"age\"</span>,<span class=\"number\">0</span>);</div></pre></td></tr></table></figure>\n<h2 id=\"SQLite\"><a href=\"#SQLite\" class=\"headerlink\" title=\"SQLite\"></a>SQLite</h2><p>安卓提供了一个<code>SQLiteOpenHelper</code>帮助类，可以借助这个类对数据库进行创建和升级。</p>\n<h3 id=\"建表\"><a href=\"#建表\" class=\"headerlink\" title=\"建表\"></a>建表</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">//建表</div><div class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> Book&#123;</div><div class=\"line\">\t<span class=\"keyword\">id</span> <span class=\"built_in\">integer</span> primary <span class=\"keyword\">key</span> autoincrement,</div><div class=\"line\">    author <span class=\"built_in\">text</span>,</div><div class=\"line\">    price <span class=\"built_in\">real</span>,</div><div class=\"line\">    pages <span class=\"built_in\">integer</span>,</div><div class=\"line\">    <span class=\"keyword\">name</span> <span class=\"built_in\">text</span>,</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<ol>\n<li><code>integer</code>:整型</li>\n<li><code>real</code>：浮点型</li>\n<li><code>text</code>：文本类型</li>\n<li><code>blob</code>：二进制类型</li>\n</ol>\n<h3 id=\"添加数据\"><a href=\"#添加数据\" class=\"headerlink\" title=\"添加数据\"></a>添加数据</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">SQLiteDatabase db=dbHelper.getWritableDatabase();</div><div class=\"line\">ContentValues values=<span class=\"keyword\">new</span> ContentValues();</div><div class=\"line\">values.put(<span class=\"string\">\"author\"</span>,<span class=\"string\">\"Dan Brown\"</span>);</div><div class=\"line\">values.put(<span class=\"string\">\"name\"</span>,<span class=\"string\">\"The Da Vinci Code\"</span>);</div><div class=\"line\">values.put(<span class=\"string\">\"pages\"</span>,<span class=\"number\">454</span>);</div><div class=\"line\">values.put(<span class=\"string\">\"price\"</span>, <span class=\"number\">16.96</span>);</div><div class=\"line\">db.insert(<span class=\"string\">\"Book\"</span>,<span class=\"keyword\">null</span>,values);</div><div class=\"line\">values.clear();</div></pre></td></tr></table></figure>\n<p>向数据库中添加数据</p>\n<h3 id=\"更新数据\"><a href=\"#更新数据\" class=\"headerlink\" title=\"更新数据\"></a>更新数据</h3><p>可以使用<br><code>db.update(String Table,ContenValues values,String WhereClauses,String[] WhereArgs)</code></p>\n<p>第三个参数对应SQL语句中的<code>where</code>，其中用<code>?</code>作占位符，第四个参数则表示<code>?</code>的内容。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//表示将name为The Da Vinci Code 的价格改为10.99</span></div><div class=\"line\">ConteValues values=<span class=\"keyword\">new</span> ContentValues();</div><div class=\"line\">values.put(<span class=\"string\">\"price\"</span>,<span class=\"number\">10.99</span>);</div><div class=\"line\">db.update(<span class=\"string\">\"Book\"</span>,values,<span class=\"string\">\"name=?\"</span>,<span class=\"keyword\">new</span> String[]&#123;<span class=\"string\">\"The Da Vinci Code\"</span>&#125;)；</div></pre></td></tr></table></figure>\n<h3 id=\"删除数据\"><a href=\"#删除数据\" class=\"headerlink\" title=\"删除数据\"></a>删除数据</h3><p>可以使用<code>db.delete(String Table,String WhereClauses,String[] WhereArgs)</code><br>第二，三两个参数用来约束删除某一行或几行的数据，不指定的话就默认删除所有行。</p>\n<h3 id=\"查询数据\"><a href=\"#查询数据\" class=\"headerlink\" title=\"查询数据\"></a>查询数据</h3><table>\n<thead>\n<tr>\n<th>query()方法参数</th>\n<th>对应SQL部分</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>table</td>\n<td>from table_name</td>\n<td>指定查询的表名</td>\n</tr>\n<tr>\n<td>columns</td>\n<td>select column1,column2</td>\n<td>指定查询的列名</td>\n</tr>\n<tr>\n<td>selection</td>\n<td>where column=value</td>\n<td>指定where的约束条件</td>\n</tr>\n<tr>\n<td>selectionArgs</td>\n<td>-</td>\n<td>为where中的占位符提供具体的数值</td>\n</tr>\n<tr>\n<td>groupBy</td>\n<td>group by column</td>\n<td>指定需要group by的列</td>\n</tr>\n<tr>\n<td>having</td>\n<td>having column=value</td>\n<td>对group by后的结果进一步约束</td>\n</tr>\n<tr>\n<td>orderBy</td>\n<td>order by column1, column2</td>\n<td>指定查询结果的排序方式</td>\n</tr>\n</tbody>\n</table>\n<p><code>Cursor cursor = db.query(&quot;Book&quot;, null, null, null, null, null, null);</code><br>上式查询表中所有数据</p>\n<h3 id=\"直接使用SQL语句\"><a href=\"#直接使用SQL语句\" class=\"headerlink\" title=\"直接使用SQL语句\"></a>直接使用SQL语句</h3><p>除查询之外的所有方法可以条用<code>db.execSQL(...)</code>接执行SQL语句<br>查询数据的方法时可调用它<code>db.rawQuery(...)</code>接执行SQL语句</p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyDatabaseHelper</span> <span class=\"keyword\">extends</span> <span class=\"title\">SQLiteOpenHelper</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> Context mContext;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String CREATE_BOOK=<span class=\"string\">\"create table Book (\"</span> +</div><div class=\"line\">            <span class=\"string\">\"id integer primary key autoincrement,\"</span> +</div><div class=\"line\">            <span class=\"string\">\"author text,\"</span> +</div><div class=\"line\">            <span class=\"string\">\"price real,\"</span> +</div><div class=\"line\">            <span class=\"string\">\"pages integer,\"</span> +</div><div class=\"line\">            <span class=\"string\">\"name text)\"</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MyDatabaseHelper</span><span class=\"params\">(Context context, String name, SQLiteDatabase.CursorFactory factory, <span class=\"keyword\">int</span> version)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>(context, name, factory, version);</div><div class=\"line\">        mContext=context;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(SQLiteDatabase db)</span> </span>&#123;</div><div class=\"line\">        db.execSQL(CREATE_BOOK);</div><div class=\"line\">        <span class=\"comment\">//db.execSQL(CREATE_CATEGORY);</span></div><div class=\"line\">        Toast.makeText(mContext,<span class=\"string\">\"Create succeeded\"</span>, Toast.LENGTH_SHORT).show();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onUpgrade</span><span class=\"params\">(SQLiteDatabase db, <span class=\"keyword\">int</span> oldVersion, <span class=\"keyword\">int</span> newVersion)</span> </span>&#123;</div><div class=\"line\">        db.execSQL(<span class=\"string\">\"drop table if exists Book\"</span>);</div><div class=\"line\">        db.execSQL(<span class=\"string\">\"drop table if exists Category\"</span>);</div><div class=\"line\">        onCreate(db);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">private</span> MyDatabaseHelper dbHelper;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">        setContentView(R.layout.activity_main);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//最后一个数是版本号，若版本号比原先高，则会调用  SQLiteOpenHelper中的onUpgrade()。</span></div><div class=\"line\">        dbHelper=<span class=\"keyword\">new</span> MyDatabaseHelper(<span class=\"keyword\">this</span>,<span class=\"string\">\"BookStore.db\"</span>,<span class=\"keyword\">null</span>,<span class=\"number\">5</span>);</div><div class=\"line\"></div><div class=\"line\">        Button button=(Button)findViewById(R.id.button);</div><div class=\"line\"></div><div class=\"line\">        button.setOnClickListener(<span class=\"keyword\">new</span> View.OnClickListener() &#123;</div><div class=\"line\">            <span class=\"meta\">@Override</span></div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span> </span>&#123;</div><div class=\"line\">                dbHelper.getWritableDatabase();</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;);</div><div class=\"line\"></div><div class=\"line\">        Button addData=(Button)findViewById(R.id.add_data);</div><div class=\"line\">        addData.setOnClickListener(<span class=\"keyword\">new</span> View.OnClickListener() &#123;</div><div class=\"line\">            <span class=\"meta\">@Override</span></div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span> </span>&#123;</div><div class=\"line\">                SQLiteDatabase db=dbHelper.getWritableDatabase();</div><div class=\"line\"></div><div class=\"line\">                <span class=\"comment\">//向数据库中添加数据</span></div><div class=\"line\">                ContentValues values=<span class=\"keyword\">new</span> ContentValues();</div><div class=\"line\">                values.put(<span class=\"string\">\"author\"</span>,<span class=\"string\">\"Dan Brown\"</span>);</div><div class=\"line\">                values.put(<span class=\"string\">\"name\"</span>,<span class=\"string\">\"The Da\"</span>);</div><div class=\"line\">                values.put(<span class=\"string\">\"pages\"</span>,<span class=\"number\">454</span>);</div><div class=\"line\">                values.put(<span class=\"string\">\"price\"</span>, <span class=\"number\">16.96</span>);</div><div class=\"line\">                db.insert(<span class=\"string\">\"Book\"</span>,<span class=\"keyword\">null</span>,values);</div><div class=\"line\">                values.clear();</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"},{"author":"ivyxjc","date":"2016-03-25T16:00:00.000Z","title":"跨程序共享数据","keywords":null,"description":"可以利用`getContentResolver()`获取`ContentResolver`. `ContentResolver`中提供了一系列方法用于对数据进行CRUD操作.","_content":"\n## ContentProvider\n\n通过`getContentResolver()`获取`ContentResolver`的实例，`ContentResolver`中提供了一系列方法用于对数据进行CRUD操作.\n其中\n 1.insert() 用于添加\n 2.update() 用于更新\n 3.delete() 用于删除\n 4.query()  用于查询\n\n### 内容URI及用法\n\n`ContentResolver`中的CRUD操作是不接受表名参数的，而是使用一个`Uri`参数代替。该参数被称为内容`URI`，由两部分组成：authority和path。\n内容`URI`标准写法：\n\n```\ncontent://com.example.app.provider/table1\n```\n\n需要将内容`URI`解析成`Uri`对象才可以作为参数传入\n\n```java\nUri uri=Uri.parse(\"content://com.example.app.provider/table1);\n```\n\n### 查询操作\n\n```jaav\nCursor cursor=getContentResolver().query(uri,projection,selection,selectionArgs,orderBy);\n```\n\n其它操作与之类似，也和SQLite中的操作相像。\n![](/assets/img/posts/content_provider_query.png)\n\n## 自定义ContentProvider\n\n可以`extends ContentProvider`，需要覆盖父类的6个方法.\n\n 1.`public boolean onCreate()`:初始化ContentProvider时调用，完成对数据库的创建和升级，返回true则表示ContentProvider初始化成功，返回false表示失败。**注意：只有存在`ContentResolver`尝试访问该程序中的而数据时，ContentProvider才会初始化**。\n 2.`public Cursor query(Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder)`：从ContentProvider中查询数据。使用`uri`参数来确定查询哪一张表，`projection`用于确定查询哪些列，`selection`和`selectionArgs`用来约束查询内容，`sordOreder`参数用于对结果进行排序，查询结果放在`Cursor`中返回。\n 3.`public Uri insert(Uri uri, ContentValues values)`：向`ContentProvider`中添加一条数据。\n 4.`public int delete(Uri uri, String selection, String[] selectionArgs)`：从`ContentProvider`中删除数据。\n 5.`public int update(Uri uri, ContentValues values, String selection, String[] selectionArgs)`：更新数据\n 6.`public String getType(Uri uri)`:根据传入的内容URI来返回相对应的MIME类型。\n\n一个内容URI对应的MIME字符串由三部分组成：\n 1.必须以vnd开头。\n 2.如果内容URI以路径结尾，则后街`androi.cursor.dir/`,如果内容URI以id结尾，则后接`android.cursor.item/`。\n 3.最后街上`vnd.<authority>.<path>`\n\n\n## 安全性保证\n\n因为所有的CRUD操作都一定要匹配到相应的内容URI格式才能进行，所以我们可以控制外部程序能够获得的存储内容。\n","source":"_posts/android/数据持久化/2016-03-26-content-provider.md","raw":"---\nauthor: ivyxjc\ndate: 2016-03-26\ntitle: 跨程序共享数据\ncategory: Android\ntags: [android,android_data]\nkeywords:\ndescription: 可以利用`getContentResolver()`获取`ContentResolver`. `ContentResolver`中提供了一系列方法用于对数据进行CRUD操作.\n---\n\n## ContentProvider\n\n通过`getContentResolver()`获取`ContentResolver`的实例，`ContentResolver`中提供了一系列方法用于对数据进行CRUD操作.\n其中\n 1.insert() 用于添加\n 2.update() 用于更新\n 3.delete() 用于删除\n 4.query()  用于查询\n\n### 内容URI及用法\n\n`ContentResolver`中的CRUD操作是不接受表名参数的，而是使用一个`Uri`参数代替。该参数被称为内容`URI`，由两部分组成：authority和path。\n内容`URI`标准写法：\n\n```\ncontent://com.example.app.provider/table1\n```\n\n需要将内容`URI`解析成`Uri`对象才可以作为参数传入\n\n```java\nUri uri=Uri.parse(\"content://com.example.app.provider/table1);\n```\n\n### 查询操作\n\n```jaav\nCursor cursor=getContentResolver().query(uri,projection,selection,selectionArgs,orderBy);\n```\n\n其它操作与之类似，也和SQLite中的操作相像。\n![](/assets/img/posts/content_provider_query.png)\n\n## 自定义ContentProvider\n\n可以`extends ContentProvider`，需要覆盖父类的6个方法.\n\n 1.`public boolean onCreate()`:初始化ContentProvider时调用，完成对数据库的创建和升级，返回true则表示ContentProvider初始化成功，返回false表示失败。**注意：只有存在`ContentResolver`尝试访问该程序中的而数据时，ContentProvider才会初始化**。\n 2.`public Cursor query(Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder)`：从ContentProvider中查询数据。使用`uri`参数来确定查询哪一张表，`projection`用于确定查询哪些列，`selection`和`selectionArgs`用来约束查询内容，`sordOreder`参数用于对结果进行排序，查询结果放在`Cursor`中返回。\n 3.`public Uri insert(Uri uri, ContentValues values)`：向`ContentProvider`中添加一条数据。\n 4.`public int delete(Uri uri, String selection, String[] selectionArgs)`：从`ContentProvider`中删除数据。\n 5.`public int update(Uri uri, ContentValues values, String selection, String[] selectionArgs)`：更新数据\n 6.`public String getType(Uri uri)`:根据传入的内容URI来返回相对应的MIME类型。\n\n一个内容URI对应的MIME字符串由三部分组成：\n 1.必须以vnd开头。\n 2.如果内容URI以路径结尾，则后街`androi.cursor.dir/`,如果内容URI以id结尾，则后接`android.cursor.item/`。\n 3.最后街上`vnd.<authority>.<path>`\n\n\n## 安全性保证\n\n因为所有的CRUD操作都一定要匹配到相应的内容URI格式才能进行，所以我们可以控制外部程序能够获得的存储内容。\n","slug":"android/数据持久化/2016-03-26-content-provider","published":1,"updated":"2016-10-13T13:30:45.206Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f010e001tcwjrthp89j1v","content":"<h2 id=\"ContentProvider\"><a href=\"#ContentProvider\" class=\"headerlink\" title=\"ContentProvider\"></a>ContentProvider</h2><p>通过<code>getContentResolver()</code>获取<code>ContentResolver</code>的实例，<code>ContentResolver</code>中提供了一系列方法用于对数据进行CRUD操作.<br>其中<br> 1.insert() 用于添加<br> 2.update() 用于更新<br> 3.delete() 用于删除<br> 4.query()  用于查询</p>\n<h3 id=\"内容URI及用法\"><a href=\"#内容URI及用法\" class=\"headerlink\" title=\"内容URI及用法\"></a>内容URI及用法</h3><p><code>ContentResolver</code>中的CRUD操作是不接受表名参数的，而是使用一个<code>Uri</code>参数代替。该参数被称为内容<code>URI</code>，由两部分组成：authority和path。<br>内容<code>URI</code>标准写法：</p>\n<figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"symbol\">content:</span>//<span class=\"keyword\">com</span>.example.app.provider/table1</div></pre></td></tr></table></figure>\n<p>需要将内容<code>URI</code>解析成<code>Uri</code>对象才可以作为参数传入</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Uri uri=Uri.parse(<span class=\"string\">\"content://com.example.app.provider/table1);</span></div></pre></td></tr></table></figure>\n<h3 id=\"查询操作\"><a href=\"#查询操作\" class=\"headerlink\" title=\"查询操作\"></a>查询操作</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Cursor cursor=getContentResolver().query(uri,projection,selection,selectionArgs,orderBy);</div></pre></td></tr></table></figure>\n<p>其它操作与之类似，也和SQLite中的操作相像。<br><img src=\"/assets/img/posts/content_provider_query.png\" alt=\"\"></p>\n<h2 id=\"自定义ContentProvider\"><a href=\"#自定义ContentProvider\" class=\"headerlink\" title=\"自定义ContentProvider\"></a>自定义ContentProvider</h2><p>可以<code>extends ContentProvider</code>，需要覆盖父类的6个方法.</p>\n<p> 1.<code>public boolean onCreate()</code>:初始化ContentProvider时调用，完成对数据库的创建和升级，返回true则表示ContentProvider初始化成功，返回false表示失败。<strong>注意：只有存在<code>ContentResolver</code>尝试访问该程序中的而数据时，ContentProvider才会初始化</strong>。<br> 2.<code>public Cursor query(Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder)</code>：从ContentProvider中查询数据。使用<code>uri</code>参数来确定查询哪一张表，<code>projection</code>用于确定查询哪些列，<code>selection</code>和<code>selectionArgs</code>用来约束查询内容，<code>sordOreder</code>参数用于对结果进行排序，查询结果放在<code>Cursor</code>中返回。<br> 3.<code>public Uri insert(Uri uri, ContentValues values)</code>：向<code>ContentProvider</code>中添加一条数据。<br> 4.<code>public int delete(Uri uri, String selection, String[] selectionArgs)</code>：从<code>ContentProvider</code>中删除数据。<br> 5.<code>public int update(Uri uri, ContentValues values, String selection, String[] selectionArgs)</code>：更新数据<br> 6.<code>public String getType(Uri uri)</code>:根据传入的内容URI来返回相对应的MIME类型。</p>\n<p>一个内容URI对应的MIME字符串由三部分组成：<br> 1.必须以vnd开头。<br> 2.如果内容URI以路径结尾，则后街<code>androi.cursor.dir/</code>,如果内容URI以id结尾，则后接<code>android.cursor.item/</code>。<br> 3.最后街上<code>vnd.&lt;authority&gt;.&lt;path&gt;</code></p>\n<h2 id=\"安全性保证\"><a href=\"#安全性保证\" class=\"headerlink\" title=\"安全性保证\"></a>安全性保证</h2><p>因为所有的CRUD操作都一定要匹配到相应的内容URI格式才能进行，所以我们可以控制外部程序能够获得的存储内容。</p>\n","excerpt":"","more":"<h2 id=\"ContentProvider\"><a href=\"#ContentProvider\" class=\"headerlink\" title=\"ContentProvider\"></a>ContentProvider</h2><p>通过<code>getContentResolver()</code>获取<code>ContentResolver</code>的实例，<code>ContentResolver</code>中提供了一系列方法用于对数据进行CRUD操作.<br>其中<br> 1.insert() 用于添加<br> 2.update() 用于更新<br> 3.delete() 用于删除<br> 4.query()  用于查询</p>\n<h3 id=\"内容URI及用法\"><a href=\"#内容URI及用法\" class=\"headerlink\" title=\"内容URI及用法\"></a>内容URI及用法</h3><p><code>ContentResolver</code>中的CRUD操作是不接受表名参数的，而是使用一个<code>Uri</code>参数代替。该参数被称为内容<code>URI</code>，由两部分组成：authority和path。<br>内容<code>URI</code>标准写法：</p>\n<figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"symbol\">content:</span>//<span class=\"keyword\">com</span>.example.app.provider/table1</div></pre></td></tr></table></figure>\n<p>需要将内容<code>URI</code>解析成<code>Uri</code>对象才可以作为参数传入</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Uri uri=Uri.parse(<span class=\"string\">\"content://com.example.app.provider/table1);</span></div></pre></td></tr></table></figure>\n<h3 id=\"查询操作\"><a href=\"#查询操作\" class=\"headerlink\" title=\"查询操作\"></a>查询操作</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Cursor cursor=getContentResolver().query(uri,projection,selection,selectionArgs,orderBy);</div></pre></td></tr></table></figure>\n<p>其它操作与之类似，也和SQLite中的操作相像。<br><img src=\"/assets/img/posts/content_provider_query.png\" alt=\"\"></p>\n<h2 id=\"自定义ContentProvider\"><a href=\"#自定义ContentProvider\" class=\"headerlink\" title=\"自定义ContentProvider\"></a>自定义ContentProvider</h2><p>可以<code>extends ContentProvider</code>，需要覆盖父类的6个方法.</p>\n<p> 1.<code>public boolean onCreate()</code>:初始化ContentProvider时调用，完成对数据库的创建和升级，返回true则表示ContentProvider初始化成功，返回false表示失败。<strong>注意：只有存在<code>ContentResolver</code>尝试访问该程序中的而数据时，ContentProvider才会初始化</strong>。<br> 2.<code>public Cursor query(Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder)</code>：从ContentProvider中查询数据。使用<code>uri</code>参数来确定查询哪一张表，<code>projection</code>用于确定查询哪些列，<code>selection</code>和<code>selectionArgs</code>用来约束查询内容，<code>sordOreder</code>参数用于对结果进行排序，查询结果放在<code>Cursor</code>中返回。<br> 3.<code>public Uri insert(Uri uri, ContentValues values)</code>：向<code>ContentProvider</code>中添加一条数据。<br> 4.<code>public int delete(Uri uri, String selection, String[] selectionArgs)</code>：从<code>ContentProvider</code>中删除数据。<br> 5.<code>public int update(Uri uri, ContentValues values, String selection, String[] selectionArgs)</code>：更新数据<br> 6.<code>public String getType(Uri uri)</code>:根据传入的内容URI来返回相对应的MIME类型。</p>\n<p>一个内容URI对应的MIME字符串由三部分组成：<br> 1.必须以vnd开头。<br> 2.如果内容URI以路径结尾，则后街<code>androi.cursor.dir/</code>,如果内容URI以id结尾，则后接<code>android.cursor.item/</code>。<br> 3.最后街上<code>vnd.&lt;authority&gt;.&lt;path&gt;</code></p>\n<h2 id=\"安全性保证\"><a href=\"#安全性保证\" class=\"headerlink\" title=\"安全性保证\"></a>安全性保证</h2><p>因为所有的CRUD操作都一定要匹配到相应的内容URI格式才能进行，所以我们可以控制外部程序能够获得的存储内容。</p>\n"},{"author":"ivyxjc","date":"2016-05-12T16:00:00.000Z","title":"Volley的介绍和一些相关用法","keywords":null,"description":"Volley库可以非常方便得进行网络操作.","_content":"\n## Use newRequestQueue和发送Request\n\n使用`RequestQueue`并向其中传递`Request`对象可以.`RequestQueue`管理和网络操作相关的一些线程,b\n\n```java\n// Instantiate the RequestQueue.\nRequestQueue queue = Volley.newRequestQueue(this);\nString url =\"http://www.google.com\";\n\n// Request a string response from the provided URL.\nStringRequest stringRequest = new StringRequest(Request.Method.GET, url,\n            new Response.Listener<String>() {\n    @Override\n    public void onResponse(String response) {\n        // Display the first 500 characters of the response string.\n        mTextView.setText(\"Response is: \"+ response.substring(0,500));\n    }\n}, new Response.ErrorListener() {\n    @Override\n    public void onErrorResponse(VolleyError error) {\n        mTextView.setText(\"That didn't work!\");\n    }\n});\n// Add the request to the RequestQueue.\nqueue.add(stringRequest);\n```\n\n## 取消一个Request\n\n可以使用`cacel`方法取消一个Request,防止其总是在连接网络.\n\n所以常在`onStop()`方法中调用`cancel`相关方法.\n\n```\nublic static final String TAG = \"MyTag\";\nStringRequest stringRequest; // Assume this exists.\nRequestQueue mRequestQueue;  // Assume this exists.\n\n// Set the tag on the request.\nstringRequest.setTag(TAG);\n\n// Add the request to the RequestQueue.\nmRequestQueue.add(stringRequest);\n```\n\n```java\n@Override\nprotected void onStop () {\n    super.onStop();\n    if (mRequestQueue != null) {\n        mRequestQueue.cancelAll(TAG);\n    }\n}\n```\n","source":"_posts/android/第三方库/2016-05-13-volley.md","raw":"---\nauthor: ivyxjc\ndate: 2016-05-13\ntitle: Volley的介绍和一些相关用法\ncategory: Android\ntags: [android,volley]\nkeywords:\ndescription: Volley库可以非常方便得进行网络操作.\n---\n\n## Use newRequestQueue和发送Request\n\n使用`RequestQueue`并向其中传递`Request`对象可以.`RequestQueue`管理和网络操作相关的一些线程,b\n\n```java\n// Instantiate the RequestQueue.\nRequestQueue queue = Volley.newRequestQueue(this);\nString url =\"http://www.google.com\";\n\n// Request a string response from the provided URL.\nStringRequest stringRequest = new StringRequest(Request.Method.GET, url,\n            new Response.Listener<String>() {\n    @Override\n    public void onResponse(String response) {\n        // Display the first 500 characters of the response string.\n        mTextView.setText(\"Response is: \"+ response.substring(0,500));\n    }\n}, new Response.ErrorListener() {\n    @Override\n    public void onErrorResponse(VolleyError error) {\n        mTextView.setText(\"That didn't work!\");\n    }\n});\n// Add the request to the RequestQueue.\nqueue.add(stringRequest);\n```\n\n## 取消一个Request\n\n可以使用`cacel`方法取消一个Request,防止其总是在连接网络.\n\n所以常在`onStop()`方法中调用`cancel`相关方法.\n\n```\nublic static final String TAG = \"MyTag\";\nStringRequest stringRequest; // Assume this exists.\nRequestQueue mRequestQueue;  // Assume this exists.\n\n// Set the tag on the request.\nstringRequest.setTag(TAG);\n\n// Add the request to the RequestQueue.\nmRequestQueue.add(stringRequest);\n```\n\n```java\n@Override\nprotected void onStop () {\n    super.onStop();\n    if (mRequestQueue != null) {\n        mRequestQueue.cancelAll(TAG);\n    }\n}\n```\n","slug":"android/第三方库/2016-05-13-volley","published":1,"updated":"2016-10-13T06:39:25.706Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f010m001xcwjrtpzhoo8g","content":"<h2 id=\"Use-newRequestQueue和发送Request\"><a href=\"#Use-newRequestQueue和发送Request\" class=\"headerlink\" title=\"Use newRequestQueue和发送Request\"></a>Use newRequestQueue和发送Request</h2><p>使用<code>RequestQueue</code>并向其中传递<code>Request</code>对象可以.<code>RequestQueue</code>管理和网络操作相关的一些线程,b</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// Instantiate the RequestQueue.</span></div><div class=\"line\">RequestQueue queue = Volley.newRequestQueue(<span class=\"keyword\">this</span>);</div><div class=\"line\">String url =<span class=\"string\">\"http://www.google.com\"</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// Request a string response from the provided URL.</span></div><div class=\"line\">StringRequest stringRequest = <span class=\"keyword\">new</span> StringRequest(Request.Method.GET, url,</div><div class=\"line\">            <span class=\"keyword\">new</span> Response.Listener&lt;String&gt;() &#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onResponse</span><span class=\"params\">(String response)</span> </span>&#123;</div><div class=\"line\">        <span class=\"comment\">// Display the first 500 characters of the response string.</span></div><div class=\"line\">        mTextView.setText(<span class=\"string\">\"Response is: \"</span>+ response.substring(<span class=\"number\">0</span>,<span class=\"number\">500</span>));</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;, <span class=\"keyword\">new</span> Response.ErrorListener() &#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onErrorResponse</span><span class=\"params\">(VolleyError error)</span> </span>&#123;</div><div class=\"line\">        mTextView.setText(<span class=\"string\">\"That didn't work!\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;);</div><div class=\"line\"><span class=\"comment\">// Add the request to the RequestQueue.</span></div><div class=\"line\">queue.add(stringRequest);</div></pre></td></tr></table></figure>\n<h2 id=\"取消一个Request\"><a href=\"#取消一个Request\" class=\"headerlink\" title=\"取消一个Request\"></a>取消一个Request</h2><p>可以使用<code>cacel</code>方法取消一个Request,防止其总是在连接网络.</p>\n<p>所以常在<code>onStop()</code>方法中调用<code>cancel</code>相关方法.</p>\n<figure class=\"highlight processing\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">ublic <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">String</span> TAG = <span class=\"string\">\"MyTag\"</span>;</div><div class=\"line\">StringRequest stringRequest; <span class=\"comment\">// Assume this exists.</span></div><div class=\"line\">RequestQueue mRequestQueue;  <span class=\"comment\">// Assume this exists.</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// Set the tag on the request.</span></div><div class=\"line\">stringRequest.setTag(TAG);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// Add the request to the RequestQueue.</span></div><div class=\"line\">mRequestQueue.<span class=\"built_in\">add</span>(stringRequest);</div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Override</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onStop</span> <span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">super</span>.onStop();</div><div class=\"line\">    <span class=\"keyword\">if</span> (mRequestQueue != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">        mRequestQueue.cancelAll(TAG);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h2 id=\"Use-newRequestQueue和发送Request\"><a href=\"#Use-newRequestQueue和发送Request\" class=\"headerlink\" title=\"Use newRequestQueue和发送Request\"></a>Use newRequestQueue和发送Request</h2><p>使用<code>RequestQueue</code>并向其中传递<code>Request</code>对象可以.<code>RequestQueue</code>管理和网络操作相关的一些线程,b</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// Instantiate the RequestQueue.</span></div><div class=\"line\">RequestQueue queue = Volley.newRequestQueue(<span class=\"keyword\">this</span>);</div><div class=\"line\">String url =<span class=\"string\">\"http://www.google.com\"</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// Request a string response from the provided URL.</span></div><div class=\"line\">StringRequest stringRequest = <span class=\"keyword\">new</span> StringRequest(Request.Method.GET, url,</div><div class=\"line\">            <span class=\"keyword\">new</span> Response.Listener&lt;String&gt;() &#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onResponse</span><span class=\"params\">(String response)</span> </span>&#123;</div><div class=\"line\">        <span class=\"comment\">// Display the first 500 characters of the response string.</span></div><div class=\"line\">        mTextView.setText(<span class=\"string\">\"Response is: \"</span>+ response.substring(<span class=\"number\">0</span>,<span class=\"number\">500</span>));</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;, <span class=\"keyword\">new</span> Response.ErrorListener() &#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onErrorResponse</span><span class=\"params\">(VolleyError error)</span> </span>&#123;</div><div class=\"line\">        mTextView.setText(<span class=\"string\">\"That didn't work!\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;);</div><div class=\"line\"><span class=\"comment\">// Add the request to the RequestQueue.</span></div><div class=\"line\">queue.add(stringRequest);</div></pre></td></tr></table></figure>\n<h2 id=\"取消一个Request\"><a href=\"#取消一个Request\" class=\"headerlink\" title=\"取消一个Request\"></a>取消一个Request</h2><p>可以使用<code>cacel</code>方法取消一个Request,防止其总是在连接网络.</p>\n<p>所以常在<code>onStop()</code>方法中调用<code>cancel</code>相关方法.</p>\n<figure class=\"highlight processing\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">ublic <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">String</span> TAG = <span class=\"string\">\"MyTag\"</span>;</div><div class=\"line\">StringRequest stringRequest; <span class=\"comment\">// Assume this exists.</span></div><div class=\"line\">RequestQueue mRequestQueue;  <span class=\"comment\">// Assume this exists.</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// Set the tag on the request.</span></div><div class=\"line\">stringRequest.setTag(TAG);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// Add the request to the RequestQueue.</span></div><div class=\"line\">mRequestQueue.<span class=\"built_in\">add</span>(stringRequest);</div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Override</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onStop</span> <span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">super</span>.onStop();</div><div class=\"line\">    <span class=\"keyword\">if</span> (mRequestQueue != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">        mRequestQueue.cancelAll(TAG);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"},{"author":"ivyxjc","date":"2016-10-03T16:00:00.000Z","title":"matplot basic","keywords":null,"description":"matplotlib是一个常见的绘图库. 本文介绍如何使用matplotlib 绘制2d散点图, 3d散点图.","_content":"\n\n\n## 2d散点图\n\n```python\n#设置颜色\ncolors = ['#0000FF','#3CB371']\n#各点大小的list\nsizeLab=np.add(sizeLab,20)\n# print(sizeLab)\n\n#设置横轴上下限\nplt.xlim(0,25)\n\n#设置横轴标号\n# plt.xticks(np.linspace(0,15,5,endpoint=True))\n\n#设置记号的标签\nplt.xticks([2*np.pi, 4*np.pi, 0, np.pi/2, np.pi],\n       [r'$2\\pi$', r'$4\\pi$', r'$0$', r'$\\pi/2$', r'$\\pi$'])\n\n#设置横纵坐标label\nplt.xlabel(\"x 轴label\")\nplt.ylabel(\"y 轴label\")\n\n\nplt.scatter(datingDataMat[:,1],datingDataMat[:,2],s=sizeLab, c=colors)\nplt.show()\n```\n\n## 3d散点图\n\n```python\nfig=plt.figure()\nax=fig.add_subplot(111,projection='3d')\n\n#设置坐标\nax.set_xlabel(\"飞行里程数\")\nax.set_ylabel(\"游戏时间百分比\")\nax.set_zlabel(\"冰激凌消耗量\")\n\ntype1=ax.scatter(dataDidnlike[:,0], dataDidnlike[:,1], dataDidnlike[:,2], c='#3c345b')\ntype2=ax.scatter(dataSmallDoses[:,0], dataSmallDoses[:,1],dataSmallDoses[:,2],c=\"#4576f7\")\ntype3=ax.scatter(dataLargeDoses[:,0], dataLargeDoses[:,1], dataLargeDoses[:,2],c=\"#43ff1a\")\n\n#设置图例\nax.legend((type1, type2, type3), (u'不喜欢', u'魅力一般', u'极具魅力'), loc=2)\n\nplt.show()\n```\n","source":"_posts/python/matplotlib/2016-10-04-matplotlib-basic.md","raw":"---\nauthor: ivyxjc\ndate: 2016-10-04\ntitle: matplot basic\ncategory: Python\ntags: [python,matplotlib]\nkeywords:\ndescription: matplotlib是一个常见的绘图库. 本文介绍如何使用matplotlib 绘制2d散点图, 3d散点图.\n---\n\n\n\n## 2d散点图\n\n```python\n#设置颜色\ncolors = ['#0000FF','#3CB371']\n#各点大小的list\nsizeLab=np.add(sizeLab,20)\n# print(sizeLab)\n\n#设置横轴上下限\nplt.xlim(0,25)\n\n#设置横轴标号\n# plt.xticks(np.linspace(0,15,5,endpoint=True))\n\n#设置记号的标签\nplt.xticks([2*np.pi, 4*np.pi, 0, np.pi/2, np.pi],\n       [r'$2\\pi$', r'$4\\pi$', r'$0$', r'$\\pi/2$', r'$\\pi$'])\n\n#设置横纵坐标label\nplt.xlabel(\"x 轴label\")\nplt.ylabel(\"y 轴label\")\n\n\nplt.scatter(datingDataMat[:,1],datingDataMat[:,2],s=sizeLab, c=colors)\nplt.show()\n```\n\n## 3d散点图\n\n```python\nfig=plt.figure()\nax=fig.add_subplot(111,projection='3d')\n\n#设置坐标\nax.set_xlabel(\"飞行里程数\")\nax.set_ylabel(\"游戏时间百分比\")\nax.set_zlabel(\"冰激凌消耗量\")\n\ntype1=ax.scatter(dataDidnlike[:,0], dataDidnlike[:,1], dataDidnlike[:,2], c='#3c345b')\ntype2=ax.scatter(dataSmallDoses[:,0], dataSmallDoses[:,1],dataSmallDoses[:,2],c=\"#4576f7\")\ntype3=ax.scatter(dataLargeDoses[:,0], dataLargeDoses[:,1], dataLargeDoses[:,2],c=\"#43ff1a\")\n\n#设置图例\nax.legend((type1, type2, type3), (u'不喜欢', u'魅力一般', u'极具魅力'), loc=2)\n\nplt.show()\n```\n","slug":"python/matplotlib/2016-10-04-matplotlib-basic","published":1,"updated":"2016-10-13T13:31:46.511Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f010n001zcwjrirw000pm","content":"<h2 id=\"2d散点图\"><a href=\"#2d散点图\" class=\"headerlink\" title=\"2d散点图\"></a>2d散点图</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#设置颜色</span></div><div class=\"line\">colors = [<span class=\"string\">'#0000FF'</span>,<span class=\"string\">'#3CB371'</span>]</div><div class=\"line\"><span class=\"comment\">#各点大小的list</span></div><div class=\"line\">sizeLab=np.add(sizeLab,<span class=\"number\">20</span>)</div><div class=\"line\"><span class=\"comment\"># print(sizeLab)</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#设置横轴上下限</span></div><div class=\"line\">plt.xlim(<span class=\"number\">0</span>,<span class=\"number\">25</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#设置横轴标号</span></div><div class=\"line\"><span class=\"comment\"># plt.xticks(np.linspace(0,15,5,endpoint=True))</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#设置记号的标签</span></div><div class=\"line\">plt.xticks([<span class=\"number\">2</span>*np.pi, <span class=\"number\">4</span>*np.pi, <span class=\"number\">0</span>, np.pi/<span class=\"number\">2</span>, np.pi],</div><div class=\"line\">       [<span class=\"string\">r'$2\\pi$'</span>, <span class=\"string\">r'$4\\pi$'</span>, <span class=\"string\">r'$0$'</span>, <span class=\"string\">r'$\\pi/2$'</span>, <span class=\"string\">r'$\\pi$'</span>])</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#设置横纵坐标label</span></div><div class=\"line\">plt.xlabel(<span class=\"string\">\"x 轴label\"</span>)</div><div class=\"line\">plt.ylabel(<span class=\"string\">\"y 轴label\"</span>)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">plt.scatter(datingDataMat[:,<span class=\"number\">1</span>],datingDataMat[:,<span class=\"number\">2</span>],s=sizeLab, c=colors)</div><div class=\"line\">plt.show()</div></pre></td></tr></table></figure>\n<h2 id=\"3d散点图\"><a href=\"#3d散点图\" class=\"headerlink\" title=\"3d散点图\"></a>3d散点图</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">fig=plt.figure()</div><div class=\"line\">ax=fig.add_subplot(<span class=\"number\">111</span>,projection=<span class=\"string\">'3d'</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#设置坐标</span></div><div class=\"line\">ax.set_xlabel(<span class=\"string\">\"飞行里程数\"</span>)</div><div class=\"line\">ax.set_ylabel(<span class=\"string\">\"游戏时间百分比\"</span>)</div><div class=\"line\">ax.set_zlabel(<span class=\"string\">\"冰激凌消耗量\"</span>)</div><div class=\"line\"></div><div class=\"line\">type1=ax.scatter(dataDidnlike[:,<span class=\"number\">0</span>], dataDidnlike[:,<span class=\"number\">1</span>], dataDidnlike[:,<span class=\"number\">2</span>], c=<span class=\"string\">'#3c345b'</span>)</div><div class=\"line\">type2=ax.scatter(dataSmallDoses[:,<span class=\"number\">0</span>], dataSmallDoses[:,<span class=\"number\">1</span>],dataSmallDoses[:,<span class=\"number\">2</span>],c=<span class=\"string\">\"#4576f7\"</span>)</div><div class=\"line\">type3=ax.scatter(dataLargeDoses[:,<span class=\"number\">0</span>], dataLargeDoses[:,<span class=\"number\">1</span>], dataLargeDoses[:,<span class=\"number\">2</span>],c=<span class=\"string\">\"#43ff1a\"</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#设置图例</span></div><div class=\"line\">ax.legend((type1, type2, type3), (<span class=\"string\">u'不喜欢'</span>, <span class=\"string\">u'魅力一般'</span>, <span class=\"string\">u'极具魅力'</span>), loc=<span class=\"number\">2</span>)</div><div class=\"line\"></div><div class=\"line\">plt.show()</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h2 id=\"2d散点图\"><a href=\"#2d散点图\" class=\"headerlink\" title=\"2d散点图\"></a>2d散点图</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#设置颜色</span></div><div class=\"line\">colors = [<span class=\"string\">'#0000FF'</span>,<span class=\"string\">'#3CB371'</span>]</div><div class=\"line\"><span class=\"comment\">#各点大小的list</span></div><div class=\"line\">sizeLab=np.add(sizeLab,<span class=\"number\">20</span>)</div><div class=\"line\"><span class=\"comment\"># print(sizeLab)</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#设置横轴上下限</span></div><div class=\"line\">plt.xlim(<span class=\"number\">0</span>,<span class=\"number\">25</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#设置横轴标号</span></div><div class=\"line\"><span class=\"comment\"># plt.xticks(np.linspace(0,15,5,endpoint=True))</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#设置记号的标签</span></div><div class=\"line\">plt.xticks([<span class=\"number\">2</span>*np.pi, <span class=\"number\">4</span>*np.pi, <span class=\"number\">0</span>, np.pi/<span class=\"number\">2</span>, np.pi],</div><div class=\"line\">       [<span class=\"string\">r'$2\\pi$'</span>, <span class=\"string\">r'$4\\pi$'</span>, <span class=\"string\">r'$0$'</span>, <span class=\"string\">r'$\\pi/2$'</span>, <span class=\"string\">r'$\\pi$'</span>])</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#设置横纵坐标label</span></div><div class=\"line\">plt.xlabel(<span class=\"string\">\"x 轴label\"</span>)</div><div class=\"line\">plt.ylabel(<span class=\"string\">\"y 轴label\"</span>)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">plt.scatter(datingDataMat[:,<span class=\"number\">1</span>],datingDataMat[:,<span class=\"number\">2</span>],s=sizeLab, c=colors)</div><div class=\"line\">plt.show()</div></pre></td></tr></table></figure>\n<h2 id=\"3d散点图\"><a href=\"#3d散点图\" class=\"headerlink\" title=\"3d散点图\"></a>3d散点图</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">fig=plt.figure()</div><div class=\"line\">ax=fig.add_subplot(<span class=\"number\">111</span>,projection=<span class=\"string\">'3d'</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#设置坐标</span></div><div class=\"line\">ax.set_xlabel(<span class=\"string\">\"飞行里程数\"</span>)</div><div class=\"line\">ax.set_ylabel(<span class=\"string\">\"游戏时间百分比\"</span>)</div><div class=\"line\">ax.set_zlabel(<span class=\"string\">\"冰激凌消耗量\"</span>)</div><div class=\"line\"></div><div class=\"line\">type1=ax.scatter(dataDidnlike[:,<span class=\"number\">0</span>], dataDidnlike[:,<span class=\"number\">1</span>], dataDidnlike[:,<span class=\"number\">2</span>], c=<span class=\"string\">'#3c345b'</span>)</div><div class=\"line\">type2=ax.scatter(dataSmallDoses[:,<span class=\"number\">0</span>], dataSmallDoses[:,<span class=\"number\">1</span>],dataSmallDoses[:,<span class=\"number\">2</span>],c=<span class=\"string\">\"#4576f7\"</span>)</div><div class=\"line\">type3=ax.scatter(dataLargeDoses[:,<span class=\"number\">0</span>], dataLargeDoses[:,<span class=\"number\">1</span>], dataLargeDoses[:,<span class=\"number\">2</span>],c=<span class=\"string\">\"#43ff1a\"</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#设置图例</span></div><div class=\"line\">ax.legend((type1, type2, type3), (<span class=\"string\">u'不喜欢'</span>, <span class=\"string\">u'魅力一般'</span>, <span class=\"string\">u'极具魅力'</span>), loc=<span class=\"number\">2</span>)</div><div class=\"line\"></div><div class=\"line\">plt.show()</div></pre></td></tr></table></figure>\n"},{"author":"ivyxjc","date":"2016-03-31T16:00:00.000Z","title":"虚拟机环境搭建和相关问题解决","keywords":null,"description":null,"_content":"\n## 安装pip\n\n```\nsudo apt-get remove pip\nwget .../get-pip.py\npython get-pip.py\n```\n\n\n## 安装scrapy\n安装scrapy出现`Python.h No such file...`\n\n```\nsudo apt-get install python3-dev\n```\n\n\n若出现`failed to build wheel for Cryptography`\n\n```\nsudo apt-get install build-essential libssl-dev libffi-dev python-dev\n```\n\n## 安装pycharm\n\n进入pycharm文件内\n\n```\n./pycharm.sh\n```\n\n\n```\nsudo gedit /usr/share/applications/Pycharm.desktop\n然后输入\n[Desktop Entry]\nType=Application\nName=Pycharm\nGenericName=Pycharm3\nComment=Pycharm3:The Python IDE\nExec=\"/XXX/pycharm-community-3.4.1/bin/pycharm.sh\" %f\nIcon=/XXX/pycharm-community-3.4.1/bin/pycharm.png\nTerminal=pycharm\nCategories=Pycharm;\n```\n\n然后进入`/usr/share/applications/`双击打开即可。\n\n\n\n\n## VMware和主机共享文件夹\n\n\n\n\n```bash\nsudo apt-get install open-vm-tools-dkms\n```\n\n\n```\nsudo gksu gedit/etc/fstab\n```\n","source":"_posts/效率/Python相关问题/2016-04-01-Linux-python-env-tips.md","raw":"---\nauthor: ivyxjc\ndate: 2016-04-01\ntitle: 虚拟机环境搭建和相关问题解决\ncategory: 效率\ntags: [faq,python,spider,bs4]\nkeywords:\ndescription:\n---\n\n## 安装pip\n\n```\nsudo apt-get remove pip\nwget .../get-pip.py\npython get-pip.py\n```\n\n\n## 安装scrapy\n安装scrapy出现`Python.h No such file...`\n\n```\nsudo apt-get install python3-dev\n```\n\n\n若出现`failed to build wheel for Cryptography`\n\n```\nsudo apt-get install build-essential libssl-dev libffi-dev python-dev\n```\n\n## 安装pycharm\n\n进入pycharm文件内\n\n```\n./pycharm.sh\n```\n\n\n```\nsudo gedit /usr/share/applications/Pycharm.desktop\n然后输入\n[Desktop Entry]\nType=Application\nName=Pycharm\nGenericName=Pycharm3\nComment=Pycharm3:The Python IDE\nExec=\"/XXX/pycharm-community-3.4.1/bin/pycharm.sh\" %f\nIcon=/XXX/pycharm-community-3.4.1/bin/pycharm.png\nTerminal=pycharm\nCategories=Pycharm;\n```\n\n然后进入`/usr/share/applications/`双击打开即可。\n\n\n\n\n## VMware和主机共享文件夹\n\n\n\n\n```bash\nsudo apt-get install open-vm-tools-dkms\n```\n\n\n```\nsudo gksu gedit/etc/fstab\n```\n","slug":"效率/Python相关问题/2016-04-01-Linux-python-env-tips","published":1,"updated":"2016-10-13T06:34:38.611Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f010p0022cwjribyugsh7","content":"<h2 id=\"安装pip\"><a href=\"#安装pip\" class=\"headerlink\" title=\"安装pip\"></a>安装pip</h2><figure class=\"highlight dsconfig\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">sudo </span><span class=\"string\">apt-get </span><span class=\"string\">remove </span><span class=\"string\">pip</span></div><div class=\"line\"><span class=\"string\">wget </span>.../<span class=\"built_in\">get-pip.py</span></div><div class=\"line\"><span class=\"string\">python </span><span class=\"built_in\">get-pip.py</span></div></pre></td></tr></table></figure>\n<h2 id=\"安装scrapy\"><a href=\"#安装scrapy\" class=\"headerlink\" title=\"安装scrapy\"></a>安装scrapy</h2><p>安装scrapy出现<code>Python.h No such file...</code></p>\n<figure class=\"highlight q\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-<span class=\"built_in\">get</span> install python3-<span class=\"built_in\">dev</span></div></pre></td></tr></table></figure>\n<p>若出现<code>failed to build wheel for Cryptography</code></p>\n<figure class=\"highlight q\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-<span class=\"built_in\">get</span> install build-essential libssl-<span class=\"built_in\">dev</span> libffi-<span class=\"built_in\">dev</span> python-<span class=\"built_in\">dev</span></div></pre></td></tr></table></figure>\n<h2 id=\"安装pycharm\"><a href=\"#安装pycharm\" class=\"headerlink\" title=\"安装pycharm\"></a>安装pycharm</h2><p>进入pycharm文件内</p>\n<figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">./pycharm.<span class=\"keyword\">sh</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight protobuf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo gedit /usr/share/applications/Pycharm.desktop</div><div class=\"line\">然后输入</div><div class=\"line\">[Desktop Entry]</div><div class=\"line\">Type=Application</div><div class=\"line\">Name=Pycharm</div><div class=\"line\">GenericName=Pycharm3</div><div class=\"line\">Comment=Pycharm3:The Python IDE</div><div class=\"line\">Exec=<span class=\"string\">\"/XXX/pycharm-community-3.4.1/bin/pycharm.sh\"</span> %f</div><div class=\"line\">Icon=/XXX/pycharm-community-<span class=\"number\">3.4</span>.<span class=\"number\">1</span>/bin/pycharm.png</div><div class=\"line\">Terminal=pycharm</div><div class=\"line\">Categories=Pycharm;</div></pre></td></tr></table></figure>\n<p>然后进入<code>/usr/share/applications/</code>双击打开即可。</p>\n<h2 id=\"VMware和主机共享文件夹\"><a href=\"#VMware和主机共享文件夹\" class=\"headerlink\" title=\"VMware和主机共享文件夹\"></a>VMware和主机共享文件夹</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install open-vm-tools-dkms</div></pre></td></tr></table></figure>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo gksu gedit<span class=\"regexp\">/etc/</span>fstab</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h2 id=\"安装pip\"><a href=\"#安装pip\" class=\"headerlink\" title=\"安装pip\"></a>安装pip</h2><figure class=\"highlight dsconfig\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">sudo </span><span class=\"string\">apt-get </span><span class=\"string\">remove </span><span class=\"string\">pip</div><div class=\"line\"></span><span class=\"string\">wget </span>.../<span class=\"built_in\">get-pip.py</span></div><div class=\"line\"><span class=\"string\">python </span><span class=\"built_in\">get-pip.py</span></div></pre></td></tr></table></figure>\n<h2 id=\"安装scrapy\"><a href=\"#安装scrapy\" class=\"headerlink\" title=\"安装scrapy\"></a>安装scrapy</h2><p>安装scrapy出现<code>Python.h No such file...</code></p>\n<figure class=\"highlight q\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-<span class=\"built_in\">get</span> install python3-<span class=\"built_in\">dev</span></div></pre></td></tr></table></figure>\n<p>若出现<code>failed to build wheel for Cryptography</code></p>\n<figure class=\"highlight q\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-<span class=\"built_in\">get</span> install build-essential libssl-<span class=\"built_in\">dev</span> libffi-<span class=\"built_in\">dev</span> python-<span class=\"built_in\">dev</span></div></pre></td></tr></table></figure>\n<h2 id=\"安装pycharm\"><a href=\"#安装pycharm\" class=\"headerlink\" title=\"安装pycharm\"></a>安装pycharm</h2><p>进入pycharm文件内</p>\n<figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">./pycharm.<span class=\"keyword\">sh</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight protobuf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo gedit /usr/share/applications/Pycharm.desktop</div><div class=\"line\">然后输入</div><div class=\"line\">[Desktop Entry]</div><div class=\"line\">Type=Application</div><div class=\"line\">Name=Pycharm</div><div class=\"line\">GenericName=Pycharm3</div><div class=\"line\">Comment=Pycharm3:The Python IDE</div><div class=\"line\">Exec=<span class=\"string\">\"/XXX/pycharm-community-3.4.1/bin/pycharm.sh\"</span> %f</div><div class=\"line\">Icon=/XXX/pycharm-community-<span class=\"number\">3.4</span>.<span class=\"number\">1</span>/bin/pycharm.png</div><div class=\"line\">Terminal=pycharm</div><div class=\"line\">Categories=Pycharm;</div></pre></td></tr></table></figure>\n<p>然后进入<code>/usr/share/applications/</code>双击打开即可。</p>\n<h2 id=\"VMware和主机共享文件夹\"><a href=\"#VMware和主机共享文件夹\" class=\"headerlink\" title=\"VMware和主机共享文件夹\"></a>VMware和主机共享文件夹</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install open-vm-tools-dkms</div></pre></td></tr></table></figure>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo gksu gedit<span class=\"regexp\">/etc/</span>fstab</div></pre></td></tr></table></figure>\n"},{"author":"ivyxjc","date":"2016-10-03T16:00:00.000Z","title":"numpy user guide","keywords":null,"description":"numpy是常见的科学计算库. 本文介绍numpy库的一些常见操作,例如numpy.tile(A, reprs), numpy.sum(), axis,  dtye等相关知识.","_content":"\n## numpy.tile(A,reprs)\n[numpy.tile](http://docs.scipy.org/doc/numpy/reference/generated/numpy.tile.html)\n\n` numpy.tile(A, reps)`\n\nThis method will return a `max( d, A.ndim) ` dimension array( `d= len( reprs) `).\n\nif`d> A.ndim`, it will return a d-dimension array by prepending new axes;<br>\netc.\n\n```python\n>>>a = np.array([[1,2,3],[1,2,3]])\n>>>np.tile(a,(2,3,2))\n\n[[[1 2 3 1 2 3]\n  [1 2 3 1 2 3]\n  [1 2 3 1 2 3]\n  [1 2 3 1 2 3]\n  [1 2 3 1 2 3]\n  [1 2 3 1 2 3]]\n\n [[1 2 3 1 2 3]\n  [1 2 3 1 2 3]\n  [1 2 3 1 2 3]\n  [1 2 3 1 2 3]\n  [1 2 3 1 2 3]\n  [1 2 3 1 2 3]]]\n```\n\nif `d< A.ndim`, it will return an A.ndim-dimension array by prepending 1's to it .\nFor example, for an shape of(1,2,2,3), a reps of (2,3) will be treated as (1,1,2,3)\n\n```python\n>>>a = np.array([[[[1,2,3],[1,2,3]]]])\n>>>np.tile(a,(2,2))\n\n[[[[1 2 3 1 2 3]\n   [1 2 3 1 2 3]\n   [1 2 3 1 2 3]\n   [1 2 3 1 2 3]]]]\n\n>>>a = np.array([[[[1,2,3],[1,2,3]]]])\n>>>np.tile(a,(2,1,3))\n\n[[[[1 2 3 1 2 3 1 2 3]\n   [1 2 3 1 2 3 1 2 3]]\n\n  [[1 2 3 1 2 3 1 2 3]\n   [1 2 3 1 2 3 1 2 3]]]]\n```\n\n## numpy.sum()\n[numpy.sum()](http://docs.scipy.org/doc/numpy/reference/generated/numpy.sum.html)\n\n`numpy.sum(a, axis=None, dtype=None, out=None, keepdims=False)`\n\n## axis\nThis is a litte complex. `abs(axis)` must be less than `a.ndim`.\n\n![](/assets/img/posts/numpy_sum_1.jpg)\n![](/assets/img/posts/numpy_sum_2,jpg)\n\n### dtype\n\n```python\n>>>b=np.array([0.3,0.4,0.9,1.5,1.9])\n>>>print(b.sum(dtype=np.int32))\n\n2\n```\n\n\n### keepdims\n\nIf this parameter is assigned to True, the it will return an array as dimension with the size that input array is\n\n\n```python\n>>>b=np.array([[[0.3,0.4,0.9,1.5,1.9]]])\n>>>print(b.sum())\n\n5.0\n\n\n>>>b=np.array([[[0.3,0.4,0.9,1.5,1.9]]])\n>>>print(b.sum(keepdims=True))\n\n[[[ 5.]]]\n```\n","source":"_posts/python/numpy/2016-10-04-numpy-basic.md","raw":"---\nauthor: ivyxjc\ndate: 2016-10-04\ntitle: numpy user guide\ncategory: Python\ntags: [python,numpy]\nkeywords:\ndescription: numpy是常见的科学计算库. 本文介绍numpy库的一些常见操作,例如numpy.tile(A, reprs), numpy.sum(), axis,  dtye等相关知识.\n---\n\n## numpy.tile(A,reprs)\n[numpy.tile](http://docs.scipy.org/doc/numpy/reference/generated/numpy.tile.html)\n\n` numpy.tile(A, reps)`\n\nThis method will return a `max( d, A.ndim) ` dimension array( `d= len( reprs) `).\n\nif`d> A.ndim`, it will return a d-dimension array by prepending new axes;<br>\netc.\n\n```python\n>>>a = np.array([[1,2,3],[1,2,3]])\n>>>np.tile(a,(2,3,2))\n\n[[[1 2 3 1 2 3]\n  [1 2 3 1 2 3]\n  [1 2 3 1 2 3]\n  [1 2 3 1 2 3]\n  [1 2 3 1 2 3]\n  [1 2 3 1 2 3]]\n\n [[1 2 3 1 2 3]\n  [1 2 3 1 2 3]\n  [1 2 3 1 2 3]\n  [1 2 3 1 2 3]\n  [1 2 3 1 2 3]\n  [1 2 3 1 2 3]]]\n```\n\nif `d< A.ndim`, it will return an A.ndim-dimension array by prepending 1's to it .\nFor example, for an shape of(1,2,2,3), a reps of (2,3) will be treated as (1,1,2,3)\n\n```python\n>>>a = np.array([[[[1,2,3],[1,2,3]]]])\n>>>np.tile(a,(2,2))\n\n[[[[1 2 3 1 2 3]\n   [1 2 3 1 2 3]\n   [1 2 3 1 2 3]\n   [1 2 3 1 2 3]]]]\n\n>>>a = np.array([[[[1,2,3],[1,2,3]]]])\n>>>np.tile(a,(2,1,3))\n\n[[[[1 2 3 1 2 3 1 2 3]\n   [1 2 3 1 2 3 1 2 3]]\n\n  [[1 2 3 1 2 3 1 2 3]\n   [1 2 3 1 2 3 1 2 3]]]]\n```\n\n## numpy.sum()\n[numpy.sum()](http://docs.scipy.org/doc/numpy/reference/generated/numpy.sum.html)\n\n`numpy.sum(a, axis=None, dtype=None, out=None, keepdims=False)`\n\n## axis\nThis is a litte complex. `abs(axis)` must be less than `a.ndim`.\n\n![](/assets/img/posts/numpy_sum_1.jpg)\n![](/assets/img/posts/numpy_sum_2,jpg)\n\n### dtype\n\n```python\n>>>b=np.array([0.3,0.4,0.9,1.5,1.9])\n>>>print(b.sum(dtype=np.int32))\n\n2\n```\n\n\n### keepdims\n\nIf this parameter is assigned to True, the it will return an array as dimension with the size that input array is\n\n\n```python\n>>>b=np.array([[[0.3,0.4,0.9,1.5,1.9]]])\n>>>print(b.sum())\n\n5.0\n\n\n>>>b=np.array([[[0.3,0.4,0.9,1.5,1.9]]])\n>>>print(b.sum(keepdims=True))\n\n[[[ 5.]]]\n```\n","slug":"python/numpy/2016-10-04-numpy-basic","published":1,"updated":"2016-10-13T06:48:10.177Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f010r0024cwjrmf3uhwh5","content":"<h2 id=\"numpy-tile-A-reprs\"><a href=\"#numpy-tile-A-reprs\" class=\"headerlink\" title=\"numpy.tile(A,reprs)\"></a>numpy.tile(A,reprs)</h2><p><a href=\"http://docs.scipy.org/doc/numpy/reference/generated/numpy.tile.html\" target=\"_blank\" rel=\"external\">numpy.tile</a></p>\n<p><code>numpy.tile(A, reps)</code></p>\n<p>This method will return a <code>max( d, A.ndim)</code> dimension array( <code>d= len( reprs)</code>).</p>\n<p>if<code>d&gt; A.ndim</code>, it will return a d-dimension array by prepending new axes;<br><br>etc.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt;&gt;&gt;a = np.array([[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>],[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]])</div><div class=\"line\">&gt;&gt;&gt;np.tile(a,(<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>))</div><div class=\"line\"></div><div class=\"line\">[[[<span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>]</div><div class=\"line\">  [<span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>]</div><div class=\"line\">  [<span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>]</div><div class=\"line\">  [<span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>]</div><div class=\"line\">  [<span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>]</div><div class=\"line\">  [<span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>]]</div><div class=\"line\"></div><div class=\"line\"> [[<span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>]</div><div class=\"line\">  [<span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>]</div><div class=\"line\">  [<span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>]</div><div class=\"line\">  [<span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>]</div><div class=\"line\">  [<span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>]</div><div class=\"line\">  [<span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>]]]</div></pre></td></tr></table></figure>\n<p>if <code>d&lt; A.ndim</code>, it will return an A.ndim-dimension array by prepending 1’s to it .<br>For example, for an shape of(1,2,2,3), a reps of (2,3) will be treated as (1,1,2,3)</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt;&gt;&gt;a = np.array([[[[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>],[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]]]])</div><div class=\"line\">&gt;&gt;&gt;np.tile(a,(<span class=\"number\">2</span>,<span class=\"number\">2</span>))</div><div class=\"line\"></div><div class=\"line\">[[[[<span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>]</div><div class=\"line\">   [<span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>]</div><div class=\"line\">   [<span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>]</div><div class=\"line\">   [<span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>]]]]</div><div class=\"line\"></div><div class=\"line\">&gt;&gt;&gt;a = np.array([[[[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>],[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]]]])</div><div class=\"line\">&gt;&gt;&gt;np.tile(a,(<span class=\"number\">2</span>,<span class=\"number\">1</span>,<span class=\"number\">3</span>))</div><div class=\"line\"></div><div class=\"line\">[[[[<span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>]</div><div class=\"line\">   [<span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>]]</div><div class=\"line\"></div><div class=\"line\">  [[<span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>]</div><div class=\"line\">   [<span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>]]]]</div></pre></td></tr></table></figure>\n<h2 id=\"numpy-sum\"><a href=\"#numpy-sum\" class=\"headerlink\" title=\"numpy.sum()\"></a>numpy.sum()</h2><p><a href=\"http://docs.scipy.org/doc/numpy/reference/generated/numpy.sum.html\" target=\"_blank\" rel=\"external\">numpy.sum()</a></p>\n<p><code>numpy.sum(a, axis=None, dtype=None, out=None, keepdims=False)</code></p>\n<h2 id=\"axis\"><a href=\"#axis\" class=\"headerlink\" title=\"axis\"></a>axis</h2><p>This is a litte complex. <code>abs(axis)</code> must be less than <code>a.ndim</code>.</p>\n<p><img src=\"/assets/img/posts/numpy_sum_1.jpg\" alt=\"\"><br><img src=\"/assets/img/posts/numpy_sum_2,jpg\" alt=\"\"></p>\n<h3 id=\"dtype\"><a href=\"#dtype\" class=\"headerlink\" title=\"dtype\"></a>dtype</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt;&gt;&gt;b=np.array([<span class=\"number\">0.3</span>,<span class=\"number\">0.4</span>,<span class=\"number\">0.9</span>,<span class=\"number\">1.5</span>,<span class=\"number\">1.9</span>])</div><div class=\"line\">&gt;&gt;&gt;print(b.sum(dtype=np.int32))</div><div class=\"line\"></div><div class=\"line\"><span class=\"number\">2</span></div></pre></td></tr></table></figure>\n<h3 id=\"keepdims\"><a href=\"#keepdims\" class=\"headerlink\" title=\"keepdims\"></a>keepdims</h3><p>If this parameter is assigned to True, the it will return an array as dimension with the size that input array is</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt;&gt;&gt;b=np.array([[[<span class=\"number\">0.3</span>,<span class=\"number\">0.4</span>,<span class=\"number\">0.9</span>,<span class=\"number\">1.5</span>,<span class=\"number\">1.9</span>]]])</div><div class=\"line\">&gt;&gt;&gt;print(b.sum())</div><div class=\"line\"></div><div class=\"line\"><span class=\"number\">5.0</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&gt;&gt;&gt;b=np.array([[[<span class=\"number\">0.3</span>,<span class=\"number\">0.4</span>,<span class=\"number\">0.9</span>,<span class=\"number\">1.5</span>,<span class=\"number\">1.9</span>]]])</div><div class=\"line\">&gt;&gt;&gt;print(b.sum(keepdims=<span class=\"keyword\">True</span>))</div><div class=\"line\"></div><div class=\"line\">[[[ <span class=\"number\">5.</span>]]]</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h2 id=\"numpy-tile-A-reprs\"><a href=\"#numpy-tile-A-reprs\" class=\"headerlink\" title=\"numpy.tile(A,reprs)\"></a>numpy.tile(A,reprs)</h2><p><a href=\"http://docs.scipy.org/doc/numpy/reference/generated/numpy.tile.html\">numpy.tile</a></p>\n<p><code>numpy.tile(A, reps)</code></p>\n<p>This method will return a <code>max( d, A.ndim)</code> dimension array( <code>d= len( reprs)</code>).</p>\n<p>if<code>d&gt; A.ndim</code>, it will return a d-dimension array by prepending new axes;<br><br>etc.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt;&gt;&gt;a = np.array([[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>],[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]])</div><div class=\"line\">&gt;&gt;&gt;np.tile(a,(<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>))</div><div class=\"line\"></div><div class=\"line\">[[[<span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>]</div><div class=\"line\">  [<span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>]</div><div class=\"line\">  [<span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>]</div><div class=\"line\">  [<span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>]</div><div class=\"line\">  [<span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>]</div><div class=\"line\">  [<span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>]]</div><div class=\"line\"></div><div class=\"line\"> [[<span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>]</div><div class=\"line\">  [<span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>]</div><div class=\"line\">  [<span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>]</div><div class=\"line\">  [<span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>]</div><div class=\"line\">  [<span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>]</div><div class=\"line\">  [<span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>]]]</div></pre></td></tr></table></figure>\n<p>if <code>d&lt; A.ndim</code>, it will return an A.ndim-dimension array by prepending 1’s to it .<br>For example, for an shape of(1,2,2,3), a reps of (2,3) will be treated as (1,1,2,3)</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt;&gt;&gt;a = np.array([[[[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>],[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]]]])</div><div class=\"line\">&gt;&gt;&gt;np.tile(a,(<span class=\"number\">2</span>,<span class=\"number\">2</span>))</div><div class=\"line\"></div><div class=\"line\">[[[[<span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>]</div><div class=\"line\">   [<span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>]</div><div class=\"line\">   [<span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>]</div><div class=\"line\">   [<span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>]]]]</div><div class=\"line\"></div><div class=\"line\">&gt;&gt;&gt;a = np.array([[[[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>],[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]]]])</div><div class=\"line\">&gt;&gt;&gt;np.tile(a,(<span class=\"number\">2</span>,<span class=\"number\">1</span>,<span class=\"number\">3</span>))</div><div class=\"line\"></div><div class=\"line\">[[[[<span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>]</div><div class=\"line\">   [<span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>]]</div><div class=\"line\"></div><div class=\"line\">  [[<span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>]</div><div class=\"line\">   [<span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span> <span class=\"number\">1</span> <span class=\"number\">2</span> <span class=\"number\">3</span>]]]]</div></pre></td></tr></table></figure>\n<h2 id=\"numpy-sum\"><a href=\"#numpy-sum\" class=\"headerlink\" title=\"numpy.sum()\"></a>numpy.sum()</h2><p><a href=\"http://docs.scipy.org/doc/numpy/reference/generated/numpy.sum.html\">numpy.sum()</a></p>\n<p><code>numpy.sum(a, axis=None, dtype=None, out=None, keepdims=False)</code></p>\n<h2 id=\"axis\"><a href=\"#axis\" class=\"headerlink\" title=\"axis\"></a>axis</h2><p>This is a litte complex. <code>abs(axis)</code> must be less than <code>a.ndim</code>.</p>\n<p><img src=\"/assets/img/posts/numpy_sum_1.jpg\" alt=\"\"><br><img src=\"/assets/img/posts/numpy_sum_2,jpg\" alt=\"\"></p>\n<h3 id=\"dtype\"><a href=\"#dtype\" class=\"headerlink\" title=\"dtype\"></a>dtype</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt;&gt;&gt;b=np.array([<span class=\"number\">0.3</span>,<span class=\"number\">0.4</span>,<span class=\"number\">0.9</span>,<span class=\"number\">1.5</span>,<span class=\"number\">1.9</span>])</div><div class=\"line\">&gt;&gt;&gt;print(b.sum(dtype=np.int32))</div><div class=\"line\"></div><div class=\"line\"><span class=\"number\">2</span></div></pre></td></tr></table></figure>\n<h3 id=\"keepdims\"><a href=\"#keepdims\" class=\"headerlink\" title=\"keepdims\"></a>keepdims</h3><p>If this parameter is assigned to True, the it will return an array as dimension with the size that input array is</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&gt;&gt;&gt;b=np.array([[[<span class=\"number\">0.3</span>,<span class=\"number\">0.4</span>,<span class=\"number\">0.9</span>,<span class=\"number\">1.5</span>,<span class=\"number\">1.9</span>]]])</div><div class=\"line\">&gt;&gt;&gt;print(b.sum())</div><div class=\"line\"></div><div class=\"line\"><span class=\"number\">5.0</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&gt;&gt;&gt;b=np.array([[[<span class=\"number\">0.3</span>,<span class=\"number\">0.4</span>,<span class=\"number\">0.9</span>,<span class=\"number\">1.5</span>,<span class=\"number\">1.9</span>]]])</div><div class=\"line\">&gt;&gt;&gt;print(b.sum(keepdims=<span class=\"keyword\">True</span>))</div><div class=\"line\"></div><div class=\"line\">[[[ <span class=\"number\">5.</span>]]]</div></pre></td></tr></table></figure>\n"},{"author":"ivyxjc","date":"2016-03-28T16:00:00.000Z","title":"python文件处理","keywords":null,"description":null,"_content":"\n## 遍历文件夹下所有的文件\n\n```python\n\n\n```\n","source":"_posts/python/os/2016-03-29-python-os.md","raw":"---\nauthor: ivyxjc\ndate: 2016-03-29\ntitle: python文件处理\ncategory: Python\ntags: [python,regex]\nkeywords:\ndescription:\n---\n\n## 遍历文件夹下所有的文件\n\n```python\n\n\n```\n","slug":"python/os/2016-03-29-python-os","published":1,"updated":"2016-10-13T06:34:38.571Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f010t0027cwjrb883kp7k","content":"<h2 id=\"遍历文件夹下所有的文件\"><a href=\"#遍历文件夹下所有的文件\" class=\"headerlink\" title=\"遍历文件夹下所有的文件\"></a>遍历文件夹下所有的文件</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"></div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h2 id=\"遍历文件夹下所有的文件\"><a href=\"#遍历文件夹下所有的文件\" class=\"headerlink\" title=\"遍历文件夹下所有的文件\"></a>遍历文件夹下所有的文件</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"></div></pre></td></tr></table></figure>\n"},{"author":"ivyxjc","date":"2016-06-08T16:00:00.000Z","title":"在Centos 6中升级python","keywords":null,"description":null,"_content":"Centos默认的python使用的是`python2.6`,我常用的是`python3.5`,所以需要升级python.\n\n安装过程:\n\n1. 下载python3.5.1\n`wget https://www.python.org/ftp/python/3.5.1/Python-3.5.1.tgz`\n2. 解压并安装\n 1. `tar zxvf Python-3.5.1.tgz`\n 2. `cd Python-3.5.1`\n 3. `./configure --prefix=/usr/local/python3.5`\n 4. `make`\n 5. `make install`\n3. 备份原有python命令执行文件\n`mv /usr/bin/python /usr/bin/pythonbak`\n4. 创建新的python软连接\n   `ln -s /usr/local/python3.5/bin/python3.5 /usr/bin/python`\n\n问题:\n1. 2.3步可能出现`no acceptable C compiler found in $PATH`问题,这是因为完整的安装`development tools`.\n    解决方法:`yum groupinstall \"Development Tools\"`\n\n2. pip无法使用,出现`versionconflic`的问题,好像是因为pip版本的问题.进入pip的目录,删除pip.再直接下载上述错误信息中显示的`requirement.parse()`中的pip版本,解压缩,安装即可.\n","source":"_posts/效率/Python相关问题/2016-06-09-update-python.md","raw":"---\nauthor: ivyxjc\ndate: 2016-06-09\ntitle: 在Centos 6中升级python\ncategory: 效率\ntags: [faq]\nkeywords:\ndescription:\n---\nCentos默认的python使用的是`python2.6`,我常用的是`python3.5`,所以需要升级python.\n\n安装过程:\n\n1. 下载python3.5.1\n`wget https://www.python.org/ftp/python/3.5.1/Python-3.5.1.tgz`\n2. 解压并安装\n 1. `tar zxvf Python-3.5.1.tgz`\n 2. `cd Python-3.5.1`\n 3. `./configure --prefix=/usr/local/python3.5`\n 4. `make`\n 5. `make install`\n3. 备份原有python命令执行文件\n`mv /usr/bin/python /usr/bin/pythonbak`\n4. 创建新的python软连接\n   `ln -s /usr/local/python3.5/bin/python3.5 /usr/bin/python`\n\n问题:\n1. 2.3步可能出现`no acceptable C compiler found in $PATH`问题,这是因为完整的安装`development tools`.\n    解决方法:`yum groupinstall \"Development Tools\"`\n\n2. pip无法使用,出现`versionconflic`的问题,好像是因为pip版本的问题.进入pip的目录,删除pip.再直接下载上述错误信息中显示的`requirement.parse()`中的pip版本,解压缩,安装即可.\n","slug":"效率/Python相关问题/2016-06-09-update-python","published":1,"updated":"2016-10-13T06:34:38.614Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f010u002acwjrc4l7wvz8","content":"<p>Centos默认的python使用的是<code>python2.6</code>,我常用的是<code>python3.5</code>,所以需要升级python.</p>\n<p>安装过程:</p>\n<ol>\n<li>下载python3.5.1<br><code>wget https://www.python.org/ftp/python/3.5.1/Python-3.5.1.tgz</code></li>\n<li>解压并安装<ol>\n<li><code>tar zxvf Python-3.5.1.tgz</code></li>\n<li><code>cd Python-3.5.1</code></li>\n<li><code>./configure --prefix=/usr/local/python3.5</code></li>\n<li><code>make</code></li>\n<li><code>make install</code></li>\n</ol>\n</li>\n<li>备份原有python命令执行文件<br><code>mv /usr/bin/python /usr/bin/pythonbak</code></li>\n<li>创建新的python软连接<br><code>ln -s /usr/local/python3.5/bin/python3.5 /usr/bin/python</code></li>\n</ol>\n<p>问题:</p>\n<ol>\n<li><p>2.3步可能出现<code>no acceptable C compiler found in $PATH</code>问题,这是因为完整的安装<code>development tools</code>.<br> 解决方法:<code>yum groupinstall &quot;Development Tools&quot;</code></p>\n</li>\n<li><p>pip无法使用,出现<code>versionconflic</code>的问题,好像是因为pip版本的问题.进入pip的目录,删除pip.再直接下载上述错误信息中显示的<code>requirement.parse()</code>中的pip版本,解压缩,安装即可.</p>\n</li>\n</ol>\n","excerpt":"","more":"<p>Centos默认的python使用的是<code>python2.6</code>,我常用的是<code>python3.5</code>,所以需要升级python.</p>\n<p>安装过程:</p>\n<ol>\n<li>下载python3.5.1<br><code>wget https://www.python.org/ftp/python/3.5.1/Python-3.5.1.tgz</code></li>\n<li>解压并安装<ol>\n<li><code>tar zxvf Python-3.5.1.tgz</code></li>\n<li><code>cd Python-3.5.1</code></li>\n<li><code>./configure --prefix=/usr/local/python3.5</code></li>\n<li><code>make</code></li>\n<li><code>make install</code></li>\n</ol>\n</li>\n<li>备份原有python命令执行文件<br><code>mv /usr/bin/python /usr/bin/pythonbak</code></li>\n<li>创建新的python软连接<br><code>ln -s /usr/local/python3.5/bin/python3.5 /usr/bin/python</code></li>\n</ol>\n<p>问题:</p>\n<ol>\n<li><p>2.3步可能出现<code>no acceptable C compiler found in $PATH</code>问题,这是因为完整的安装<code>development tools</code>.<br> 解决方法:<code>yum groupinstall &quot;Development Tools&quot;</code></p>\n</li>\n<li><p>pip无法使用,出现<code>versionconflic</code>的问题,好像是因为pip版本的问题.进入pip的目录,删除pip.再直接下载上述错误信息中显示的<code>requirement.parse()</code>中的pip版本,解压缩,安装即可.</p>\n</li>\n</ol>\n"},{"author":"ivyxjc","date":"2016-02-17T16:00:00.000Z","title":"","keywords":null,"description":null,"_content":"\n[题目网址](http://codeforces.com/contest/622/)\n\n## A:Infinite Sequence\n\n\nA题比较简单,主要就利用公式$$ \\sum_{k=1}^n k=\\frac {(1+n)*n}{2} $$来确定距离所要求的数字最近的一个1所在的位置。然后就可得到该数值了。<br>\n代码如下：\n\n### 代码\n\n```java\npublic class Round7_A{\n    public static void main(String[] args){\n        Scanner in=new Scanner(System.in);\n        long  a=in.nextLong();\n        long a_one=count(a);\n\n        if(a_one*a_one+a_one==2*a){\n            System.out.println(a_one);\n        }else{\n            long tmp=(long)a-(a_one*a_one+a_one)/2;\n            System.out.println(tmp);\n        }\n        return;\n    }\n\n    public static long count(long  num) {\n        long num_two = 2 * num;\n        long i = (long) Math.sqrt(num_two) - 1;\n        //System.out.println(i);\n        if (i <= 0) {\n            i = 0;\n        }\n        for (; i <= num; i++) {\n            //System.out.println(i);\n            if (i * i + i == num_two) {\n                return i;\n            }\n            if (i * i + i > num_two) {\n                return i - 1;\n            }\n        }\n        return 0;\n    }\n}\n```\n\n## B. The Time\nB题也比较简单，主要就注意几个边界条件即可以及格式化输出即可。\n\n```java\n//num只有个位时，会自动在十位补0\nDecimalFormat df=new DecimalFormat(\"00\");\ndf.format(num);\n```\n\n\n## C. Not Equal on a Segment\n\n### 题目\n题意为查询一个数组的某一区间是否存在指定的$$$x$$$不相同的数，若不存在输出-1，否则输出任意一个不相同的树的秩。<br>\n\n### 解法介绍\n1.暴力解法就是遍历整个区间，但时间肯定不够。<br>\n\n2.线段树法：线段树广泛用于区间查询，但是该题仅需输出任意一个不相同的树的位置即可，所以可以不用该法。(其实我还没有特别熟线段树)\n\n3.解法：设输入数据的数组为```array[]```<br>\n创建一个数组```diff[]=new int[arrayLength]```使其任意秩```diff[i]```值为满足$$$ a_j \\ne a_i (j>i) $$$的第一个j的值。这也是官方答案所给的解法。代码如下：<br>\n\n### 边界条件\n该代码需要考虑到的边界条件有：<br>\n\n```\n1.数组内容全部相同\n2.数组内容出现连续相同的项\n3.数组内容全部不相同\n4.diff数组的最后一项是否有值(统一将diff数组的最后一项设为数组长度)\n\n```\n\n### 代码\n\n```java\nint tmpI=0;\nfor(int j=tmpI+1;j<arrayLength;){\n    if(array[j]==array[tmpI]) {\n        j++;\n        continue;\n    }\n    for(;tmpI<j;tmpI++){\n        diff[tmpI]=j;\n    }\n}\n//若数组中最后出现连续相同的项，上述代码不能将这些项赋值为arrayLength\n//所以需要下面的代码\nfor(int i=tmpI;i<arrayLength;i++){\n    diff[i]=arrayLength;\n}\n\ndiff[arrayLength-1]=arrayLength;\n```\n\n查询时使用的代码:<br>\n\n```java\ntry{\n    for(int i=0;i<queryTimes;i++){\n        int left=getInt()-1;\n        int right=getInt()-1;\n        int x=getInt();\n        if(array[left]!=x){\n            writer.write((left+1)+\"\\n\");\n            continue;\n        }\n        if(diff[left]>right){\n            writer.write((-1)+\"\\n\");\n        }else{\n            writer.write((diff[left]+1)+\"\\n\");\n        }\n    }\n    writer.flush();\n}catch (IOException e){\n    e.printStackTrace();\n}\n```\n\n### IO问题\n这一题以及下面的e题还有一个问题就是如果使用```Scanner```和```System.out.println()```，无论如何都不会通过测试，因为io就基本上快超时了。\n\n我使用了[ java_acm快速输入和输出 ][1]中提供的一个输入输出方法，代码如下\n#### 解决代码\n\n```java\npublic class Main {  \n    private static Reader reader = null;  \n    private static Writer writer = null;  \n\n    public static void main(String[] args) {  \n        reader = new InputStreamReader(System.in);  \n        writer = new OutputStreamWriter(System.out);  \n        try {  \n                m = getInt();  \n                writer.write(\"something\");  \n                writer.flush();  \n            }  \n        } catch (Exception e) {  \n            e.printStackTrace();  \n        }  \n    }  \n\n    /**\n     * 获取键盘输入的整数\n     *  \n     * @return 输入的整数\n     */  \n    public static int getInt() {  \n        int read;  \n        int res = 0;  \n        boolean isNegative = false;// 是不是负数  \n        try {  \n            while ((read = reader.read()) != -1) {  \n                if ((char) read == '-') {  \n                    res = 0;  \n                    isNegative = true;  \n                    break;  \n                } else if (isNumber((char) read)) {  \n                    res = read - '0';  \n                    break;  \n                }  \n            }  \n            while ((read = reader.read()) != -1) {  \n                char ch = (char) read;  \n                if (isNumber(ch)) {  \n                    res = res * 10 + (read - '0');  \n                } else {  \n                    break;  \n                }  \n            }  \n        } catch (IOException e) {  \n            // TODO Auto-generated catch block  \n            e.printStackTrace();  \n        }  \n        if (isNegative == true) {  \n            res = -1 * res;  \n        }  \n        return res;  \n    }  \n\n    /**\n     * 判断字符是否空白\n     *  \n     * @param ch\n     *            字符\n     * @return 判断结果\n     */  \n    public static boolean isBlank(char ch) {  \n        if (ch == '\\r' || ch == '\\n' || ch == ' ') {  \n            return true;  \n        }  \n        return false;  \n    }  \n\n    /**\n     * 判断字符是不是数字\n     *  \n     * @param ch\n     *            字符\n     * @return 判断结果\n     */  \n    public static boolean isNumber(char ch) {  \n        if (ch <= '9' && ch >= '0') {  \n            return true;  \n        }  \n        return false;  \n    }  \n}  \n\n```\n\n## E. Ants in Leaves\n\n### 题目\nYou are given a tree with n vertices and a root in the vertex 1. There is an ant in each leaf of the tree. In one second some ants can simultaneously go to the parent vertex from the vertex they were in. No two ants can be in the same vertex simultaneously except for the root of the tree.<br>\n\nFind the minimal time required for all ants to be in the root of the tree.<br>\n\n题意：n只蚂蚁从树的叶节点向根节点爬，每秒只能爬到它的父节点处，但是除了根节点，其它所有节点都只能同时存在一只蚂蚁。<br>\n\n### 解法\n\nThis problem was suggested by Aleksa Plavsic allllekssssa.\n\nLet z be the array of the depths of all leaves in the subtree of the vertex v. Let's sort z.\n\nStatement 1: it's profitable to lift the leaves in order of their appearing in z.\n\nStatement 2: denote ax — the time of appearing the x-th leaf in the vertex v, let's consider the leaves $$$z_i$$$ and $$$z_{i+1}$$$ then  $$$a_{z_i+1} \\geq  a_{z_i}+1$$$.\n\nStatement 3: $$$a_{z_i+1}=max(d_{z_i}+1,a_{z_i}+1)$$$, where $$$d_x$$$ is the depth of the x-th leaf in the subtree of the vertex v. The last statement gives us the solution for the problem: we should simply iterate over z from left to right and recalculate the array a by formula from the third statement. All statements can be easily proved and it's recommended to do by yourself to understand better the idea of the solution.\n\n#### 代码实现\n\n##### 建图\n\n```java\nint V=getInt();\n    Graph G=new Graph(V,V-1);\n    for(int i=0;i<V-1;i++){\n        G.addEdge(getInt(),getInt());\n    }\n    G.dfs();\n    G.solve();\n```\n\n##### dfs()详细代码\n\n```dfs()```的目的是将根节点的每个直接子节点的所有叶子节点的深度存储在一个```ArrayList```中组成一个数组depthArray中。\n\n```java\npublic void dfs(int v){\n//从根节点出发\n    if(v==1){\n        int rootSonsNum=adj[v].getConnectedvertexs().size();\n        depthArray=new ArrayList[rootSonsNum];\n        for(int i=0;i<rootSonsNum;i++){\n            depthArray[i]=new ArrayList<>();\n        }\n    }\n    marked[v]=true;\n    adj[v].setDepth(depth);\n    if(adj[v].getDegree()==1)\n        depthArray[count].add(adj[v].getDepth());\n    depth++;\n    for(Integer i:adj[v].getConnectedvertexs()){\n        if(!marked[i]){\n            dfs(i);\n            depth--;\n        }\n        if(v==1){\n            count++;\n        }\n    }\n}\n\npublic void dfs(){\n    dfs(1);\n}\n```\n\n##### solve()代码\n\n```solve()```代码的作用就是先将```depthArray```中的每一```个ArrayList```按从小到大排序，再对每一个ArrayList中的数据进行$$$max(d_{z_i}+1,a_{z_i}+1)$$$比较，最后```depthArray```数组中每一个```ArrayList```的resMax比较取最大的值。\n\n```java\npublic int solve(){\n    for(ArrayList<Integer> i:depthArray) {\n        Collections.sort(i);\n//            i.sort(new Comparator<Integer>() {\n//                @Override\n//                public int compare(Integer o1, Integer o2) {\n//                    if (o1 > o2)\n//                        return 1;\n//                    else if (o1 == o2)\n//                        return 0;\n//                    else\n//                        return -1;\n//                }\n//            });\n\n/*\n注释掉的代码在有些时候会出现\njava.lang.IllegalArgumentException: Comparison method violates its general contract!。可见16057179提交的错误提示\n*/\n\n    int res=0;\n    for(ArrayList<Integer> i:depthArray){\n        //System.out.println(i);\n        int tmpres=i.get(0);\n        int tmpIndex=1;\n        while(tmpIndex<i.size()){\n            tmpres=max(tmpres+1,i.get(tmpIndex));\n            tmpIndex++;\n        }\n        res=max(tmpres,res);\n    }\n    System.out.println(res);\n    return res;\n}\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  [1]: http://blog.csdn.net/a601025382s/article/details/46999711\n","source":"_posts/OJ/Codeforces/eduRound/2016-02-18-Codeforces-Edu-Round7总结.md","raw":"---\nauthor: ivyxjc\ndate: 2016-02-18\ntitle:\ncategory: OJ\ntags: [格式化输出,onlinejudge,io,线段树,区间查询]\nkeywords:\ndescription:\n---\n\n[题目网址](http://codeforces.com/contest/622/)\n\n## A:Infinite Sequence\n\n\nA题比较简单,主要就利用公式$$ \\sum_{k=1}^n k=\\frac {(1+n)*n}{2} $$来确定距离所要求的数字最近的一个1所在的位置。然后就可得到该数值了。<br>\n代码如下：\n\n### 代码\n\n```java\npublic class Round7_A{\n    public static void main(String[] args){\n        Scanner in=new Scanner(System.in);\n        long  a=in.nextLong();\n        long a_one=count(a);\n\n        if(a_one*a_one+a_one==2*a){\n            System.out.println(a_one);\n        }else{\n            long tmp=(long)a-(a_one*a_one+a_one)/2;\n            System.out.println(tmp);\n        }\n        return;\n    }\n\n    public static long count(long  num) {\n        long num_two = 2 * num;\n        long i = (long) Math.sqrt(num_two) - 1;\n        //System.out.println(i);\n        if (i <= 0) {\n            i = 0;\n        }\n        for (; i <= num; i++) {\n            //System.out.println(i);\n            if (i * i + i == num_two) {\n                return i;\n            }\n            if (i * i + i > num_two) {\n                return i - 1;\n            }\n        }\n        return 0;\n    }\n}\n```\n\n## B. The Time\nB题也比较简单，主要就注意几个边界条件即可以及格式化输出即可。\n\n```java\n//num只有个位时，会自动在十位补0\nDecimalFormat df=new DecimalFormat(\"00\");\ndf.format(num);\n```\n\n\n## C. Not Equal on a Segment\n\n### 题目\n题意为查询一个数组的某一区间是否存在指定的$$$x$$$不相同的数，若不存在输出-1，否则输出任意一个不相同的树的秩。<br>\n\n### 解法介绍\n1.暴力解法就是遍历整个区间，但时间肯定不够。<br>\n\n2.线段树法：线段树广泛用于区间查询，但是该题仅需输出任意一个不相同的树的位置即可，所以可以不用该法。(其实我还没有特别熟线段树)\n\n3.解法：设输入数据的数组为```array[]```<br>\n创建一个数组```diff[]=new int[arrayLength]```使其任意秩```diff[i]```值为满足$$$ a_j \\ne a_i (j>i) $$$的第一个j的值。这也是官方答案所给的解法。代码如下：<br>\n\n### 边界条件\n该代码需要考虑到的边界条件有：<br>\n\n```\n1.数组内容全部相同\n2.数组内容出现连续相同的项\n3.数组内容全部不相同\n4.diff数组的最后一项是否有值(统一将diff数组的最后一项设为数组长度)\n\n```\n\n### 代码\n\n```java\nint tmpI=0;\nfor(int j=tmpI+1;j<arrayLength;){\n    if(array[j]==array[tmpI]) {\n        j++;\n        continue;\n    }\n    for(;tmpI<j;tmpI++){\n        diff[tmpI]=j;\n    }\n}\n//若数组中最后出现连续相同的项，上述代码不能将这些项赋值为arrayLength\n//所以需要下面的代码\nfor(int i=tmpI;i<arrayLength;i++){\n    diff[i]=arrayLength;\n}\n\ndiff[arrayLength-1]=arrayLength;\n```\n\n查询时使用的代码:<br>\n\n```java\ntry{\n    for(int i=0;i<queryTimes;i++){\n        int left=getInt()-1;\n        int right=getInt()-1;\n        int x=getInt();\n        if(array[left]!=x){\n            writer.write((left+1)+\"\\n\");\n            continue;\n        }\n        if(diff[left]>right){\n            writer.write((-1)+\"\\n\");\n        }else{\n            writer.write((diff[left]+1)+\"\\n\");\n        }\n    }\n    writer.flush();\n}catch (IOException e){\n    e.printStackTrace();\n}\n```\n\n### IO问题\n这一题以及下面的e题还有一个问题就是如果使用```Scanner```和```System.out.println()```，无论如何都不会通过测试，因为io就基本上快超时了。\n\n我使用了[ java_acm快速输入和输出 ][1]中提供的一个输入输出方法，代码如下\n#### 解决代码\n\n```java\npublic class Main {  \n    private static Reader reader = null;  \n    private static Writer writer = null;  \n\n    public static void main(String[] args) {  \n        reader = new InputStreamReader(System.in);  \n        writer = new OutputStreamWriter(System.out);  \n        try {  \n                m = getInt();  \n                writer.write(\"something\");  \n                writer.flush();  \n            }  \n        } catch (Exception e) {  \n            e.printStackTrace();  \n        }  \n    }  \n\n    /**\n     * 获取键盘输入的整数\n     *  \n     * @return 输入的整数\n     */  \n    public static int getInt() {  \n        int read;  \n        int res = 0;  \n        boolean isNegative = false;// 是不是负数  \n        try {  \n            while ((read = reader.read()) != -1) {  \n                if ((char) read == '-') {  \n                    res = 0;  \n                    isNegative = true;  \n                    break;  \n                } else if (isNumber((char) read)) {  \n                    res = read - '0';  \n                    break;  \n                }  \n            }  \n            while ((read = reader.read()) != -1) {  \n                char ch = (char) read;  \n                if (isNumber(ch)) {  \n                    res = res * 10 + (read - '0');  \n                } else {  \n                    break;  \n                }  \n            }  \n        } catch (IOException e) {  \n            // TODO Auto-generated catch block  \n            e.printStackTrace();  \n        }  \n        if (isNegative == true) {  \n            res = -1 * res;  \n        }  \n        return res;  \n    }  \n\n    /**\n     * 判断字符是否空白\n     *  \n     * @param ch\n     *            字符\n     * @return 判断结果\n     */  \n    public static boolean isBlank(char ch) {  \n        if (ch == '\\r' || ch == '\\n' || ch == ' ') {  \n            return true;  \n        }  \n        return false;  \n    }  \n\n    /**\n     * 判断字符是不是数字\n     *  \n     * @param ch\n     *            字符\n     * @return 判断结果\n     */  \n    public static boolean isNumber(char ch) {  \n        if (ch <= '9' && ch >= '0') {  \n            return true;  \n        }  \n        return false;  \n    }  \n}  \n\n```\n\n## E. Ants in Leaves\n\n### 题目\nYou are given a tree with n vertices and a root in the vertex 1. There is an ant in each leaf of the tree. In one second some ants can simultaneously go to the parent vertex from the vertex they were in. No two ants can be in the same vertex simultaneously except for the root of the tree.<br>\n\nFind the minimal time required for all ants to be in the root of the tree.<br>\n\n题意：n只蚂蚁从树的叶节点向根节点爬，每秒只能爬到它的父节点处，但是除了根节点，其它所有节点都只能同时存在一只蚂蚁。<br>\n\n### 解法\n\nThis problem was suggested by Aleksa Plavsic allllekssssa.\n\nLet z be the array of the depths of all leaves in the subtree of the vertex v. Let's sort z.\n\nStatement 1: it's profitable to lift the leaves in order of their appearing in z.\n\nStatement 2: denote ax — the time of appearing the x-th leaf in the vertex v, let's consider the leaves $$$z_i$$$ and $$$z_{i+1}$$$ then  $$$a_{z_i+1} \\geq  a_{z_i}+1$$$.\n\nStatement 3: $$$a_{z_i+1}=max(d_{z_i}+1,a_{z_i}+1)$$$, where $$$d_x$$$ is the depth of the x-th leaf in the subtree of the vertex v. The last statement gives us the solution for the problem: we should simply iterate over z from left to right and recalculate the array a by formula from the third statement. All statements can be easily proved and it's recommended to do by yourself to understand better the idea of the solution.\n\n#### 代码实现\n\n##### 建图\n\n```java\nint V=getInt();\n    Graph G=new Graph(V,V-1);\n    for(int i=0;i<V-1;i++){\n        G.addEdge(getInt(),getInt());\n    }\n    G.dfs();\n    G.solve();\n```\n\n##### dfs()详细代码\n\n```dfs()```的目的是将根节点的每个直接子节点的所有叶子节点的深度存储在一个```ArrayList```中组成一个数组depthArray中。\n\n```java\npublic void dfs(int v){\n//从根节点出发\n    if(v==1){\n        int rootSonsNum=adj[v].getConnectedvertexs().size();\n        depthArray=new ArrayList[rootSonsNum];\n        for(int i=0;i<rootSonsNum;i++){\n            depthArray[i]=new ArrayList<>();\n        }\n    }\n    marked[v]=true;\n    adj[v].setDepth(depth);\n    if(adj[v].getDegree()==1)\n        depthArray[count].add(adj[v].getDepth());\n    depth++;\n    for(Integer i:adj[v].getConnectedvertexs()){\n        if(!marked[i]){\n            dfs(i);\n            depth--;\n        }\n        if(v==1){\n            count++;\n        }\n    }\n}\n\npublic void dfs(){\n    dfs(1);\n}\n```\n\n##### solve()代码\n\n```solve()```代码的作用就是先将```depthArray```中的每一```个ArrayList```按从小到大排序，再对每一个ArrayList中的数据进行$$$max(d_{z_i}+1,a_{z_i}+1)$$$比较，最后```depthArray```数组中每一个```ArrayList```的resMax比较取最大的值。\n\n```java\npublic int solve(){\n    for(ArrayList<Integer> i:depthArray) {\n        Collections.sort(i);\n//            i.sort(new Comparator<Integer>() {\n//                @Override\n//                public int compare(Integer o1, Integer o2) {\n//                    if (o1 > o2)\n//                        return 1;\n//                    else if (o1 == o2)\n//                        return 0;\n//                    else\n//                        return -1;\n//                }\n//            });\n\n/*\n注释掉的代码在有些时候会出现\njava.lang.IllegalArgumentException: Comparison method violates its general contract!。可见16057179提交的错误提示\n*/\n\n    int res=0;\n    for(ArrayList<Integer> i:depthArray){\n        //System.out.println(i);\n        int tmpres=i.get(0);\n        int tmpIndex=1;\n        while(tmpIndex<i.size()){\n            tmpres=max(tmpres+1,i.get(tmpIndex));\n            tmpIndex++;\n        }\n        res=max(tmpres,res);\n    }\n    System.out.println(res);\n    return res;\n}\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  [1]: http://blog.csdn.net/a601025382s/article/details/46999711\n","slug":"OJ/Codeforces/eduRound/2016-02-18-Codeforces-Edu-Round7总结","published":1,"updated":"2016-10-13T13:31:25.326Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f011l0040cwjr9hg96fbh","content":"<p><a href=\"http://codeforces.com/contest/622/\" target=\"_blank\" rel=\"external\">题目网址</a></p>\n<h2 id=\"A-Infinite-Sequence\"><a href=\"#A-Infinite-Sequence\" class=\"headerlink\" title=\"A:Infinite Sequence\"></a>A:Infinite Sequence</h2><p>A题比较简单,主要就利用公式$$ \\sum_{k=1}^n k=\\frac {(1+n)*n}{2} $$来确定距离所要求的数字最近的一个1所在的位置。然后就可得到该数值了。<br><br>代码如下：</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Round7_A</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</div><div class=\"line\">        Scanner in=<span class=\"keyword\">new</span> Scanner(System.in);</div><div class=\"line\">        <span class=\"keyword\">long</span>  a=in.nextLong();</div><div class=\"line\">        <span class=\"keyword\">long</span> a_one=count(a);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span>(a_one*a_one+a_one==<span class=\"number\">2</span>*a)&#123;</div><div class=\"line\">            System.out.println(a_one);</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">            <span class=\"keyword\">long</span> tmp=(<span class=\"keyword\">long</span>)a-(a_one*a_one+a_one)/<span class=\"number\">2</span>;</div><div class=\"line\">            System.out.println(tmp);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">long</span> <span class=\"title\">count</span><span class=\"params\">(<span class=\"keyword\">long</span>  num)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">long</span> num_two = <span class=\"number\">2</span> * num;</div><div class=\"line\">        <span class=\"keyword\">long</span> i = (<span class=\"keyword\">long</span>) Math.sqrt(num_two) - <span class=\"number\">1</span>;</div><div class=\"line\">        <span class=\"comment\">//System.out.println(i);</span></div><div class=\"line\">        <span class=\"keyword\">if</span> (i &lt;= <span class=\"number\">0</span>) &#123;</div><div class=\"line\">            i = <span class=\"number\">0</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">for</span> (; i &lt;= num; i++) &#123;</div><div class=\"line\">            <span class=\"comment\">//System.out.println(i);</span></div><div class=\"line\">            <span class=\"keyword\">if</span> (i * i + i == num_two) &#123;</div><div class=\"line\">                <span class=\"keyword\">return</span> i;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">if</span> (i * i + i &gt; num_two) &#123;</div><div class=\"line\">                <span class=\"keyword\">return</span> i - <span class=\"number\">1</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"B-The-Time\"><a href=\"#B-The-Time\" class=\"headerlink\" title=\"B. The Time\"></a>B. The Time</h2><p>B题也比较简单，主要就注意几个边界条件即可以及格式化输出即可。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//num只有个位时，会自动在十位补0</span></div><div class=\"line\">DecimalFormat df=<span class=\"keyword\">new</span> DecimalFormat(<span class=\"string\">\"00\"</span>);</div><div class=\"line\">df.format(num);</div></pre></td></tr></table></figure>\n<h2 id=\"C-Not-Equal-on-a-Segment\"><a href=\"#C-Not-Equal-on-a-Segment\" class=\"headerlink\" title=\"C. Not Equal on a Segment\"></a>C. Not Equal on a Segment</h2><h3 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h3><p>题意为查询一个数组的某一区间是否存在指定的$$$x$$$不相同的数，若不存在输出-1，否则输出任意一个不相同的树的秩。<br></p>\n<h3 id=\"解法介绍\"><a href=\"#解法介绍\" class=\"headerlink\" title=\"解法介绍\"></a>解法介绍</h3><p>1.暴力解法就是遍历整个区间，但时间肯定不够。<br></p>\n<p>2.线段树法：线段树广泛用于区间查询，但是该题仅需输出任意一个不相同的树的位置即可，所以可以不用该法。(其实我还没有特别熟线段树)</p>\n<p>3.解法：设输入数据的数组为<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">创建一个数组```diff[]=new int[arrayLength]```使其任意秩```diff[i]```值为满足$$$ a_j \\ne a_i (j&gt;i) $$$的第一个j的值。这也是官方答案所给的解法。代码如下：&lt;br&gt;</div><div class=\"line\"></div><div class=\"line\">### 边界条件</div><div class=\"line\">该代码需要考虑到的边界条件有：&lt;br&gt;</div></pre></td></tr></table></figure></p>\n<p>1.数组内容全部相同<br>2.数组内容出现连续相同的项<br>3.数组内容全部不相同<br>4.diff数组的最后一项是否有值(统一将diff数组的最后一项设为数组长度)</p>\n<figure class=\"highlight zephir\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">### 代码</span></div><div class=\"line\"></div><div class=\"line\">```java</div><div class=\"line\"><span class=\"keyword\">int</span> tmpI=<span class=\"number\">0</span>;</div><div class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=tmpI+<span class=\"number\">1</span>;j&lt;arrayLength;)&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">array</span>[j]==<span class=\"keyword\">array</span>[tmpI]) &#123;</div><div class=\"line\">        j++;</div><div class=\"line\">        <span class=\"keyword\">continue</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">for</span>(;tmpI&lt;j;tmpI++)&#123;</div><div class=\"line\">        diff[tmpI]=j;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//若数组中最后出现连续相同的项，上述代码不能将这些项赋值为arrayLength</span></div><div class=\"line\"><span class=\"comment\">//所以需要下面的代码</span></div><div class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=tmpI;i&lt;arrayLength;i++)&#123;</div><div class=\"line\">    diff[i]=arrayLength;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">diff[arrayLength<span class=\"number\">-1</span>]=arrayLength;</div></pre></td></tr></table></figure>\n<p>查询时使用的代码:<br></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">try</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;queryTimes;i++)&#123;</div><div class=\"line\">        <span class=\"keyword\">int</span> left=getInt()-<span class=\"number\">1</span>;</div><div class=\"line\">        <span class=\"keyword\">int</span> right=getInt()-<span class=\"number\">1</span>;</div><div class=\"line\">        <span class=\"keyword\">int</span> x=getInt();</div><div class=\"line\">        <span class=\"keyword\">if</span>(array[left]!=x)&#123;</div><div class=\"line\">            writer.write((left+<span class=\"number\">1</span>)+<span class=\"string\">\"\\n\"</span>);</div><div class=\"line\">            <span class=\"keyword\">continue</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span>(diff[left]&gt;right)&#123;</div><div class=\"line\">            writer.write((-<span class=\"number\">1</span>)+<span class=\"string\">\"\\n\"</span>);</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">            writer.write((diff[left]+<span class=\"number\">1</span>)+<span class=\"string\">\"\\n\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    writer.flush();</div><div class=\"line\">&#125;<span class=\"keyword\">catch</span> (IOException e)&#123;</div><div class=\"line\">    e.printStackTrace();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"IO问题\"><a href=\"#IO问题\" class=\"headerlink\" title=\"IO问题\"></a>IO问题</h3><p>这一题以及下面的e题还有一个问题就是如果使用<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">我使用了[ java_acm快速输入和输出 ][1]中提供的一个输入输出方法，代码如下</div><div class=\"line\">#### 解决代码</div><div class=\"line\"></div><div class=\"line\">```java</div><div class=\"line\">public class Main &#123;  </div><div class=\"line\">    private static Reader reader = null;  </div><div class=\"line\">    private static Writer writer = null;  </div><div class=\"line\"></div><div class=\"line\">    public static void main(String[] args) &#123;  </div><div class=\"line\">        reader = new InputStreamReader(System.in);  </div><div class=\"line\">        writer = new OutputStreamWriter(System.out);  </div><div class=\"line\">        try &#123;  </div><div class=\"line\">                m = getInt();  </div><div class=\"line\">                writer.write(&quot;something&quot;);  </div><div class=\"line\">                writer.flush();  </div><div class=\"line\">            &#125;  </div><div class=\"line\">        &#125; catch (Exception e) &#123;  </div><div class=\"line\">            e.printStackTrace();  </div><div class=\"line\">        &#125;  </div><div class=\"line\">    &#125;  </div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * 获取键盘输入的整数</div><div class=\"line\">     *  </div><div class=\"line\">     * @return 输入的整数</div><div class=\"line\">     */  </div><div class=\"line\">    public static int getInt() &#123;  </div><div class=\"line\">        int read;  </div><div class=\"line\">        int res = 0;  </div><div class=\"line\">        boolean isNegative = false;// 是不是负数  </div><div class=\"line\">        try &#123;  </div><div class=\"line\">            while ((read = reader.read()) != -1) &#123;  </div><div class=\"line\">                if ((char) read == &apos;-&apos;) &#123;  </div><div class=\"line\">                    res = 0;  </div><div class=\"line\">                    isNegative = true;  </div><div class=\"line\">                    break;  </div><div class=\"line\">                &#125; else if (isNumber((char) read)) &#123;  </div><div class=\"line\">                    res = read - &apos;0&apos;;  </div><div class=\"line\">                    break;  </div><div class=\"line\">                &#125;  </div><div class=\"line\">            &#125;  </div><div class=\"line\">            while ((read = reader.read()) != -1) &#123;  </div><div class=\"line\">                char ch = (char) read;  </div><div class=\"line\">                if (isNumber(ch)) &#123;  </div><div class=\"line\">                    res = res * 10 + (read - &apos;0&apos;);  </div><div class=\"line\">                &#125; else &#123;  </div><div class=\"line\">                    break;  </div><div class=\"line\">                &#125;  </div><div class=\"line\">            &#125;  </div><div class=\"line\">        &#125; catch (IOException e) &#123;  </div><div class=\"line\">            // TODO Auto-generated catch block  </div><div class=\"line\">            e.printStackTrace();  </div><div class=\"line\">        &#125;  </div><div class=\"line\">        if (isNegative == true) &#123;  </div><div class=\"line\">            res = -1 * res;  </div><div class=\"line\">        &#125;  </div><div class=\"line\">        return res;  </div><div class=\"line\">    &#125;  </div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * 判断字符是否空白</div><div class=\"line\">     *  </div><div class=\"line\">     * @param ch</div><div class=\"line\">     *            字符</div><div class=\"line\">     * @return 判断结果</div><div class=\"line\">     */  </div><div class=\"line\">    public static boolean isBlank(char ch) &#123;  </div><div class=\"line\">        if (ch == &apos;\\r&apos; || ch == &apos;\\n&apos; || ch == &apos; &apos;) &#123;  </div><div class=\"line\">            return true;  </div><div class=\"line\">        &#125;  </div><div class=\"line\">        return false;  </div><div class=\"line\">    &#125;  </div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * 判断字符是不是数字</div><div class=\"line\">     *  </div><div class=\"line\">     * @param ch</div><div class=\"line\">     *            字符</div><div class=\"line\">     * @return 判断结果</div><div class=\"line\">     */  </div><div class=\"line\">    public static boolean isNumber(char ch) &#123;  </div><div class=\"line\">        if (ch &lt;= &apos;9&apos; &amp;&amp; ch &gt;= &apos;0&apos;) &#123;  </div><div class=\"line\">            return true;  </div><div class=\"line\">        &#125;  </div><div class=\"line\">        return false;  </div><div class=\"line\">    &#125;  </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h2 id=\"E-Ants-in-Leaves\"><a href=\"#E-Ants-in-Leaves\" class=\"headerlink\" title=\"E. Ants in Leaves\"></a>E. Ants in Leaves</h2><h3 id=\"题目-1\"><a href=\"#题目-1\" class=\"headerlink\" title=\"题目\"></a>题目</h3><p>You are given a tree with n vertices and a root in the vertex 1. There is an ant in each leaf of the tree. In one second some ants can simultaneously go to the parent vertex from the vertex they were in. No two ants can be in the same vertex simultaneously except for the root of the tree.<br></p>\n<p>Find the minimal time required for all ants to be in the root of the tree.<br></p>\n<p>题意：n只蚂蚁从树的叶节点向根节点爬，每秒只能爬到它的父节点处，但是除了根节点，其它所有节点都只能同时存在一只蚂蚁。<br></p>\n<h3 id=\"解法\"><a href=\"#解法\" class=\"headerlink\" title=\"解法\"></a>解法</h3><p>This problem was suggested by Aleksa Plavsic allllekssssa.</p>\n<p>Let z be the array of the depths of all leaves in the subtree of the vertex v. Let’s sort z.</p>\n<p>Statement 1: it’s profitable to lift the leaves in order of their appearing in z.</p>\n<p>Statement 2: denote ax — the time of appearing the x-th leaf in the vertex v, let’s consider the leaves $$$z<em>i$$$ and $$$z</em>{i+1}$$$ then  $$$a_{z<em>i+1} \\geq  a</em>{z_i}+1$$$.</p>\n<p>Statement 3: $$$a_{z<em>i+1}=max(d</em>{z<em>i}+1,a</em>{z_i}+1)$$$, where $$$d_x$$$ is the depth of the x-th leaf in the subtree of the vertex v. The last statement gives us the solution for the problem: we should simply iterate over z from left to right and recalculate the array a by formula from the third statement. All statements can be easily proved and it’s recommended to do by yourself to understand better the idea of the solution.</p>\n<h4 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h4><h5 id=\"建图\"><a href=\"#建图\" class=\"headerlink\" title=\"建图\"></a>建图</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">int</span> V=getInt();</div><div class=\"line\">    Graph G=<span class=\"keyword\">new</span> Graph(V,V-<span class=\"number\">1</span>);</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;V-<span class=\"number\">1</span>;i++)&#123;</div><div class=\"line\">        G.addEdge(getInt(),getInt());</div><div class=\"line\">    &#125;</div><div class=\"line\">    G.dfs();</div><div class=\"line\">    G.solve();</div></pre></td></tr></table></figure>\n<h5 id=\"dfs-详细代码\"><a href=\"#dfs-详细代码\" class=\"headerlink\" title=\"dfs()详细代码\"></a>dfs()详细代码</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">```java</div><div class=\"line\">public void dfs(int v)&#123;</div><div class=\"line\">//从根节点出发</div><div class=\"line\">    if(v==1)&#123;</div><div class=\"line\">        int rootSonsNum=adj[v].getConnectedvertexs().size();</div><div class=\"line\">        depthArray=new ArrayList[rootSonsNum];</div><div class=\"line\">        for(int i=0;i&lt;rootSonsNum;i++)&#123;</div><div class=\"line\">            depthArray[i]=new ArrayList&lt;&gt;();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    marked[v]=true;</div><div class=\"line\">    adj[v].setDepth(depth);</div><div class=\"line\">    if(adj[v].getDegree()==1)</div><div class=\"line\">        depthArray[count].add(adj[v].getDepth());</div><div class=\"line\">    depth++;</div><div class=\"line\">    for(Integer i:adj[v].getConnectedvertexs())&#123;</div><div class=\"line\">        if(!marked[i])&#123;</div><div class=\"line\">            dfs(i);</div><div class=\"line\">            depth--;</div><div class=\"line\">        &#125;</div><div class=\"line\">        if(v==1)&#123;</div><div class=\"line\">            count++;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public void dfs()&#123;</div><div class=\"line\">    dfs(1);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"solve-代码\"><a href=\"#solve-代码\" class=\"headerlink\" title=\"solve()代码\"></a>solve()代码</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">```java</div><div class=\"line\">public int solve()&#123;</div><div class=\"line\">    for(ArrayList&lt;Integer&gt; i:depthArray) &#123;</div><div class=\"line\">        Collections.sort(i);</div><div class=\"line\">//            i.sort(new Comparator&lt;Integer&gt;() &#123;</div><div class=\"line\">//                @Override</div><div class=\"line\">//                public int compare(Integer o1, Integer o2) &#123;</div><div class=\"line\">//                    if (o1 &gt; o2)</div><div class=\"line\">//                        return 1;</div><div class=\"line\">//                    else if (o1 == o2)</div><div class=\"line\">//                        return 0;</div><div class=\"line\">//                    else</div><div class=\"line\">//                        return -1;</div><div class=\"line\">//                &#125;</div><div class=\"line\">//            &#125;);</div><div class=\"line\"></div><div class=\"line\">/*</div><div class=\"line\">注释掉的代码在有些时候会出现</div><div class=\"line\">java.lang.IllegalArgumentException: Comparison method violates its general contract!。可见16057179提交的错误提示</div><div class=\"line\">*/</div><div class=\"line\"></div><div class=\"line\">    int res=0;</div><div class=\"line\">    for(ArrayList&lt;Integer&gt; i:depthArray)&#123;</div><div class=\"line\">        //System.out.println(i);</div><div class=\"line\">        int tmpres=i.get(0);</div><div class=\"line\">        int tmpIndex=1;</div><div class=\"line\">        while(tmpIndex&lt;i.size())&#123;</div><div class=\"line\">            tmpres=max(tmpres+1,i.get(tmpIndex));</div><div class=\"line\">            tmpIndex++;</div><div class=\"line\">        &#125;</div><div class=\"line\">        res=max(tmpres,res);</div><div class=\"line\">    &#125;</div><div class=\"line\">    System.out.println(res);</div><div class=\"line\">    return res;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<p><a href=\"http://codeforces.com/contest/622/\">题目网址</a></p>\n<h2 id=\"A-Infinite-Sequence\"><a href=\"#A-Infinite-Sequence\" class=\"headerlink\" title=\"A:Infinite Sequence\"></a>A:Infinite Sequence</h2><p>A题比较简单,主要就利用公式$$ \\sum_{k=1}^n k=\\frac {(1+n)*n}{2} $$来确定距离所要求的数字最近的一个1所在的位置。然后就可得到该数值了。<br><br>代码如下：</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Round7_A</span></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</div><div class=\"line\">        Scanner in=<span class=\"keyword\">new</span> Scanner(System.in);</div><div class=\"line\">        <span class=\"keyword\">long</span>  a=in.nextLong();</div><div class=\"line\">        <span class=\"keyword\">long</span> a_one=count(a);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span>(a_one*a_one+a_one==<span class=\"number\">2</span>*a)&#123;</div><div class=\"line\">            System.out.println(a_one);</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">            <span class=\"keyword\">long</span> tmp=(<span class=\"keyword\">long</span>)a-(a_one*a_one+a_one)/<span class=\"number\">2</span>;</div><div class=\"line\">            System.out.println(tmp);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">long</span> <span class=\"title\">count</span><span class=\"params\">(<span class=\"keyword\">long</span>  num)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">long</span> num_two = <span class=\"number\">2</span> * num;</div><div class=\"line\">        <span class=\"keyword\">long</span> i = (<span class=\"keyword\">long</span>) Math.sqrt(num_two) - <span class=\"number\">1</span>;</div><div class=\"line\">        <span class=\"comment\">//System.out.println(i);</span></div><div class=\"line\">        <span class=\"keyword\">if</span> (i &lt;= <span class=\"number\">0</span>) &#123;</div><div class=\"line\">            i = <span class=\"number\">0</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">for</span> (; i &lt;= num; i++) &#123;</div><div class=\"line\">            <span class=\"comment\">//System.out.println(i);</span></div><div class=\"line\">            <span class=\"keyword\">if</span> (i * i + i == num_two) &#123;</div><div class=\"line\">                <span class=\"keyword\">return</span> i;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">if</span> (i * i + i &gt; num_two) &#123;</div><div class=\"line\">                <span class=\"keyword\">return</span> i - <span class=\"number\">1</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"B-The-Time\"><a href=\"#B-The-Time\" class=\"headerlink\" title=\"B. The Time\"></a>B. The Time</h2><p>B题也比较简单，主要就注意几个边界条件即可以及格式化输出即可。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//num只有个位时，会自动在十位补0</span></div><div class=\"line\">DecimalFormat df=<span class=\"keyword\">new</span> DecimalFormat(<span class=\"string\">\"00\"</span>);</div><div class=\"line\">df.format(num);</div></pre></td></tr></table></figure>\n<h2 id=\"C-Not-Equal-on-a-Segment\"><a href=\"#C-Not-Equal-on-a-Segment\" class=\"headerlink\" title=\"C. Not Equal on a Segment\"></a>C. Not Equal on a Segment</h2><h3 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h3><p>题意为查询一个数组的某一区间是否存在指定的$$$x$$$不相同的数，若不存在输出-1，否则输出任意一个不相同的树的秩。<br></p>\n<h3 id=\"解法介绍\"><a href=\"#解法介绍\" class=\"headerlink\" title=\"解法介绍\"></a>解法介绍</h3><p>1.暴力解法就是遍历整个区间，但时间肯定不够。<br></p>\n<p>2.线段树法：线段树广泛用于区间查询，但是该题仅需输出任意一个不相同的树的位置即可，所以可以不用该法。(其实我还没有特别熟线段树)</p>\n<p>3.解法：设输入数据的数组为<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">创建一个数组```diff[]=new int[arrayLength]```使其任意秩```diff[i]```值为满足$$$ a_j \\ne a_i (j&gt;i) $$$的第一个j的值。这也是官方答案所给的解法。代码如下：&lt;br&gt;</div><div class=\"line\"></div><div class=\"line\">### 边界条件</div><div class=\"line\">该代码需要考虑到的边界条件有：&lt;br&gt;</div></pre></td></tr></table></figure></p>\n<p>1.数组内容全部相同<br>2.数组内容出现连续相同的项<br>3.数组内容全部不相同<br>4.diff数组的最后一项是否有值(统一将diff数组的最后一项设为数组长度)</p>\n<figure class=\"highlight zephir\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">### 代码</span></div><div class=\"line\"></div><div class=\"line\">```java</div><div class=\"line\"><span class=\"keyword\">int</span> tmpI=<span class=\"number\">0</span>;</div><div class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=tmpI+<span class=\"number\">1</span>;j&lt;arrayLength;)&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">array</span>[j]==<span class=\"keyword\">array</span>[tmpI]) &#123;</div><div class=\"line\">        j++;</div><div class=\"line\">        <span class=\"keyword\">continue</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">for</span>(;tmpI&lt;j;tmpI++)&#123;</div><div class=\"line\">        diff[tmpI]=j;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//若数组中最后出现连续相同的项，上述代码不能将这些项赋值为arrayLength</span></div><div class=\"line\"><span class=\"comment\">//所以需要下面的代码</span></div><div class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=tmpI;i&lt;arrayLength;i++)&#123;</div><div class=\"line\">    diff[i]=arrayLength;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">diff[arrayLength<span class=\"number\">-1</span>]=arrayLength;</div></pre></td></tr></table></figure>\n<p>查询时使用的代码:<br></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">try</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;queryTimes;i++)&#123;</div><div class=\"line\">        <span class=\"keyword\">int</span> left=getInt()-<span class=\"number\">1</span>;</div><div class=\"line\">        <span class=\"keyword\">int</span> right=getInt()-<span class=\"number\">1</span>;</div><div class=\"line\">        <span class=\"keyword\">int</span> x=getInt();</div><div class=\"line\">        <span class=\"keyword\">if</span>(array[left]!=x)&#123;</div><div class=\"line\">            writer.write((left+<span class=\"number\">1</span>)+<span class=\"string\">\"\\n\"</span>);</div><div class=\"line\">            <span class=\"keyword\">continue</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span>(diff[left]&gt;right)&#123;</div><div class=\"line\">            writer.write((-<span class=\"number\">1</span>)+<span class=\"string\">\"\\n\"</span>);</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">            writer.write((diff[left]+<span class=\"number\">1</span>)+<span class=\"string\">\"\\n\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    writer.flush();</div><div class=\"line\">&#125;<span class=\"keyword\">catch</span> (IOException e)&#123;</div><div class=\"line\">    e.printStackTrace();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"IO问题\"><a href=\"#IO问题\" class=\"headerlink\" title=\"IO问题\"></a>IO问题</h3><p>这一题以及下面的e题还有一个问题就是如果使用<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">我使用了[ java_acm快速输入和输出 ][1]中提供的一个输入输出方法，代码如下</div><div class=\"line\">#### 解决代码</div><div class=\"line\"></div><div class=\"line\">```java</div><div class=\"line\">public class Main &#123;  </div><div class=\"line\">    private static Reader reader = null;  </div><div class=\"line\">    private static Writer writer = null;  </div><div class=\"line\"></div><div class=\"line\">    public static void main(String[] args) &#123;  </div><div class=\"line\">        reader = new InputStreamReader(System.in);  </div><div class=\"line\">        writer = new OutputStreamWriter(System.out);  </div><div class=\"line\">        try &#123;  </div><div class=\"line\">                m = getInt();  </div><div class=\"line\">                writer.write(&quot;something&quot;);  </div><div class=\"line\">                writer.flush();  </div><div class=\"line\">            &#125;  </div><div class=\"line\">        &#125; catch (Exception e) &#123;  </div><div class=\"line\">            e.printStackTrace();  </div><div class=\"line\">        &#125;  </div><div class=\"line\">    &#125;  </div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * 获取键盘输入的整数</div><div class=\"line\">     *  </div><div class=\"line\">     * @return 输入的整数</div><div class=\"line\">     */  </div><div class=\"line\">    public static int getInt() &#123;  </div><div class=\"line\">        int read;  </div><div class=\"line\">        int res = 0;  </div><div class=\"line\">        boolean isNegative = false;// 是不是负数  </div><div class=\"line\">        try &#123;  </div><div class=\"line\">            while ((read = reader.read()) != -1) &#123;  </div><div class=\"line\">                if ((char) read == &apos;-&apos;) &#123;  </div><div class=\"line\">                    res = 0;  </div><div class=\"line\">                    isNegative = true;  </div><div class=\"line\">                    break;  </div><div class=\"line\">                &#125; else if (isNumber((char) read)) &#123;  </div><div class=\"line\">                    res = read - &apos;0&apos;;  </div><div class=\"line\">                    break;  </div><div class=\"line\">                &#125;  </div><div class=\"line\">            &#125;  </div><div class=\"line\">            while ((read = reader.read()) != -1) &#123;  </div><div class=\"line\">                char ch = (char) read;  </div><div class=\"line\">                if (isNumber(ch)) &#123;  </div><div class=\"line\">                    res = res * 10 + (read - &apos;0&apos;);  </div><div class=\"line\">                &#125; else &#123;  </div><div class=\"line\">                    break;  </div><div class=\"line\">                &#125;  </div><div class=\"line\">            &#125;  </div><div class=\"line\">        &#125; catch (IOException e) &#123;  </div><div class=\"line\">            // TODO Auto-generated catch block  </div><div class=\"line\">            e.printStackTrace();  </div><div class=\"line\">        &#125;  </div><div class=\"line\">        if (isNegative == true) &#123;  </div><div class=\"line\">            res = -1 * res;  </div><div class=\"line\">        &#125;  </div><div class=\"line\">        return res;  </div><div class=\"line\">    &#125;  </div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * 判断字符是否空白</div><div class=\"line\">     *  </div><div class=\"line\">     * @param ch</div><div class=\"line\">     *            字符</div><div class=\"line\">     * @return 判断结果</div><div class=\"line\">     */  </div><div class=\"line\">    public static boolean isBlank(char ch) &#123;  </div><div class=\"line\">        if (ch == &apos;\\r&apos; || ch == &apos;\\n&apos; || ch == &apos; &apos;) &#123;  </div><div class=\"line\">            return true;  </div><div class=\"line\">        &#125;  </div><div class=\"line\">        return false;  </div><div class=\"line\">    &#125;  </div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * 判断字符是不是数字</div><div class=\"line\">     *  </div><div class=\"line\">     * @param ch</div><div class=\"line\">     *            字符</div><div class=\"line\">     * @return 判断结果</div><div class=\"line\">     */  </div><div class=\"line\">    public static boolean isNumber(char ch) &#123;  </div><div class=\"line\">        if (ch &lt;= &apos;9&apos; &amp;&amp; ch &gt;= &apos;0&apos;) &#123;  </div><div class=\"line\">            return true;  </div><div class=\"line\">        &#125;  </div><div class=\"line\">        return false;  </div><div class=\"line\">    &#125;  </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h2 id=\"E-Ants-in-Leaves\"><a href=\"#E-Ants-in-Leaves\" class=\"headerlink\" title=\"E. Ants in Leaves\"></a>E. Ants in Leaves</h2><h3 id=\"题目-1\"><a href=\"#题目-1\" class=\"headerlink\" title=\"题目\"></a>题目</h3><p>You are given a tree with n vertices and a root in the vertex 1. There is an ant in each leaf of the tree. In one second some ants can simultaneously go to the parent vertex from the vertex they were in. No two ants can be in the same vertex simultaneously except for the root of the tree.<br></p>\n<p>Find the minimal time required for all ants to be in the root of the tree.<br></p>\n<p>题意：n只蚂蚁从树的叶节点向根节点爬，每秒只能爬到它的父节点处，但是除了根节点，其它所有节点都只能同时存在一只蚂蚁。<br></p>\n<h3 id=\"解法\"><a href=\"#解法\" class=\"headerlink\" title=\"解法\"></a>解法</h3><p>This problem was suggested by Aleksa Plavsic allllekssssa.</p>\n<p>Let z be the array of the depths of all leaves in the subtree of the vertex v. Let’s sort z.</p>\n<p>Statement 1: it’s profitable to lift the leaves in order of their appearing in z.</p>\n<p>Statement 2: denote ax — the time of appearing the x-th leaf in the vertex v, let’s consider the leaves $$$z<em>i$$$ and $$$z</em>{i+1}$$$ then  $$$a_{z<em>i+1} \\geq  a</em>{z_i}+1$$$.</p>\n<p>Statement 3: $$$a_{z<em>i+1}=max(d</em>{z<em>i}+1,a</em>{z_i}+1)$$$, where $$$d_x$$$ is the depth of the x-th leaf in the subtree of the vertex v. The last statement gives us the solution for the problem: we should simply iterate over z from left to right and recalculate the array a by formula from the third statement. All statements can be easily proved and it’s recommended to do by yourself to understand better the idea of the solution.</p>\n<h4 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h4><h5 id=\"建图\"><a href=\"#建图\" class=\"headerlink\" title=\"建图\"></a>建图</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">int</span> V=getInt();</div><div class=\"line\">    Graph G=<span class=\"keyword\">new</span> Graph(V,V-<span class=\"number\">1</span>);</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;V-<span class=\"number\">1</span>;i++)&#123;</div><div class=\"line\">        G.addEdge(getInt(),getInt());</div><div class=\"line\">    &#125;</div><div class=\"line\">    G.dfs();</div><div class=\"line\">    G.solve();</div></pre></td></tr></table></figure>\n<h5 id=\"dfs-详细代码\"><a href=\"#dfs-详细代码\" class=\"headerlink\" title=\"dfs()详细代码\"></a>dfs()详细代码</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">```java</div><div class=\"line\">public void dfs(int v)&#123;</div><div class=\"line\">//从根节点出发</div><div class=\"line\">    if(v==1)&#123;</div><div class=\"line\">        int rootSonsNum=adj[v].getConnectedvertexs().size();</div><div class=\"line\">        depthArray=new ArrayList[rootSonsNum];</div><div class=\"line\">        for(int i=0;i&lt;rootSonsNum;i++)&#123;</div><div class=\"line\">            depthArray[i]=new ArrayList&lt;&gt;();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    marked[v]=true;</div><div class=\"line\">    adj[v].setDepth(depth);</div><div class=\"line\">    if(adj[v].getDegree()==1)</div><div class=\"line\">        depthArray[count].add(adj[v].getDepth());</div><div class=\"line\">    depth++;</div><div class=\"line\">    for(Integer i:adj[v].getConnectedvertexs())&#123;</div><div class=\"line\">        if(!marked[i])&#123;</div><div class=\"line\">            dfs(i);</div><div class=\"line\">            depth--;</div><div class=\"line\">        &#125;</div><div class=\"line\">        if(v==1)&#123;</div><div class=\"line\">            count++;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public void dfs()&#123;</div><div class=\"line\">    dfs(1);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"solve-代码\"><a href=\"#solve-代码\" class=\"headerlink\" title=\"solve()代码\"></a>solve()代码</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">```java</div><div class=\"line\">public int solve()&#123;</div><div class=\"line\">    for(ArrayList&lt;Integer&gt; i:depthArray) &#123;</div><div class=\"line\">        Collections.sort(i);</div><div class=\"line\">//            i.sort(new Comparator&lt;Integer&gt;() &#123;</div><div class=\"line\">//                @Override</div><div class=\"line\">//                public int compare(Integer o1, Integer o2) &#123;</div><div class=\"line\">//                    if (o1 &gt; o2)</div><div class=\"line\">//                        return 1;</div><div class=\"line\">//                    else if (o1 == o2)</div><div class=\"line\">//                        return 0;</div><div class=\"line\">//                    else</div><div class=\"line\">//                        return -1;</div><div class=\"line\">//                &#125;</div><div class=\"line\">//            &#125;);</div><div class=\"line\"></div><div class=\"line\">/*</div><div class=\"line\">注释掉的代码在有些时候会出现</div><div class=\"line\">java.lang.IllegalArgumentException: Comparison method violates its general contract!。可见16057179提交的错误提示</div><div class=\"line\">*/</div><div class=\"line\"></div><div class=\"line\">    int res=0;</div><div class=\"line\">    for(ArrayList&lt;Integer&gt; i:depthArray)&#123;</div><div class=\"line\">        //System.out.println(i);</div><div class=\"line\">        int tmpres=i.get(0);</div><div class=\"line\">        int tmpIndex=1;</div><div class=\"line\">        while(tmpIndex&lt;i.size())&#123;</div><div class=\"line\">            tmpres=max(tmpres+1,i.get(tmpIndex));</div><div class=\"line\">            tmpIndex++;</div><div class=\"line\">        &#125;</div><div class=\"line\">        res=max(tmpres,res);</div><div class=\"line\">    &#125;</div><div class=\"line\">    System.out.println(res);</div><div class=\"line\">    return res;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"},{"author":"ivyxjc","date":"2016-09-23T16:00:00.000Z","title":"ActionBarCompat","keywords":null,"description":"如何添加菜单项, 以及如何在运行时更改菜单项.","_content":"\n\n```xml\nvalues/style\n\n## 布局文件中添加menu\n\n```xml\nmenu_main.xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<menu xmlns:android=\"http://schemas.android.com/apk/res/android\"\n      xmlns:support=\"http://schemas.android.com/apk/res-auto\"\n    >\n    <item\n        android:id=\"@+id/menu_setting\"\n        android:icon=\"@mipmap/ic_action_settings\"\n        android:title=\"@string/menu_setting\"\n        support:showAsAction=\"never\"/>\n    <item\n        android:id=\"@+id/menu_refresh\"\n        android:icon=\"@mipmap/ic_action_refresh\"\n        android:title=\"@string/menu_refresh\"\n        support:showAsAction=\"always\"/>\n</menu>\n```\n\n## Activity中添加menu\n\n```xml\nvalues/ids.xml\n<resources>\n    <item name=\"menu_location\" type=\"id\"/>\n</resources>\n```\n\n```java\n@Override\npublic boolean onCreateOptionsMenu(Menu menu) {\n    getMenuInflater().inflate(R.menu.menu_main,menu);\n    MenuItem location=menu.add(0,R.id.menu_location,0,\"Location\");\n    location.setIcon(R.mipmap.ic_action_location);\n    MenuItemCompat.setShowAsAction(location,MenuItemCompat.SHOW_AS_ACTION_IF_ROOM);\n    return true;\n}\n\n@Override\npublic boolean onOptionsItemSelected(MenuItem item) {\n    switch (item.getItemId()){\n        case R.id.menu_setting:\n            return true;\n        case R.id.menu_location:\n            return true;\n        case R.id.menu_refresh:\n            return true;\n    }\n    return super.onOptionsItemSelected(item);\n}\n```\n\n## 用法\n\n### 运行时更改菜单项\n\n```java\nmButtonForbidRefresh.setOnClickListener(new View.OnClickListener() {\n           private int i=0;\n           @Override\n           public void onClick(View view) {\n               i++;\n               if(i%2==1)\n                   mButtonForbidRefresh.setActivated(true);\n               else\n                   mButtonForbidRefresh.setActivated(false);\n               invalidateOptionsMenu();\n           }\n       });\n```\n\n\n```java\n@Override\n    public boolean onPrepareOptionsMenu(Menu menu) {\n        menu.clear();\n        getMenuInflater().inflate(R.menu.menu_main, menu);\n        MenuItem item=menu.findItem(R.id.menu_refresh);\n        if(mButtonForbidRefresh.isActivated()){\n           item.setEnabled(false);\n        }\n\n        MenuItem location = menu.add(0, R.id.menu_location, Menu.CATEGORY_SECONDARY, \"Location\");\n        location.setIcon(R.mipmap.ic_action_location);\n        MenuItemCompat.setShowAsAction(location, MenuItemCompat.SHOW_AS_ACTION_IF_ROOM);\n\n        return super.onPrepareOptionsMenu(menu);\n    }\n```\n\n### onPrepareOptionsMenu(Menu menu)和onCreateOptionsMenu(Menu menu)区别\n`onCreateOptionsMenu(Menu menu)`只在最初的时候会调用每次点击menu都会\n调用一次`onPrepareOptionsMenu(Menu menu)`.使用`invalidateOptionsMenu()`\n会直接调用onPrepareOptionsMenu(Menu menu);\n\n\n### 多个Activity共用相同ActionBar\n\n如果应用包含多个 Activity，且其中某些 Activity 提供相同的选项菜单，则可考虑创建一个仅\n实现`onCreateOptionsMenu()` 和 `onOptionsItemSelected()`方法的 Activity。然后，\n为每个应共享相同选项菜单的 Activity 扩展此类。 通过这种方式，您可以管理一个用于\n处理菜单操作的代码集，且每个子级类均会继承菜单行为。若要将菜单项添加到一个\n子级 Activity，请重写该 Activity 中的 `onCreateOptionsMenu()`。\n调用 `super.onCreateOptionsMenu(menu)`，以便创建原始菜单项，\n然后使用 `menu.add()` 添加新菜单项。此外，您还可以替代各个菜单项的超类行为。\n","source":"_posts/android/AndroidSamples/UI/2016-09-24-ActionBar-Basic.md","raw":"---\nauthor: ivyxjc\ndate: 2016-09-24\ntitle: ActionBarCompat\ncategory: Android\ntags: [android,android_UI]\nkeywords:\ndescription: 如何添加菜单项, 以及如何在运行时更改菜单项.\n---\n\n\n```xml\nvalues/style\n\n## 布局文件中添加menu\n\n```xml\nmenu_main.xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<menu xmlns:android=\"http://schemas.android.com/apk/res/android\"\n      xmlns:support=\"http://schemas.android.com/apk/res-auto\"\n    >\n    <item\n        android:id=\"@+id/menu_setting\"\n        android:icon=\"@mipmap/ic_action_settings\"\n        android:title=\"@string/menu_setting\"\n        support:showAsAction=\"never\"/>\n    <item\n        android:id=\"@+id/menu_refresh\"\n        android:icon=\"@mipmap/ic_action_refresh\"\n        android:title=\"@string/menu_refresh\"\n        support:showAsAction=\"always\"/>\n</menu>\n```\n\n## Activity中添加menu\n\n```xml\nvalues/ids.xml\n<resources>\n    <item name=\"menu_location\" type=\"id\"/>\n</resources>\n```\n\n```java\n@Override\npublic boolean onCreateOptionsMenu(Menu menu) {\n    getMenuInflater().inflate(R.menu.menu_main,menu);\n    MenuItem location=menu.add(0,R.id.menu_location,0,\"Location\");\n    location.setIcon(R.mipmap.ic_action_location);\n    MenuItemCompat.setShowAsAction(location,MenuItemCompat.SHOW_AS_ACTION_IF_ROOM);\n    return true;\n}\n\n@Override\npublic boolean onOptionsItemSelected(MenuItem item) {\n    switch (item.getItemId()){\n        case R.id.menu_setting:\n            return true;\n        case R.id.menu_location:\n            return true;\n        case R.id.menu_refresh:\n            return true;\n    }\n    return super.onOptionsItemSelected(item);\n}\n```\n\n## 用法\n\n### 运行时更改菜单项\n\n```java\nmButtonForbidRefresh.setOnClickListener(new View.OnClickListener() {\n           private int i=0;\n           @Override\n           public void onClick(View view) {\n               i++;\n               if(i%2==1)\n                   mButtonForbidRefresh.setActivated(true);\n               else\n                   mButtonForbidRefresh.setActivated(false);\n               invalidateOptionsMenu();\n           }\n       });\n```\n\n\n```java\n@Override\n    public boolean onPrepareOptionsMenu(Menu menu) {\n        menu.clear();\n        getMenuInflater().inflate(R.menu.menu_main, menu);\n        MenuItem item=menu.findItem(R.id.menu_refresh);\n        if(mButtonForbidRefresh.isActivated()){\n           item.setEnabled(false);\n        }\n\n        MenuItem location = menu.add(0, R.id.menu_location, Menu.CATEGORY_SECONDARY, \"Location\");\n        location.setIcon(R.mipmap.ic_action_location);\n        MenuItemCompat.setShowAsAction(location, MenuItemCompat.SHOW_AS_ACTION_IF_ROOM);\n\n        return super.onPrepareOptionsMenu(menu);\n    }\n```\n\n### onPrepareOptionsMenu(Menu menu)和onCreateOptionsMenu(Menu menu)区别\n`onCreateOptionsMenu(Menu menu)`只在最初的时候会调用每次点击menu都会\n调用一次`onPrepareOptionsMenu(Menu menu)`.使用`invalidateOptionsMenu()`\n会直接调用onPrepareOptionsMenu(Menu menu);\n\n\n### 多个Activity共用相同ActionBar\n\n如果应用包含多个 Activity，且其中某些 Activity 提供相同的选项菜单，则可考虑创建一个仅\n实现`onCreateOptionsMenu()` 和 `onOptionsItemSelected()`方法的 Activity。然后，\n为每个应共享相同选项菜单的 Activity 扩展此类。 通过这种方式，您可以管理一个用于\n处理菜单操作的代码集，且每个子级类均会继承菜单行为。若要将菜单项添加到一个\n子级 Activity，请重写该 Activity 中的 `onCreateOptionsMenu()`。\n调用 `super.onCreateOptionsMenu(menu)`，以便创建原始菜单项，\n然后使用 `menu.add()` 添加新菜单项。此外，您还可以替代各个菜单项的超类行为。\n","slug":"android/AndroidSamples/UI/2016-09-24-ActionBar-Basic","published":1,"updated":"2016-10-13T06:59:12.804Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f011o0041cwjr3qpl508e","content":"<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">values/style</div><div class=\"line\"></div><div class=\"line\">## 布局文件中添加menu</div><div class=\"line\"></div><div class=\"line\">```xml</div><div class=\"line\">menu_main.xml</div><div class=\"line\"><span class=\"php\"><span class=\"meta\">&lt;?</span>xml version=<span class=\"string\">\"1.0\"</span> encoding=<span class=\"string\">\"utf-8\"</span><span class=\"meta\">?&gt;</span></span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">menu</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></span></div><div class=\"line\">      <span class=\"attr\">xmlns:support</span>=<span class=\"string\">\"http://schemas.android.com/apk/res-auto\"</span></div><div class=\"line\">    &gt;</div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span></span></div><div class=\"line\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/menu_setting\"</span></div><div class=\"line\">        <span class=\"attr\">android:icon</span>=<span class=\"string\">\"@mipmap/ic_action_settings\"</span></div><div class=\"line\">        <span class=\"attr\">android:title</span>=<span class=\"string\">\"@string/menu_setting\"</span></div><div class=\"line\">        <span class=\"attr\">support:showAsAction</span>=<span class=\"string\">\"never\"</span>/&gt;</div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span></span></div><div class=\"line\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/menu_refresh\"</span></div><div class=\"line\">        <span class=\"attr\">android:icon</span>=<span class=\"string\">\"@mipmap/ic_action_refresh\"</span></div><div class=\"line\">        <span class=\"attr\">android:title</span>=<span class=\"string\">\"@string/menu_refresh\"</span></div><div class=\"line\">        <span class=\"attr\">support:showAsAction</span>=<span class=\"string\">\"always\"</span>/&gt;</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">menu</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Activity中添加menu\"><a href=\"#Activity中添加menu\" class=\"headerlink\" title=\"Activity中添加menu\"></a>Activity中添加menu</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">values/ids.xml</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">resources</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"menu_location\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"id\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">resources</span>&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Override</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onCreateOptionsMenu</span><span class=\"params\">(Menu menu)</span> </span>&#123;</div><div class=\"line\">    getMenuInflater().inflate(R.menu.menu_main,menu);</div><div class=\"line\">    MenuItem location=menu.add(<span class=\"number\">0</span>,R.id.menu_location,<span class=\"number\">0</span>,<span class=\"string\">\"Location\"</span>);</div><div class=\"line\">    location.setIcon(R.mipmap.ic_action_location);</div><div class=\"line\">    MenuItemCompat.setShowAsAction(location,MenuItemCompat.SHOW_AS_ACTION_IF_ROOM);</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@Override</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onOptionsItemSelected</span><span class=\"params\">(MenuItem item)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">switch</span> (item.getItemId())&#123;</div><div class=\"line\">        <span class=\"keyword\">case</span> R.id.menu_setting:</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">        <span class=\"keyword\">case</span> R.id.menu_location:</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">        <span class=\"keyword\">case</span> R.id.menu_refresh:</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">super</span>.onOptionsItemSelected(item);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h2><h3 id=\"运行时更改菜单项\"><a href=\"#运行时更改菜单项\" class=\"headerlink\" title=\"运行时更改菜单项\"></a>运行时更改菜单项</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">mButtonForbidRefresh.setOnClickListener(<span class=\"keyword\">new</span> View.OnClickListener() &#123;</div><div class=\"line\">           <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;</div><div class=\"line\">           <span class=\"meta\">@Override</span></div><div class=\"line\">           <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View view)</span> </span>&#123;</div><div class=\"line\">               i++;</div><div class=\"line\">               <span class=\"keyword\">if</span>(i%<span class=\"number\">2</span>==<span class=\"number\">1</span>)</div><div class=\"line\">                   mButtonForbidRefresh.setActivated(<span class=\"keyword\">true</span>);</div><div class=\"line\">               <span class=\"keyword\">else</span></div><div class=\"line\">                   mButtonForbidRefresh.setActivated(<span class=\"keyword\">false</span>);</div><div class=\"line\">               invalidateOptionsMenu();</div><div class=\"line\">           &#125;</div><div class=\"line\">       &#125;);</div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onPrepareOptionsMenu</span><span class=\"params\">(Menu menu)</span> </span>&#123;</div><div class=\"line\">        menu.clear();</div><div class=\"line\">        getMenuInflater().inflate(R.menu.menu_main, menu);</div><div class=\"line\">        MenuItem item=menu.findItem(R.id.menu_refresh);</div><div class=\"line\">        <span class=\"keyword\">if</span>(mButtonForbidRefresh.isActivated())&#123;</div><div class=\"line\">           item.setEnabled(<span class=\"keyword\">false</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        MenuItem location = menu.add(<span class=\"number\">0</span>, R.id.menu_location, Menu.CATEGORY_SECONDARY, <span class=\"string\">\"Location\"</span>);</div><div class=\"line\">        location.setIcon(R.mipmap.ic_action_location);</div><div class=\"line\">        MenuItemCompat.setShowAsAction(location, MenuItemCompat.SHOW_AS_ACTION_IF_ROOM);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">super</span>.onPrepareOptionsMenu(menu);</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<h3 id=\"onPrepareOptionsMenu-Menu-menu-和onCreateOptionsMenu-Menu-menu-区别\"><a href=\"#onPrepareOptionsMenu-Menu-menu-和onCreateOptionsMenu-Menu-menu-区别\" class=\"headerlink\" title=\"onPrepareOptionsMenu(Menu menu)和onCreateOptionsMenu(Menu menu)区别\"></a>onPrepareOptionsMenu(Menu menu)和onCreateOptionsMenu(Menu menu)区别</h3><p><code>onCreateOptionsMenu(Menu menu)</code>只在最初的时候会调用每次点击menu都会<br>调用一次<code>onPrepareOptionsMenu(Menu menu)</code>.使用<code>invalidateOptionsMenu()</code><br>会直接调用onPrepareOptionsMenu(Menu menu);</p>\n<h3 id=\"多个Activity共用相同ActionBar\"><a href=\"#多个Activity共用相同ActionBar\" class=\"headerlink\" title=\"多个Activity共用相同ActionBar\"></a>多个Activity共用相同ActionBar</h3><p>如果应用包含多个 Activity，且其中某些 Activity 提供相同的选项菜单，则可考虑创建一个仅<br>实现<code>onCreateOptionsMenu()</code> 和 <code>onOptionsItemSelected()</code>方法的 Activity。然后，<br>为每个应共享相同选项菜单的 Activity 扩展此类。 通过这种方式，您可以管理一个用于<br>处理菜单操作的代码集，且每个子级类均会继承菜单行为。若要将菜单项添加到一个<br>子级 Activity，请重写该 Activity 中的 <code>onCreateOptionsMenu()</code>。<br>调用 <code>super.onCreateOptionsMenu(menu)</code>，以便创建原始菜单项，<br>然后使用 <code>menu.add()</code> 添加新菜单项。此外，您还可以替代各个菜单项的超类行为。</p>\n","excerpt":"","more":"<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">values/style</div><div class=\"line\"></div><div class=\"line\">## 布局文件中添加menu</div><div class=\"line\"></div><div class=\"line\">```xml</div><div class=\"line\">menu_main.xml</div><div class=\"line\"><span class=\"php\"><span class=\"meta\">&lt;?</span>xml version=<span class=\"string\">\"1.0\"</span> encoding=<span class=\"string\">\"utf-8\"</span><span class=\"meta\">?&gt;</span></span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">menu</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></div><div class=\"line\">      <span class=\"attr\">xmlns:support</span>=<span class=\"string\">\"http://schemas.android.com/apk/res-auto\"</span></div><div class=\"line\">    &gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span></div><div class=\"line\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/menu_setting\"</span></div><div class=\"line\">        <span class=\"attr\">android:icon</span>=<span class=\"string\">\"@mipmap/ic_action_settings\"</span></div><div class=\"line\">        <span class=\"attr\">android:title</span>=<span class=\"string\">\"@string/menu_setting\"</span></div><div class=\"line\">        <span class=\"attr\">support:showAsAction</span>=<span class=\"string\">\"never\"</span>/&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span></div><div class=\"line\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/menu_refresh\"</span></div><div class=\"line\">        <span class=\"attr\">android:icon</span>=<span class=\"string\">\"@mipmap/ic_action_refresh\"</span></div><div class=\"line\">        <span class=\"attr\">android:title</span>=<span class=\"string\">\"@string/menu_refresh\"</span></div><div class=\"line\">        <span class=\"attr\">support:showAsAction</span>=<span class=\"string\">\"always\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">menu</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Activity中添加menu\"><a href=\"#Activity中添加menu\" class=\"headerlink\" title=\"Activity中添加menu\"></a>Activity中添加menu</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">values/ids.xml</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">resources</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"menu_location\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"id\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">resources</span>&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Override</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onCreateOptionsMenu</span><span class=\"params\">(Menu menu)</span> </span>&#123;</div><div class=\"line\">    getMenuInflater().inflate(R.menu.menu_main,menu);</div><div class=\"line\">    MenuItem location=menu.add(<span class=\"number\">0</span>,R.id.menu_location,<span class=\"number\">0</span>,<span class=\"string\">\"Location\"</span>);</div><div class=\"line\">    location.setIcon(R.mipmap.ic_action_location);</div><div class=\"line\">    MenuItemCompat.setShowAsAction(location,MenuItemCompat.SHOW_AS_ACTION_IF_ROOM);</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@Override</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onOptionsItemSelected</span><span class=\"params\">(MenuItem item)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">switch</span> (item.getItemId())&#123;</div><div class=\"line\">        <span class=\"keyword\">case</span> R.id.menu_setting:</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">        <span class=\"keyword\">case</span> R.id.menu_location:</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">        <span class=\"keyword\">case</span> R.id.menu_refresh:</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">super</span>.onOptionsItemSelected(item);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h2><h3 id=\"运行时更改菜单项\"><a href=\"#运行时更改菜单项\" class=\"headerlink\" title=\"运行时更改菜单项\"></a>运行时更改菜单项</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">mButtonForbidRefresh.setOnClickListener(<span class=\"keyword\">new</span> View.OnClickListener() &#123;</div><div class=\"line\">           <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;</div><div class=\"line\">           <span class=\"meta\">@Override</span></div><div class=\"line\">           <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View view)</span> </span>&#123;</div><div class=\"line\">               i++;</div><div class=\"line\">               <span class=\"keyword\">if</span>(i%<span class=\"number\">2</span>==<span class=\"number\">1</span>)</div><div class=\"line\">                   mButtonForbidRefresh.setActivated(<span class=\"keyword\">true</span>);</div><div class=\"line\">               <span class=\"keyword\">else</span></div><div class=\"line\">                   mButtonForbidRefresh.setActivated(<span class=\"keyword\">false</span>);</div><div class=\"line\">               invalidateOptionsMenu();</div><div class=\"line\">           &#125;</div><div class=\"line\">       &#125;);</div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onPrepareOptionsMenu</span><span class=\"params\">(Menu menu)</span> </span>&#123;</div><div class=\"line\">        menu.clear();</div><div class=\"line\">        getMenuInflater().inflate(R.menu.menu_main, menu);</div><div class=\"line\">        MenuItem item=menu.findItem(R.id.menu_refresh);</div><div class=\"line\">        <span class=\"keyword\">if</span>(mButtonForbidRefresh.isActivated())&#123;</div><div class=\"line\">           item.setEnabled(<span class=\"keyword\">false</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        MenuItem location = menu.add(<span class=\"number\">0</span>, R.id.menu_location, Menu.CATEGORY_SECONDARY, <span class=\"string\">\"Location\"</span>);</div><div class=\"line\">        location.setIcon(R.mipmap.ic_action_location);</div><div class=\"line\">        MenuItemCompat.setShowAsAction(location, MenuItemCompat.SHOW_AS_ACTION_IF_ROOM);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">super</span>.onPrepareOptionsMenu(menu);</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<h3 id=\"onPrepareOptionsMenu-Menu-menu-和onCreateOptionsMenu-Menu-menu-区别\"><a href=\"#onPrepareOptionsMenu-Menu-menu-和onCreateOptionsMenu-Menu-menu-区别\" class=\"headerlink\" title=\"onPrepareOptionsMenu(Menu menu)和onCreateOptionsMenu(Menu menu)区别\"></a>onPrepareOptionsMenu(Menu menu)和onCreateOptionsMenu(Menu menu)区别</h3><p><code>onCreateOptionsMenu(Menu menu)</code>只在最初的时候会调用每次点击menu都会<br>调用一次<code>onPrepareOptionsMenu(Menu menu)</code>.使用<code>invalidateOptionsMenu()</code><br>会直接调用onPrepareOptionsMenu(Menu menu);</p>\n<h3 id=\"多个Activity共用相同ActionBar\"><a href=\"#多个Activity共用相同ActionBar\" class=\"headerlink\" title=\"多个Activity共用相同ActionBar\"></a>多个Activity共用相同ActionBar</h3><p>如果应用包含多个 Activity，且其中某些 Activity 提供相同的选项菜单，则可考虑创建一个仅<br>实现<code>onCreateOptionsMenu()</code> 和 <code>onOptionsItemSelected()</code>方法的 Activity。然后，<br>为每个应共享相同选项菜单的 Activity 扩展此类。 通过这种方式，您可以管理一个用于<br>处理菜单操作的代码集，且每个子级类均会继承菜单行为。若要将菜单项添加到一个<br>子级 Activity，请重写该 Activity 中的 <code>onCreateOptionsMenu()</code>。<br>调用 <code>super.onCreateOptionsMenu(menu)</code>，以便创建原始菜单项，<br>然后使用 <code>menu.add()</code> 添加新菜单项。此外，您还可以替代各个菜单项的超类行为。</p>\n"},{"author":"ivyxjc","date":"2016-03-08T16:00:00.000Z","title":"Fragment初步","keywords":null,"description":null,"_content":"\n## Fragment概要\n![](http://oezmbgg4j.bkt.clouddn.com/fragmentIntro.png)\n\n## **onCreateView()**方法\n\nFragment第一次绘制它的用户界面时，系统会调用此方法。为了方便绘制Fragment的UI，此方法必须返回一个View，如果不显示UI，返回null。\n\n\n### 标识Fragment方法\n\nandroid:id 提供一个唯一的ID 或\nandroid:tag 提供一个唯一的字符串tag\n\n## 静态加载\n\n在**Activity**的layout文件中声明**Fragment**，其中**android:name**属性制定了在layout中实例化的Fragment类。\n\n静态加载Fragment必须要给Fragment一个唯一的标识。\n\n文件目录：<br>\n——src<br>\n————Fragment_1.java (extends Fragment)<br>\n————Fragment_2.java   (extends Activity)<br>\n————MainActivity.java\t(extends Activity)<br>\n<br>\n——layout<br>\n————fragment_1.xml<br>\n————fragment_2.xml<br>\n————activity_main.xml<br>\n\n**Fragment1.java**利用**fragment_1.xml**返回一个**view**，**activity.xml**中的**android:name=\"com.jc.fragmentbasic.FragmentFirst\"**，然后**MainActivity**调用**setContentView(R.layout.activity_main);**\n\n\n### fragment_1和fragment_2.xml和activity_main.xml\n\n```xml\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n              android:orientation=\"vertical\"\n              android:layout_width=\"match_parent\"\n              android:layout_height=\"match_parent\">\n\n    <TextView\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"This is fragment 1\"\n        android:textColor=\"#0000FF\"\n        android:textSize=\"25sp\"\n        android:background=\"#00FF00\"/>\n\n</LinearLayout>\n```\n\n```xml\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n              android:orientation=\"vertical\"\n              android:layout_width=\"match_parent\"\n              android:layout_height=\"match_parent\">\n\n    <TextView\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"This is fragment 2\"\n        android:textColor=\"#FF0000\"\n        android:background=\"#00F0F0\"\n        android:textSize=\"25sp\" />\n\n</LinearLayout>\n```\n\n```xml\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n      android:layout_width=\"match_parent\"\n      android:layout_height=\"match_parent\"\n      android:baselineAligned=\"false\"\n      android:orientation=\"horizontal\">\n\n    <fragment\n        android:id=\"@+id/fragment1\"\n        android:name=\"com.jc.fragment_1.Fragment_1\"\n        android:layout_width=\"0dip\"\n        android:layout_height=\"match_parent\"\n        android:layout_weight=\"1\" />\n\n    <fragment\n        android:id=\"@+id/fragment2\"\n        android:name=\"com.jc.fragment_1.Fragment_2\"\n        android:layout_width=\"0dip\"\n        android:layout_height=\"match_parent\"\n        android:layout_weight=\"1\" />\n\n</LinearLayout>\n```\n\n### Fragment_1.java和Fragment_2.java和MainActivity.java\n\n```java\npublic class Fragment_1 extends Fragment {\n\n    @Nullable\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n        return inflater.inflate(R.layout.fragment_1,container,false);\n    }\n}\n```\n\n```java\npublic class Fragment_2 extends Fragment{\n    @Nullable\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n        return inflater.inflate(R.layout.fragment_2,container,false);\n    }\n}\n```\n\n```java\npublic class MainActivity extends AppCompatActivity {\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n    }\n}\n```\n\n### 加载过程的代码\n\n```java\ncase R.id.first:{\n    Intent intent=new Intent(this,MainActivity.class);\n    startActivity(intent);\n    break;\n}\n```\n\n### 效果\n\n![](http://oezmbgg4j.bkt.clouddn.com/fragment_basic_1.png)\n\n\n## 动态加载\n\n根据用户的交互情况，对Fragment进行添加，移除，替换，以及执行其他动作，提交Activity的每一套变化被称作一个**事务**。\n\n每一事务都是同时执行一套变化，可以在一个事务中设置你所有执行的变化，包括add(),remove(),replace()，然后提交个Activity，必须调用commit()方法。\n\n如果允许使用Back键返回前一Fragment的状态，调用commit()之前可以加入addToBackStack()方法。\n\n1.获取到FragmentManager，在Activity中可以直接通过getFragmentManager得到。\n\n2.调用beginTransaction方法开启一个事务。\n\n3.向容器内加入Fragment，一般使用replace方法实现，需要传入容器的id和Fragment的实例。\n\n4.提交事务，调用commit方法提交。\n\n\n### 加载过程代码\n\n```java\ncase R.id.dynamic:{\n    FragmentDynamic fragmentDynamic=new FragmentDynamic();\n    FragmentManager fragmentManager=getFragmentManager();\n    FragmentTransaction beginTransaction=fragmentManager.beginTransaction();\n    beginTransaction.add(R.id.frame,fragmentDynamic);\n    beginTransaction.commit();\n    break;\n}\n```\n\n## fragment生命周期\n\n关键方法：**onAttach()**,**onCreateView()**\n\n```java\n\npublic class FragmentThird extends Fragment {\n    @Nullable\n    @Override\n\n    /**\n     * 每次创建会绘制Fragment的View组件时回调该方法。\n     */\n    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n        View v=inflater.inflate(R.layout.fragment_third,container,false);\n//        Log.i(\"Main\",\"Fragment third--onCreateView()\");\n        TextView textView=(TextView)v.findViewById(R.id.textview_third);\n        textView.setText(\"第三个Fragment\");\n        Log.i(\"Main\",\"Fragment third--onCreateView()\");\n        return v;\n    }\n\n\n    /**\n     * 当Fragment被添加到Activity时候会回调这个方法，并且只调用一次\n     * @param context\n     */\n    @Override\n    public void onAttach(Context context) {\n        super.onAttach(context);\n        Log.i(\"Main\",\"Fragment third--on attach()\");\n    }\n\n    /**\n     * 创建Fragment时会回调，只会调用一次\n     */\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        Log.i(\"Main\",\"Fragment third--onCreate()\");\n    }\n\n\n    /**\n     *当Fragment所在的Activity启动完成后调用\n     */\n    @Override\n    public void onActivityCreated(Bundle savedInstanceState) {\n        super.onActivityCreated(savedInstanceState);\n        Log.i(\"Main\", \"Fragment third--onActivityCreated()\");\n    }\n\n    /**\n     * 启动Fragment\n     */\n    @Override\n    public void onStart() {\n        super.onStart();\n        Log.i(\"Main\", \"Fragment third--onStart()\");\n    }\n\n\n    /**\n     * 回复Fragment时会被回调，调用onStart()方法后面一定会调用\n     * onResume方法\n     */\n    @Override\n    public void onResume() {\n        super.onResume();\n        Log.i(\"Main\", \"Fragment third--onResume()\");\n    }\n\n    /**\n     * 暂停Fragment\n     */\n\n    @Override\n    public void onPause() {\n        super.onPause();\n        Log.i(\"Main\",\"Fragment third--onPause()\");\n    }\n\n    /**\n     * 停止Fragment\n     */\n    @Override\n    public void onStop() {\n        super.onStop();\n        Log.i(\"Main\",\"Fragment third--onStop()\");\n    }\n\n    /**\n     * 销毁Fragment所包含的View组件时调用\n     */\n\n    @Override\n    public void onDestroyView() {\n        super.onDestroyView();\n        Log.i(\"Main\", \"Fragment third--onDestroyView()\");\n    }\n\n    /**\n     * 销毁Framgent时会被调用\n     */\n\n    @Override\n    public void onDestroy() {\n        super.onDestroy();\n        Log.i(\"Main\", \"Fragment third--onDestroy()\");\n    }\n\n\n    /**\n     * 与onAttach()方法对应\n     * Fragment从Activity中删除时会回调该方法，并且只会调用一次\n     */\n    @Override\n    public void onDetach() {\n        super.onDetach();\n        Log.i(\"Main\", \"Fragment third--onDetach()\");\n    }\n}\n```\n\n```java\nLog结果：\n启动应用：null\n\n启动Fragment：\nI/Main(8163): Fragment third--on attach()\nI/Main(8163): Fragment third--onCreate()\nI/Main(8163): Fragment third--onCreateView()\nI/Main(8163): Fragment third--onActivityCreated()\nI/Main(8163): Fragment third--onStart()\nI/Main(8163): Fragment third--onResume()\n\n屏幕锁屏：\nI/Main(8163): Fragment third--onPause()\nI/Main(8163): Fragment third--onStop()\n\n\n解锁：\nI/Main(8163): Fragment third--onStart()\nI/Main(8163): Fragment third--onResume()\n\n切换到其它的Fragment:\nI/Main(8163): Fragment third--onPause()\nI/Main(8163): Fragment third--onStop()\nI/Main(8163): Fragment third--onDestroyView()\nI/Main(8163): Fragment third--onDestroy()\nI/Main(8163): Fragment third--onDetach()\n\n回到桌面:\nI/Main(8163): Fragment third--onPause()\nI/Main(8163): Fragment third--onStop()\n\n\n回到Fragment:\nI/Main(8163): Fragment third--onStart()\nI/Main(8163): Fragment third--onResume()\n\n\n退出Fragment：\nI/Main(8163): Fragment third--onPause()\nI/Main(8163): Fragment third--onStop()\nI/Main(8163): Fragment third--onDestroyView()\nI/Main(8163): Fragment third--onDestroy()\nI/Main(8163): Fragment third--onDetach()\n```\n\n## Activity和Fragment通信\n\nActivity ---> Fragment:在Activity中创建Bundle数据包，并调用Fragment的setArguments(Bundle bundle)方法。\n\nFragment ---> Activity：需要在Fragment中定义一个内部回调接口，让包含该Fragment的Activity实现该回调接口。这样Fragment可调用回调方法将数据传递给Activity。\n\n## 相关博客网址\n[Android Fragment完全解析，关于碎片你所需知道的一切](http://blog.csdn.net/guolin_blog/article/details/8881711)\n","source":"_posts/android/UI相关/Fragment/2016-03-09-Fragment-basic.md","raw":"---\nauthor: ivyxjc\ndate: 2016-03-09\ntitle: Fragment初步\ncategory: Android\ntags: [android,android_fragment,android_UI]\nkeywords:\ndescription:\n---\n\n## Fragment概要\n![](http://oezmbgg4j.bkt.clouddn.com/fragmentIntro.png)\n\n## **onCreateView()**方法\n\nFragment第一次绘制它的用户界面时，系统会调用此方法。为了方便绘制Fragment的UI，此方法必须返回一个View，如果不显示UI，返回null。\n\n\n### 标识Fragment方法\n\nandroid:id 提供一个唯一的ID 或\nandroid:tag 提供一个唯一的字符串tag\n\n## 静态加载\n\n在**Activity**的layout文件中声明**Fragment**，其中**android:name**属性制定了在layout中实例化的Fragment类。\n\n静态加载Fragment必须要给Fragment一个唯一的标识。\n\n文件目录：<br>\n——src<br>\n————Fragment_1.java (extends Fragment)<br>\n————Fragment_2.java   (extends Activity)<br>\n————MainActivity.java\t(extends Activity)<br>\n<br>\n——layout<br>\n————fragment_1.xml<br>\n————fragment_2.xml<br>\n————activity_main.xml<br>\n\n**Fragment1.java**利用**fragment_1.xml**返回一个**view**，**activity.xml**中的**android:name=\"com.jc.fragmentbasic.FragmentFirst\"**，然后**MainActivity**调用**setContentView(R.layout.activity_main);**\n\n\n### fragment_1和fragment_2.xml和activity_main.xml\n\n```xml\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n              android:orientation=\"vertical\"\n              android:layout_width=\"match_parent\"\n              android:layout_height=\"match_parent\">\n\n    <TextView\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"This is fragment 1\"\n        android:textColor=\"#0000FF\"\n        android:textSize=\"25sp\"\n        android:background=\"#00FF00\"/>\n\n</LinearLayout>\n```\n\n```xml\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n              android:orientation=\"vertical\"\n              android:layout_width=\"match_parent\"\n              android:layout_height=\"match_parent\">\n\n    <TextView\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"This is fragment 2\"\n        android:textColor=\"#FF0000\"\n        android:background=\"#00F0F0\"\n        android:textSize=\"25sp\" />\n\n</LinearLayout>\n```\n\n```xml\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n      android:layout_width=\"match_parent\"\n      android:layout_height=\"match_parent\"\n      android:baselineAligned=\"false\"\n      android:orientation=\"horizontal\">\n\n    <fragment\n        android:id=\"@+id/fragment1\"\n        android:name=\"com.jc.fragment_1.Fragment_1\"\n        android:layout_width=\"0dip\"\n        android:layout_height=\"match_parent\"\n        android:layout_weight=\"1\" />\n\n    <fragment\n        android:id=\"@+id/fragment2\"\n        android:name=\"com.jc.fragment_1.Fragment_2\"\n        android:layout_width=\"0dip\"\n        android:layout_height=\"match_parent\"\n        android:layout_weight=\"1\" />\n\n</LinearLayout>\n```\n\n### Fragment_1.java和Fragment_2.java和MainActivity.java\n\n```java\npublic class Fragment_1 extends Fragment {\n\n    @Nullable\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n        return inflater.inflate(R.layout.fragment_1,container,false);\n    }\n}\n```\n\n```java\npublic class Fragment_2 extends Fragment{\n    @Nullable\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n        return inflater.inflate(R.layout.fragment_2,container,false);\n    }\n}\n```\n\n```java\npublic class MainActivity extends AppCompatActivity {\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n    }\n}\n```\n\n### 加载过程的代码\n\n```java\ncase R.id.first:{\n    Intent intent=new Intent(this,MainActivity.class);\n    startActivity(intent);\n    break;\n}\n```\n\n### 效果\n\n![](http://oezmbgg4j.bkt.clouddn.com/fragment_basic_1.png)\n\n\n## 动态加载\n\n根据用户的交互情况，对Fragment进行添加，移除，替换，以及执行其他动作，提交Activity的每一套变化被称作一个**事务**。\n\n每一事务都是同时执行一套变化，可以在一个事务中设置你所有执行的变化，包括add(),remove(),replace()，然后提交个Activity，必须调用commit()方法。\n\n如果允许使用Back键返回前一Fragment的状态，调用commit()之前可以加入addToBackStack()方法。\n\n1.获取到FragmentManager，在Activity中可以直接通过getFragmentManager得到。\n\n2.调用beginTransaction方法开启一个事务。\n\n3.向容器内加入Fragment，一般使用replace方法实现，需要传入容器的id和Fragment的实例。\n\n4.提交事务，调用commit方法提交。\n\n\n### 加载过程代码\n\n```java\ncase R.id.dynamic:{\n    FragmentDynamic fragmentDynamic=new FragmentDynamic();\n    FragmentManager fragmentManager=getFragmentManager();\n    FragmentTransaction beginTransaction=fragmentManager.beginTransaction();\n    beginTransaction.add(R.id.frame,fragmentDynamic);\n    beginTransaction.commit();\n    break;\n}\n```\n\n## fragment生命周期\n\n关键方法：**onAttach()**,**onCreateView()**\n\n```java\n\npublic class FragmentThird extends Fragment {\n    @Nullable\n    @Override\n\n    /**\n     * 每次创建会绘制Fragment的View组件时回调该方法。\n     */\n    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n        View v=inflater.inflate(R.layout.fragment_third,container,false);\n//        Log.i(\"Main\",\"Fragment third--onCreateView()\");\n        TextView textView=(TextView)v.findViewById(R.id.textview_third);\n        textView.setText(\"第三个Fragment\");\n        Log.i(\"Main\",\"Fragment third--onCreateView()\");\n        return v;\n    }\n\n\n    /**\n     * 当Fragment被添加到Activity时候会回调这个方法，并且只调用一次\n     * @param context\n     */\n    @Override\n    public void onAttach(Context context) {\n        super.onAttach(context);\n        Log.i(\"Main\",\"Fragment third--on attach()\");\n    }\n\n    /**\n     * 创建Fragment时会回调，只会调用一次\n     */\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        Log.i(\"Main\",\"Fragment third--onCreate()\");\n    }\n\n\n    /**\n     *当Fragment所在的Activity启动完成后调用\n     */\n    @Override\n    public void onActivityCreated(Bundle savedInstanceState) {\n        super.onActivityCreated(savedInstanceState);\n        Log.i(\"Main\", \"Fragment third--onActivityCreated()\");\n    }\n\n    /**\n     * 启动Fragment\n     */\n    @Override\n    public void onStart() {\n        super.onStart();\n        Log.i(\"Main\", \"Fragment third--onStart()\");\n    }\n\n\n    /**\n     * 回复Fragment时会被回调，调用onStart()方法后面一定会调用\n     * onResume方法\n     */\n    @Override\n    public void onResume() {\n        super.onResume();\n        Log.i(\"Main\", \"Fragment third--onResume()\");\n    }\n\n    /**\n     * 暂停Fragment\n     */\n\n    @Override\n    public void onPause() {\n        super.onPause();\n        Log.i(\"Main\",\"Fragment third--onPause()\");\n    }\n\n    /**\n     * 停止Fragment\n     */\n    @Override\n    public void onStop() {\n        super.onStop();\n        Log.i(\"Main\",\"Fragment third--onStop()\");\n    }\n\n    /**\n     * 销毁Fragment所包含的View组件时调用\n     */\n\n    @Override\n    public void onDestroyView() {\n        super.onDestroyView();\n        Log.i(\"Main\", \"Fragment third--onDestroyView()\");\n    }\n\n    /**\n     * 销毁Framgent时会被调用\n     */\n\n    @Override\n    public void onDestroy() {\n        super.onDestroy();\n        Log.i(\"Main\", \"Fragment third--onDestroy()\");\n    }\n\n\n    /**\n     * 与onAttach()方法对应\n     * Fragment从Activity中删除时会回调该方法，并且只会调用一次\n     */\n    @Override\n    public void onDetach() {\n        super.onDetach();\n        Log.i(\"Main\", \"Fragment third--onDetach()\");\n    }\n}\n```\n\n```java\nLog结果：\n启动应用：null\n\n启动Fragment：\nI/Main(8163): Fragment third--on attach()\nI/Main(8163): Fragment third--onCreate()\nI/Main(8163): Fragment third--onCreateView()\nI/Main(8163): Fragment third--onActivityCreated()\nI/Main(8163): Fragment third--onStart()\nI/Main(8163): Fragment third--onResume()\n\n屏幕锁屏：\nI/Main(8163): Fragment third--onPause()\nI/Main(8163): Fragment third--onStop()\n\n\n解锁：\nI/Main(8163): Fragment third--onStart()\nI/Main(8163): Fragment third--onResume()\n\n切换到其它的Fragment:\nI/Main(8163): Fragment third--onPause()\nI/Main(8163): Fragment third--onStop()\nI/Main(8163): Fragment third--onDestroyView()\nI/Main(8163): Fragment third--onDestroy()\nI/Main(8163): Fragment third--onDetach()\n\n回到桌面:\nI/Main(8163): Fragment third--onPause()\nI/Main(8163): Fragment third--onStop()\n\n\n回到Fragment:\nI/Main(8163): Fragment third--onStart()\nI/Main(8163): Fragment third--onResume()\n\n\n退出Fragment：\nI/Main(8163): Fragment third--onPause()\nI/Main(8163): Fragment third--onStop()\nI/Main(8163): Fragment third--onDestroyView()\nI/Main(8163): Fragment third--onDestroy()\nI/Main(8163): Fragment third--onDetach()\n```\n\n## Activity和Fragment通信\n\nActivity ---> Fragment:在Activity中创建Bundle数据包，并调用Fragment的setArguments(Bundle bundle)方法。\n\nFragment ---> Activity：需要在Fragment中定义一个内部回调接口，让包含该Fragment的Activity实现该回调接口。这样Fragment可调用回调方法将数据传递给Activity。\n\n## 相关博客网址\n[Android Fragment完全解析，关于碎片你所需知道的一切](http://blog.csdn.net/guolin_blog/article/details/8881711)\n","slug":"android/UI相关/Fragment/2016-03-09-Fragment-basic","published":1,"updated":"2016-10-13T13:27:38.687Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f011p0043cwjr9r6jma30","content":"<h2 id=\"Fragment概要\"><a href=\"#Fragment概要\" class=\"headerlink\" title=\"Fragment概要\"></a>Fragment概要</h2><p><img src=\"http://oezmbgg4j.bkt.clouddn.com/fragmentIntro.png\" alt=\"\"></p>\n<h2 id=\"onCreateView-方法\"><a href=\"#onCreateView-方法\" class=\"headerlink\" title=\"onCreateView()方法\"></a><strong>onCreateView()</strong>方法</h2><p>Fragment第一次绘制它的用户界面时，系统会调用此方法。为了方便绘制Fragment的UI，此方法必须返回一个View，如果不显示UI，返回null。</p>\n<h3 id=\"标识Fragment方法\"><a href=\"#标识Fragment方法\" class=\"headerlink\" title=\"标识Fragment方法\"></a>标识Fragment方法</h3><p>android:id 提供一个唯一的ID 或<br>android:tag 提供一个唯一的字符串tag</p>\n<h2 id=\"静态加载\"><a href=\"#静态加载\" class=\"headerlink\" title=\"静态加载\"></a>静态加载</h2><p>在<strong>Activity</strong>的layout文件中声明<strong>Fragment</strong>，其中<strong>android:name</strong>属性制定了在layout中实例化的Fragment类。</p>\n<p>静态加载Fragment必须要给Fragment一个唯一的标识。</p>\n<p>文件目录：<br><br>——src<br><br>————Fragment_1.java (extends Fragment)<br><br>————Fragment_2.java   (extends Activity)<br><br>————MainActivity.java    (extends Activity)<br><br><br><br>——layout<br><br>————fragment_1.xml<br><br>————fragment_2.xml<br><br>————activity_main.xml<br></p>\n<p><strong>Fragment1.java</strong>利用<strong>fragment_1.xml</strong>返回一个<strong>view</strong>，<strong>activity.xml</strong>中的<strong>android:name=”com.jc.fragmentbasic.FragmentFirst”</strong>，然后<strong>MainActivity</strong>调用<strong>setContentView(R.layout.activity_main);</strong></p>\n<h3 id=\"fragment-1和fragment-2-xml和activity-main-xml\"><a href=\"#fragment-1和fragment-2-xml和activity-main-xml\" class=\"headerlink\" title=\"fragment_1和fragment_2.xml和activity_main.xml\"></a>fragment_1和fragment_2.xml和activity_main.xml</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></span></div><div class=\"line\">              <span class=\"attr\">android:orientation</span>=<span class=\"string\">\"vertical\"</span></div><div class=\"line\">              <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">              <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span>&gt;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></div><div class=\"line\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">        <span class=\"attr\">android:text</span>=<span class=\"string\">\"This is fragment 1\"</span></div><div class=\"line\">        <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"#0000FF\"</span></div><div class=\"line\">        <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"25sp\"</span></div><div class=\"line\">        <span class=\"attr\">android:background</span>=<span class=\"string\">\"#00FF00\"</span>/&gt;</div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></span></div><div class=\"line\">              <span class=\"attr\">android:orientation</span>=<span class=\"string\">\"vertical\"</span></div><div class=\"line\">              <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">              <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span>&gt;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></div><div class=\"line\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">        <span class=\"attr\">android:text</span>=<span class=\"string\">\"This is fragment 2\"</span></div><div class=\"line\">        <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"#FF0000\"</span></div><div class=\"line\">        <span class=\"attr\">android:background</span>=<span class=\"string\">\"#00F0F0\"</span></div><div class=\"line\">        <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"25sp\"</span> /&gt;</div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></span></div><div class=\"line\">      <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">      <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">      <span class=\"attr\">android:baselineAligned</span>=<span class=\"string\">\"false\"</span></div><div class=\"line\">      <span class=\"attr\">android:orientation</span>=<span class=\"string\">\"horizontal\"</span>&gt;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">fragment</span></span></div><div class=\"line\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/fragment1\"</span></div><div class=\"line\">        <span class=\"attr\">android:name</span>=<span class=\"string\">\"com.jc.fragment_1.Fragment_1\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"0dip\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_weight</span>=<span class=\"string\">\"1\"</span> /&gt;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">fragment</span></span></div><div class=\"line\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/fragment2\"</span></div><div class=\"line\">        <span class=\"attr\">android:name</span>=<span class=\"string\">\"com.jc.fragment_1.Fragment_2\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"0dip\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_weight</span>=<span class=\"string\">\"1\"</span> /&gt;</div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"Fragment-1-java和Fragment-2-java和MainActivity-java\"><a href=\"#Fragment-1-java和Fragment-2-java和MainActivity-java\" class=\"headerlink\" title=\"Fragment_1.java和Fragment_2.java和MainActivity.java\"></a>Fragment_1.java和Fragment_2.java和MainActivity.java</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Fragment_1</span> <span class=\"keyword\">extends</span> <span class=\"title\">Fragment</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Nullable</span></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> View <span class=\"title\">onCreateView</span><span class=\"params\">(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> inflater.inflate(R.layout.fragment_1,container,<span class=\"keyword\">false</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Fragment_2</span> <span class=\"keyword\">extends</span> <span class=\"title\">Fragment</span></span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Nullable</span></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> View <span class=\"title\">onCreateView</span><span class=\"params\">(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> inflater.inflate(R.layout.fragment_2,container,<span class=\"keyword\">false</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">        setContentView(R.layout.activity_main);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"加载过程的代码\"><a href=\"#加载过程的代码\" class=\"headerlink\" title=\"加载过程的代码\"></a>加载过程的代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">case</span> R.id.first:&#123;</div><div class=\"line\">    Intent intent=<span class=\"keyword\">new</span> Intent(<span class=\"keyword\">this</span>,MainActivity.class);</div><div class=\"line\">    startActivity(intent);</div><div class=\"line\">    <span class=\"keyword\">break</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果\"></a>效果</h3><p><img src=\"http://oezmbgg4j.bkt.clouddn.com/fragment_basic_1.png\" alt=\"\"></p>\n<h2 id=\"动态加载\"><a href=\"#动态加载\" class=\"headerlink\" title=\"动态加载\"></a>动态加载</h2><p>根据用户的交互情况，对Fragment进行添加，移除，替换，以及执行其他动作，提交Activity的每一套变化被称作一个<strong>事务</strong>。</p>\n<p>每一事务都是同时执行一套变化，可以在一个事务中设置你所有执行的变化，包括add(),remove(),replace()，然后提交个Activity，必须调用commit()方法。</p>\n<p>如果允许使用Back键返回前一Fragment的状态，调用commit()之前可以加入addToBackStack()方法。</p>\n<p>1.获取到FragmentManager，在Activity中可以直接通过getFragmentManager得到。</p>\n<p>2.调用beginTransaction方法开启一个事务。</p>\n<p>3.向容器内加入Fragment，一般使用replace方法实现，需要传入容器的id和Fragment的实例。</p>\n<p>4.提交事务，调用commit方法提交。</p>\n<h3 id=\"加载过程代码\"><a href=\"#加载过程代码\" class=\"headerlink\" title=\"加载过程代码\"></a>加载过程代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">case</span> R.id.dynamic:&#123;</div><div class=\"line\">    FragmentDynamic fragmentDynamic=<span class=\"keyword\">new</span> FragmentDynamic();</div><div class=\"line\">    FragmentManager fragmentManager=getFragmentManager();</div><div class=\"line\">    FragmentTransaction beginTransaction=fragmentManager.beginTransaction();</div><div class=\"line\">    beginTransaction.add(R.id.frame,fragmentDynamic);</div><div class=\"line\">    beginTransaction.commit();</div><div class=\"line\">    <span class=\"keyword\">break</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"fragment生命周期\"><a href=\"#fragment生命周期\" class=\"headerlink\" title=\"fragment生命周期\"></a>fragment生命周期</h2><p>关键方法：<strong>onAttach()</strong>,<strong>onCreateView()</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FragmentThird</span> <span class=\"keyword\">extends</span> <span class=\"title\">Fragment</span> </span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Nullable</span></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * 每次创建会绘制Fragment的View组件时回调该方法。</div><div class=\"line\">     */</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> View <span class=\"title\">onCreateView</span><span class=\"params\">(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        View v=inflater.inflate(R.layout.fragment_third,container,<span class=\"keyword\">false</span>);</div><div class=\"line\"><span class=\"comment\">//        Log.i(\"Main\",\"Fragment third--onCreateView()\");</span></div><div class=\"line\">        TextView textView=(TextView)v.findViewById(R.id.textview_third);</div><div class=\"line\">        textView.setText(<span class=\"string\">\"第三个Fragment\"</span>);</div><div class=\"line\">        Log.i(<span class=\"string\">\"Main\"</span>,<span class=\"string\">\"Fragment third--onCreateView()\"</span>);</div><div class=\"line\">        <span class=\"keyword\">return</span> v;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * 当Fragment被添加到Activity时候会回调这个方法，并且只调用一次</div><div class=\"line\">     * <span class=\"doctag\">@param</span> context</div><div class=\"line\">     */</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onAttach</span><span class=\"params\">(Context context)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onAttach(context);</div><div class=\"line\">        Log.i(<span class=\"string\">\"Main\"</span>,<span class=\"string\">\"Fragment third--on attach()\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * 创建Fragment时会回调，只会调用一次</div><div class=\"line\">     */</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">        Log.i(<span class=\"string\">\"Main\"</span>,<span class=\"string\">\"Fragment third--onCreate()\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     *当Fragment所在的Activity启动完成后调用</div><div class=\"line\">     */</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onActivityCreated</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onActivityCreated(savedInstanceState);</div><div class=\"line\">        Log.i(<span class=\"string\">\"Main\"</span>, <span class=\"string\">\"Fragment third--onActivityCreated()\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * 启动Fragment</div><div class=\"line\">     */</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onStart</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onStart();</div><div class=\"line\">        Log.i(<span class=\"string\">\"Main\"</span>, <span class=\"string\">\"Fragment third--onStart()\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * 回复Fragment时会被回调，调用onStart()方法后面一定会调用</div><div class=\"line\">     * onResume方法</div><div class=\"line\">     */</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onResume</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onResume();</div><div class=\"line\">        Log.i(<span class=\"string\">\"Main\"</span>, <span class=\"string\">\"Fragment third--onResume()\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * 暂停Fragment</div><div class=\"line\">     */</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onPause</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onPause();</div><div class=\"line\">        Log.i(<span class=\"string\">\"Main\"</span>,<span class=\"string\">\"Fragment third--onPause()\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * 停止Fragment</div><div class=\"line\">     */</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onStop</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onStop();</div><div class=\"line\">        Log.i(<span class=\"string\">\"Main\"</span>,<span class=\"string\">\"Fragment third--onStop()\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * 销毁Fragment所包含的View组件时调用</div><div class=\"line\">     */</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onDestroyView</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onDestroyView();</div><div class=\"line\">        Log.i(<span class=\"string\">\"Main\"</span>, <span class=\"string\">\"Fragment third--onDestroyView()\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * 销毁Framgent时会被调用</div><div class=\"line\">     */</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onDestroy</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onDestroy();</div><div class=\"line\">        Log.i(<span class=\"string\">\"Main\"</span>, <span class=\"string\">\"Fragment third--onDestroy()\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * 与onAttach()方法对应</div><div class=\"line\">     * Fragment从Activity中删除时会回调该方法，并且只会调用一次</div><div class=\"line\">     */</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onDetach</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onDetach();</div><div class=\"line\">        Log.i(<span class=\"string\">\"Main\"</span>, <span class=\"string\">\"Fragment third--onDetach()\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div></pre></td><td class=\"code\"><pre><div class=\"line\">Log结果：</div><div class=\"line\">启动应用：<span class=\"keyword\">null</span></div><div class=\"line\"></div><div class=\"line\">启动Fragment：</div><div class=\"line\">I/Main(<span class=\"number\">8163</span>): Fragment third--<span class=\"function\">on <span class=\"title\">attach</span><span class=\"params\">()</span></span></div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onCreate</span><span class=\"params\">()</span></div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onCreateView</span><span class=\"params\">()</span></div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onActivityCreated</span><span class=\"params\">()</span></div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onStart</span><span class=\"params\">()</span></div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onResume</span><span class=\"params\">()</span></div><div class=\"line\"></div><div class=\"line\">屏幕锁屏：</div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onPause</span><span class=\"params\">()</span></div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onStop</span><span class=\"params\">()</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">解锁：</div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onStart</span><span class=\"params\">()</span></div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onResume</span><span class=\"params\">()</span></div><div class=\"line\"></div><div class=\"line\">切换到其它的Fragment:</div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onPause</span><span class=\"params\">()</span></div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onStop</span><span class=\"params\">()</span></div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onDestroyView</span><span class=\"params\">()</span></div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onDestroy</span><span class=\"params\">()</span></div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onDetach</span><span class=\"params\">()</span></div><div class=\"line\"></div><div class=\"line\">回到桌面:</div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onPause</span><span class=\"params\">()</span></div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onStop</span><span class=\"params\">()</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">回到Fragment:</div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onStart</span><span class=\"params\">()</span></div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onResume</span><span class=\"params\">()</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">退出Fragment：</div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onPause</span><span class=\"params\">()</span></div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onStop</span><span class=\"params\">()</span></div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onDestroyView</span><span class=\"params\">()</span></div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onDestroy</span><span class=\"params\">()</span></div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onDetach</span><span class=\"params\">()</span></div></pre></td></tr></table></figure>\n<h2 id=\"Activity和Fragment通信\"><a href=\"#Activity和Fragment通信\" class=\"headerlink\" title=\"Activity和Fragment通信\"></a>Activity和Fragment通信</h2><p>Activity —&gt; Fragment:在Activity中创建Bundle数据包，并调用Fragment的setArguments(Bundle bundle)方法。</p>\n<p>Fragment —&gt; Activity：需要在Fragment中定义一个内部回调接口，让包含该Fragment的Activity实现该回调接口。这样Fragment可调用回调方法将数据传递给Activity。</p>\n<h2 id=\"相关博客网址\"><a href=\"#相关博客网址\" class=\"headerlink\" title=\"相关博客网址\"></a>相关博客网址</h2><p><a href=\"http://blog.csdn.net/guolin_blog/article/details/8881711\" target=\"_blank\" rel=\"external\">Android Fragment完全解析，关于碎片你所需知道的一切</a></p>\n","excerpt":"","more":"<h2 id=\"Fragment概要\"><a href=\"#Fragment概要\" class=\"headerlink\" title=\"Fragment概要\"></a>Fragment概要</h2><p><img src=\"http://oezmbgg4j.bkt.clouddn.com/fragmentIntro.png\" alt=\"\"></p>\n<h2 id=\"onCreateView-方法\"><a href=\"#onCreateView-方法\" class=\"headerlink\" title=\"onCreateView()方法\"></a><strong>onCreateView()</strong>方法</h2><p>Fragment第一次绘制它的用户界面时，系统会调用此方法。为了方便绘制Fragment的UI，此方法必须返回一个View，如果不显示UI，返回null。</p>\n<h3 id=\"标识Fragment方法\"><a href=\"#标识Fragment方法\" class=\"headerlink\" title=\"标识Fragment方法\"></a>标识Fragment方法</h3><p>android:id 提供一个唯一的ID 或<br>android:tag 提供一个唯一的字符串tag</p>\n<h2 id=\"静态加载\"><a href=\"#静态加载\" class=\"headerlink\" title=\"静态加载\"></a>静态加载</h2><p>在<strong>Activity</strong>的layout文件中声明<strong>Fragment</strong>，其中<strong>android:name</strong>属性制定了在layout中实例化的Fragment类。</p>\n<p>静态加载Fragment必须要给Fragment一个唯一的标识。</p>\n<p>文件目录：<br><br>——src<br><br>————Fragment_1.java (extends Fragment)<br><br>————Fragment_2.java   (extends Activity)<br><br>————MainActivity.java    (extends Activity)<br><br><br><br>——layout<br><br>————fragment_1.xml<br><br>————fragment_2.xml<br><br>————activity_main.xml<br></p>\n<p><strong>Fragment1.java</strong>利用<strong>fragment_1.xml</strong>返回一个<strong>view</strong>，<strong>activity.xml</strong>中的<strong>android:name=”com.jc.fragmentbasic.FragmentFirst”</strong>，然后<strong>MainActivity</strong>调用<strong>setContentView(R.layout.activity_main);</strong></p>\n<h3 id=\"fragment-1和fragment-2-xml和activity-main-xml\"><a href=\"#fragment-1和fragment-2-xml和activity-main-xml\" class=\"headerlink\" title=\"fragment_1和fragment_2.xml和activity_main.xml\"></a>fragment_1和fragment_2.xml和activity_main.xml</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></div><div class=\"line\">              <span class=\"attr\">android:orientation</span>=<span class=\"string\">\"vertical\"</span></div><div class=\"line\">              <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">              <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">TextView</span></div><div class=\"line\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">        <span class=\"attr\">android:text</span>=<span class=\"string\">\"This is fragment 1\"</span></div><div class=\"line\">        <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"#0000FF\"</span></div><div class=\"line\">        <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"25sp\"</span></div><div class=\"line\">        <span class=\"attr\">android:background</span>=<span class=\"string\">\"#00FF00\"</span>/&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></div><div class=\"line\">              <span class=\"attr\">android:orientation</span>=<span class=\"string\">\"vertical\"</span></div><div class=\"line\">              <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">              <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">TextView</span></div><div class=\"line\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">        <span class=\"attr\">android:text</span>=<span class=\"string\">\"This is fragment 2\"</span></div><div class=\"line\">        <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"#FF0000\"</span></div><div class=\"line\">        <span class=\"attr\">android:background</span>=<span class=\"string\">\"#00F0F0\"</span></div><div class=\"line\">        <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"25sp\"</span> /&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></div><div class=\"line\">      <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">      <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">      <span class=\"attr\">android:baselineAligned</span>=<span class=\"string\">\"false\"</span></div><div class=\"line\">      <span class=\"attr\">android:orientation</span>=<span class=\"string\">\"horizontal\"</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">fragment</span></div><div class=\"line\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/fragment1\"</span></div><div class=\"line\">        <span class=\"attr\">android:name</span>=<span class=\"string\">\"com.jc.fragment_1.Fragment_1\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"0dip\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_weight</span>=<span class=\"string\">\"1\"</span> /&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">fragment</span></div><div class=\"line\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/fragment2\"</span></div><div class=\"line\">        <span class=\"attr\">android:name</span>=<span class=\"string\">\"com.jc.fragment_1.Fragment_2\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"0dip\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_weight</span>=<span class=\"string\">\"1\"</span> /&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"Fragment-1-java和Fragment-2-java和MainActivity-java\"><a href=\"#Fragment-1-java和Fragment-2-java和MainActivity-java\" class=\"headerlink\" title=\"Fragment_1.java和Fragment_2.java和MainActivity.java\"></a>Fragment_1.java和Fragment_2.java和MainActivity.java</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Fragment_1</span> <span class=\"keyword\">extends</span> <span class=\"title\">Fragment</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Nullable</span></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> View <span class=\"title\">onCreateView</span><span class=\"params\">(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> inflater.inflate(R.layout.fragment_1,container,<span class=\"keyword\">false</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Fragment_2</span> <span class=\"keyword\">extends</span> <span class=\"title\">Fragment</span></span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Nullable</span></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> View <span class=\"title\">onCreateView</span><span class=\"params\">(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> inflater.inflate(R.layout.fragment_2,container,<span class=\"keyword\">false</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">        setContentView(R.layout.activity_main);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"加载过程的代码\"><a href=\"#加载过程的代码\" class=\"headerlink\" title=\"加载过程的代码\"></a>加载过程的代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">case</span> R.id.first:&#123;</div><div class=\"line\">    Intent intent=<span class=\"keyword\">new</span> Intent(<span class=\"keyword\">this</span>,MainActivity.class);</div><div class=\"line\">    startActivity(intent);</div><div class=\"line\">    <span class=\"keyword\">break</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果\"></a>效果</h3><p><img src=\"http://oezmbgg4j.bkt.clouddn.com/fragment_basic_1.png\" alt=\"\"></p>\n<h2 id=\"动态加载\"><a href=\"#动态加载\" class=\"headerlink\" title=\"动态加载\"></a>动态加载</h2><p>根据用户的交互情况，对Fragment进行添加，移除，替换，以及执行其他动作，提交Activity的每一套变化被称作一个<strong>事务</strong>。</p>\n<p>每一事务都是同时执行一套变化，可以在一个事务中设置你所有执行的变化，包括add(),remove(),replace()，然后提交个Activity，必须调用commit()方法。</p>\n<p>如果允许使用Back键返回前一Fragment的状态，调用commit()之前可以加入addToBackStack()方法。</p>\n<p>1.获取到FragmentManager，在Activity中可以直接通过getFragmentManager得到。</p>\n<p>2.调用beginTransaction方法开启一个事务。</p>\n<p>3.向容器内加入Fragment，一般使用replace方法实现，需要传入容器的id和Fragment的实例。</p>\n<p>4.提交事务，调用commit方法提交。</p>\n<h3 id=\"加载过程代码\"><a href=\"#加载过程代码\" class=\"headerlink\" title=\"加载过程代码\"></a>加载过程代码</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">case</span> R.id.dynamic:&#123;</div><div class=\"line\">    FragmentDynamic fragmentDynamic=<span class=\"keyword\">new</span> FragmentDynamic();</div><div class=\"line\">    FragmentManager fragmentManager=getFragmentManager();</div><div class=\"line\">    FragmentTransaction beginTransaction=fragmentManager.beginTransaction();</div><div class=\"line\">    beginTransaction.add(R.id.frame,fragmentDynamic);</div><div class=\"line\">    beginTransaction.commit();</div><div class=\"line\">    <span class=\"keyword\">break</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"fragment生命周期\"><a href=\"#fragment生命周期\" class=\"headerlink\" title=\"fragment生命周期\"></a>fragment生命周期</h2><p>关键方法：<strong>onAttach()</strong>,<strong>onCreateView()</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FragmentThird</span> <span class=\"keyword\">extends</span> <span class=\"title\">Fragment</span> </span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Nullable</span></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</div><div class=\"line\">     * 每次创建会绘制Fragment的View组件时回调该方法。</div><div class=\"line\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> View <span class=\"title\">onCreateView</span><span class=\"params\">(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        View v=inflater.inflate(R.layout.fragment_third,container,<span class=\"keyword\">false</span>);</div><div class=\"line\"><span class=\"comment\">//        Log.i(\"Main\",\"Fragment third--onCreateView()\");</span></div><div class=\"line\">        TextView textView=(TextView)v.findViewById(R.id.textview_third);</div><div class=\"line\">        textView.setText(<span class=\"string\">\"第三个Fragment\"</span>);</div><div class=\"line\">        Log.i(<span class=\"string\">\"Main\"</span>,<span class=\"string\">\"Fragment third--onCreateView()\"</span>);</div><div class=\"line\">        <span class=\"keyword\">return</span> v;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</div><div class=\"line\">     * 当Fragment被添加到Activity时候会回调这个方法，并且只调用一次</div><div class=\"line\">     * <span class=\"doctag\">@param</span> context</div><div class=\"line\">     */</span></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onAttach</span><span class=\"params\">(Context context)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onAttach(context);</div><div class=\"line\">        Log.i(<span class=\"string\">\"Main\"</span>,<span class=\"string\">\"Fragment third--on attach()\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</div><div class=\"line\">     * 创建Fragment时会回调，只会调用一次</div><div class=\"line\">     */</span></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">        Log.i(<span class=\"string\">\"Main\"</span>,<span class=\"string\">\"Fragment third--onCreate()\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</div><div class=\"line\">     *当Fragment所在的Activity启动完成后调用</div><div class=\"line\">     */</span></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onActivityCreated</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onActivityCreated(savedInstanceState);</div><div class=\"line\">        Log.i(<span class=\"string\">\"Main\"</span>, <span class=\"string\">\"Fragment third--onActivityCreated()\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</div><div class=\"line\">     * 启动Fragment</div><div class=\"line\">     */</span></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onStart</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onStart();</div><div class=\"line\">        Log.i(<span class=\"string\">\"Main\"</span>, <span class=\"string\">\"Fragment third--onStart()\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</div><div class=\"line\">     * 回复Fragment时会被回调，调用onStart()方法后面一定会调用</div><div class=\"line\">     * onResume方法</div><div class=\"line\">     */</span></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onResume</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onResume();</div><div class=\"line\">        Log.i(<span class=\"string\">\"Main\"</span>, <span class=\"string\">\"Fragment third--onResume()\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</div><div class=\"line\">     * 暂停Fragment</div><div class=\"line\">     */</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onPause</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onPause();</div><div class=\"line\">        Log.i(<span class=\"string\">\"Main\"</span>,<span class=\"string\">\"Fragment third--onPause()\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</div><div class=\"line\">     * 停止Fragment</div><div class=\"line\">     */</span></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onStop</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onStop();</div><div class=\"line\">        Log.i(<span class=\"string\">\"Main\"</span>,<span class=\"string\">\"Fragment third--onStop()\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</div><div class=\"line\">     * 销毁Fragment所包含的View组件时调用</div><div class=\"line\">     */</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onDestroyView</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onDestroyView();</div><div class=\"line\">        Log.i(<span class=\"string\">\"Main\"</span>, <span class=\"string\">\"Fragment third--onDestroyView()\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</div><div class=\"line\">     * 销毁Framgent时会被调用</div><div class=\"line\">     */</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onDestroy</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onDestroy();</div><div class=\"line\">        Log.i(<span class=\"string\">\"Main\"</span>, <span class=\"string\">\"Fragment third--onDestroy()\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</div><div class=\"line\">     * 与onAttach()方法对应</div><div class=\"line\">     * Fragment从Activity中删除时会回调该方法，并且只会调用一次</div><div class=\"line\">     */</span></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onDetach</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onDetach();</div><div class=\"line\">        Log.i(<span class=\"string\">\"Main\"</span>, <span class=\"string\">\"Fragment third--onDetach()\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div></pre></td><td class=\"code\"><pre><div class=\"line\">Log结果：</div><div class=\"line\">启动应用：<span class=\"keyword\">null</span></div><div class=\"line\"></div><div class=\"line\">启动Fragment：</div><div class=\"line\">I/Main(<span class=\"number\">8163</span>): Fragment third--<span class=\"function\">on <span class=\"title\">attach</span><span class=\"params\">()</span></div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onCreate</span><span class=\"params\">()</span></div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onCreateView</span><span class=\"params\">()</span></div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onActivityCreated</span><span class=\"params\">()</span></div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onStart</span><span class=\"params\">()</span></div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onResume</span><span class=\"params\">()</span></div><div class=\"line\"></div><div class=\"line\">屏幕锁屏：</div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onPause</span><span class=\"params\">()</span></div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onStop</span><span class=\"params\">()</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">解锁：</div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onStart</span><span class=\"params\">()</span></div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onResume</span><span class=\"params\">()</span></div><div class=\"line\"></div><div class=\"line\">切换到其它的Fragment:</div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onPause</span><span class=\"params\">()</span></div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onStop</span><span class=\"params\">()</span></div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onDestroyView</span><span class=\"params\">()</span></div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onDestroy</span><span class=\"params\">()</span></div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onDetach</span><span class=\"params\">()</span></div><div class=\"line\"></div><div class=\"line\">回到桌面:</div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onPause</span><span class=\"params\">()</span></div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onStop</span><span class=\"params\">()</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">回到Fragment:</div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onStart</span><span class=\"params\">()</span></div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onResume</span><span class=\"params\">()</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">退出Fragment：</div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onPause</span><span class=\"params\">()</span></div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onStop</span><span class=\"params\">()</span></div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onDestroyView</span><span class=\"params\">()</span></div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onDestroy</span><span class=\"params\">()</span></div><div class=\"line\">I/<span class=\"title\">Main</span><span class=\"params\">(<span class=\"number\">8163</span>)</span>: Fragment third--<span class=\"title\">onDetach</span><span class=\"params\">()</span></span></div></pre></td></tr></table></figure>\n<h2 id=\"Activity和Fragment通信\"><a href=\"#Activity和Fragment通信\" class=\"headerlink\" title=\"Activity和Fragment通信\"></a>Activity和Fragment通信</h2><p>Activity —&gt; Fragment:在Activity中创建Bundle数据包，并调用Fragment的setArguments(Bundle bundle)方法。</p>\n<p>Fragment —&gt; Activity：需要在Fragment中定义一个内部回调接口，让包含该Fragment的Activity实现该回调接口。这样Fragment可调用回调方法将数据传递给Activity。</p>\n<h2 id=\"相关博客网址\"><a href=\"#相关博客网址\" class=\"headerlink\" title=\"相关博客网址\"></a>相关博客网址</h2><p><a href=\"http://blog.csdn.net/guolin_blog/article/details/8881711\">Android Fragment完全解析，关于碎片你所需知道的一切</a></p>\n"},{"author":"ivyxjc","date":"2016-03-18T16:00:00.000Z","title":"Fragment和Activity通信","keywords":null,"description":null,"_content":"\n## Fragment和Activity通信\n\n为了方便碎片和活动之间进行通信， FragmentManager 提供了一个类似于 findViewById()\n的方法，专门用于从布局文件中获取碎片的实例，代码如下所示：\n\n```java\nRightFragment rightFragment = (RightFragment) getFragmentManager()\n.findFragmentById(R.id.right_fragment);\n```\n\n这样即可调用Fragment中的方法\n在Fragment中都可以用getActivity()方法来得到和当前Fragment相关联的Activity实例。\n\n```java\nMainActivity activity=(MainActivity)getActivity();\n```\n","source":"_posts/android/UI相关/Fragment/2016-03-19-Fragment-message-transportation.md","raw":"---\nauthor: ivyxjc\ndate: 2016-03-19\ntitle: Fragment和Activity通信\ncategory: Android\ntags: [android,android_UI,android_fragment]\nkeywords:\ndescription:\n---\n\n## Fragment和Activity通信\n\n为了方便碎片和活动之间进行通信， FragmentManager 提供了一个类似于 findViewById()\n的方法，专门用于从布局文件中获取碎片的实例，代码如下所示：\n\n```java\nRightFragment rightFragment = (RightFragment) getFragmentManager()\n.findFragmentById(R.id.right_fragment);\n```\n\n这样即可调用Fragment中的方法\n在Fragment中都可以用getActivity()方法来得到和当前Fragment相关联的Activity实例。\n\n```java\nMainActivity activity=(MainActivity)getActivity();\n```\n","slug":"android/UI相关/Fragment/2016-03-19-Fragment-message-transportation","published":1,"updated":"2016-10-13T06:34:38.470Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f011q0045cwjrpu6zvrk2","content":"<h2 id=\"Fragment和Activity通信\"><a href=\"#Fragment和Activity通信\" class=\"headerlink\" title=\"Fragment和Activity通信\"></a>Fragment和Activity通信</h2><p>为了方便碎片和活动之间进行通信， FragmentManager 提供了一个类似于 findViewById()<br>的方法，专门用于从布局文件中获取碎片的实例，代码如下所示：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">RightFragment rightFragment = (RightFragment) getFragmentManager()</div><div class=\"line\">.findFragmentById(R.id.right_fragment);</div></pre></td></tr></table></figure>\n<p>这样即可调用Fragment中的方法<br>在Fragment中都可以用getActivity()方法来得到和当前Fragment相关联的Activity实例。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">MainActivity activity=(MainActivity)getActivity();</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h2 id=\"Fragment和Activity通信\"><a href=\"#Fragment和Activity通信\" class=\"headerlink\" title=\"Fragment和Activity通信\"></a>Fragment和Activity通信</h2><p>为了方便碎片和活动之间进行通信， FragmentManager 提供了一个类似于 findViewById()<br>的方法，专门用于从布局文件中获取碎片的实例，代码如下所示：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">RightFragment rightFragment = (RightFragment) getFragmentManager()</div><div class=\"line\">.findFragmentById(R.id.right_fragment);</div></pre></td></tr></table></figure>\n<p>这样即可调用Fragment中的方法<br>在Fragment中都可以用getActivity()方法来得到和当前Fragment相关联的Activity实例。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">MainActivity activity=(MainActivity)getActivity();</div></pre></td></tr></table></figure>\n"},{"author":"ivyxjc","date":"2016-02-21T16:00:00.000Z","title":"Layout_Gravity和Gravity","keywords":null,"description":null,"_content":"\n## Android Layout_Gravity和Gravity\n\n简单来说layout_gravity表示子控件在父容器的位置，gravity表示控件内容在控件内的位置。\n![如图所示][1]\n\n\n上面图片的xml代码\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n              android:layout_width=\"match_parent\"\n              android:layout_height=\"match_parent\"\n              android:orientation=\"vertical\" >\n\n    <LinearLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"0dp\"\n            android:layout_weight=\"1\"\n            android:background=\"#e3e2ad\"\n            android:orientation=\"vertical\"\n            android:id=\"@+id/\">\n\n        <TextView\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_gravity=\"center_horizontal\"\n                android:textSize=\"24sp\"\n                android:text=\"gravity=\" />\n        <!--如何设置为wrap_content 则gravity失效-->\n        <TextView\n                android:layout_width=\"200dp\"\n                android:layout_height=\"40dp\"\n                android:background=\"#bcf5b1\"\n                android:gravity=\"left\"\n                android:text=\"left\" />\n\n        <TextView\n                android:layout_width=\"200dp\"\n                android:layout_height=\"40dp\"\n                android:background=\"#aacaff\"\n                android:gravity=\"center_horizontal\"\n                android:text=\"center_horizontal\" />\n\n        <TextView\n                android:layout_width=\"200dp\"\n                android:layout_height=\"40dp\"\n                android:background=\"#bcf5b1\"\n                android:gravity=\"right\"\n                android:text=\"right\" />\n\n        <TextView\n                android:layout_width=\"200dp\"\n                android:layout_height=\"40dp\"\n                android:background=\"#aacaff\"\n                android:gravity=\"center\"\n                android:text=\"center\" />\n\n    </LinearLayout>\n    <!--match_parent改为wrap_content则下面的layout_gravity失效-->\n    <LinearLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"0dp\"\n            android:layout_weight=\"1\"\n            android:background=\"#d6c6cd\"\n            android:orientation=\"vertical\" >\n\n        <TextView\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_gravity=\"center_horizontal\"\n                android:textSize=\"24sp\"\n                android:text=\"layout_gravity=\" />\n        <TextView\n                android:layout_width=\"200dp\"\n                android:layout_height=\"40dp\"\n                android:layout_gravity=\"left\"\n                android:background=\"#bcf5b1\"\n                android:text=\"left\" />\n\n        <TextView\n                android:layout_width=\"200dp\"\n                android:layout_height=\"40dp\"\n                android:layout_gravity=\"center_horizontal\"\n                android:background=\"#aacaff\"\n                android:text=\"center_horizontal\" />\n\n        <TextView\n                android:layout_width=\"200dp\"\n                android:layout_height=\"40dp\"\n                android:layout_gravity=\"right\"\n                android:background=\"#bcf5b1\"\n                android:text=\"right\"\n                android:id=\"@+id/\"/>\n\n        <TextView\n                android:layout_width=\"200dp\"\n                android:layout_height=\"40dp\"\n                android:layout_gravity=\"center\"\n                android:background=\"#aacaff\"\n                android:text=\"center\" />\n\n    </LinearLayout>\n\n</LinearLayout>\n```\n\n参考\n1.[Gravity and layout_gravity on Android][2]\n\n\n  [1]: http://i.stack.imgur.com/xKdfI.png\n  [2]: http://stackoverflow.com/questions/3482742/gravity-and-layout-gravity-on-android\n","source":"_posts/android/UI相关/布局/2016-02-22-Layout-Gravity和Gravity.md","raw":"---\nauthor: ivyxjc\ndate: 2016-02-22\ntitle: Layout_Gravity和Gravity\ncategory: Android\ntags: [android,android_layout]\nkeywords:\ndescription:\n---\n\n## Android Layout_Gravity和Gravity\n\n简单来说layout_gravity表示子控件在父容器的位置，gravity表示控件内容在控件内的位置。\n![如图所示][1]\n\n\n上面图片的xml代码\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n              android:layout_width=\"match_parent\"\n              android:layout_height=\"match_parent\"\n              android:orientation=\"vertical\" >\n\n    <LinearLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"0dp\"\n            android:layout_weight=\"1\"\n            android:background=\"#e3e2ad\"\n            android:orientation=\"vertical\"\n            android:id=\"@+id/\">\n\n        <TextView\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_gravity=\"center_horizontal\"\n                android:textSize=\"24sp\"\n                android:text=\"gravity=\" />\n        <!--如何设置为wrap_content 则gravity失效-->\n        <TextView\n                android:layout_width=\"200dp\"\n                android:layout_height=\"40dp\"\n                android:background=\"#bcf5b1\"\n                android:gravity=\"left\"\n                android:text=\"left\" />\n\n        <TextView\n                android:layout_width=\"200dp\"\n                android:layout_height=\"40dp\"\n                android:background=\"#aacaff\"\n                android:gravity=\"center_horizontal\"\n                android:text=\"center_horizontal\" />\n\n        <TextView\n                android:layout_width=\"200dp\"\n                android:layout_height=\"40dp\"\n                android:background=\"#bcf5b1\"\n                android:gravity=\"right\"\n                android:text=\"right\" />\n\n        <TextView\n                android:layout_width=\"200dp\"\n                android:layout_height=\"40dp\"\n                android:background=\"#aacaff\"\n                android:gravity=\"center\"\n                android:text=\"center\" />\n\n    </LinearLayout>\n    <!--match_parent改为wrap_content则下面的layout_gravity失效-->\n    <LinearLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"0dp\"\n            android:layout_weight=\"1\"\n            android:background=\"#d6c6cd\"\n            android:orientation=\"vertical\" >\n\n        <TextView\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_gravity=\"center_horizontal\"\n                android:textSize=\"24sp\"\n                android:text=\"layout_gravity=\" />\n        <TextView\n                android:layout_width=\"200dp\"\n                android:layout_height=\"40dp\"\n                android:layout_gravity=\"left\"\n                android:background=\"#bcf5b1\"\n                android:text=\"left\" />\n\n        <TextView\n                android:layout_width=\"200dp\"\n                android:layout_height=\"40dp\"\n                android:layout_gravity=\"center_horizontal\"\n                android:background=\"#aacaff\"\n                android:text=\"center_horizontal\" />\n\n        <TextView\n                android:layout_width=\"200dp\"\n                android:layout_height=\"40dp\"\n                android:layout_gravity=\"right\"\n                android:background=\"#bcf5b1\"\n                android:text=\"right\"\n                android:id=\"@+id/\"/>\n\n        <TextView\n                android:layout_width=\"200dp\"\n                android:layout_height=\"40dp\"\n                android:layout_gravity=\"center\"\n                android:background=\"#aacaff\"\n                android:text=\"center\" />\n\n    </LinearLayout>\n\n</LinearLayout>\n```\n\n参考\n1.[Gravity and layout_gravity on Android][2]\n\n\n  [1]: http://i.stack.imgur.com/xKdfI.png\n  [2]: http://stackoverflow.com/questions/3482742/gravity-and-layout-gravity-on-android\n","slug":"android/UI相关/布局/2016-02-22-Layout-Gravity和Gravity","published":1,"updated":"2016-10-13T06:34:38.473Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f011u0047cwjrpzxpsmzc","content":"<h2 id=\"Android-Layout-Gravity和Gravity\"><a href=\"#Android-Layout-Gravity和Gravity\" class=\"headerlink\" title=\"Android Layout_Gravity和Gravity\"></a>Android Layout_Gravity和Gravity</h2><p>简单来说layout_gravity表示子控件在父容器的位置，gravity表示控件内容在控件内的位置。<br><img src=\"http://i.stack.imgur.com/xKdfI.png\" alt=\"如图所示\"></p>\n<p>上面图片的xml代码</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"php\"><span class=\"meta\">&lt;?</span>xml version=<span class=\"string\">\"1.0\"</span> encoding=<span class=\"string\">\"utf-8\"</span><span class=\"meta\">?&gt;</span></span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></span></div><div class=\"line\">              <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">              <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">              <span class=\"attr\">android:orientation</span>=<span class=\"string\">\"vertical\"</span> &gt;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span></span></div><div class=\"line\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"0dp\"</span></div><div class=\"line\">            <span class=\"attr\">android:layout_weight</span>=<span class=\"string\">\"1\"</span></div><div class=\"line\">            <span class=\"attr\">android:background</span>=<span class=\"string\">\"#e3e2ad\"</span></div><div class=\"line\">            <span class=\"attr\">android:orientation</span>=<span class=\"string\">\"vertical\"</span></div><div class=\"line\">            <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/\"</span>&gt;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></div><div class=\"line\">                <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">                <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">                <span class=\"attr\">android:layout_gravity</span>=<span class=\"string\">\"center_horizontal\"</span></div><div class=\"line\">                <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"24sp\"</span></div><div class=\"line\">                <span class=\"attr\">android:text</span>=<span class=\"string\">\"gravity=\"</span> /&gt;</div><div class=\"line\">        <span class=\"comment\">&lt;!--如何设置为wrap_content 则gravity失效--&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></div><div class=\"line\">                <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"200dp\"</span></div><div class=\"line\">                <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"40dp\"</span></div><div class=\"line\">                <span class=\"attr\">android:background</span>=<span class=\"string\">\"#bcf5b1\"</span></div><div class=\"line\">                <span class=\"attr\">android:gravity</span>=<span class=\"string\">\"left\"</span></div><div class=\"line\">                <span class=\"attr\">android:text</span>=<span class=\"string\">\"left\"</span> /&gt;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></div><div class=\"line\">                <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"200dp\"</span></div><div class=\"line\">                <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"40dp\"</span></div><div class=\"line\">                <span class=\"attr\">android:background</span>=<span class=\"string\">\"#aacaff\"</span></div><div class=\"line\">                <span class=\"attr\">android:gravity</span>=<span class=\"string\">\"center_horizontal\"</span></div><div class=\"line\">                <span class=\"attr\">android:text</span>=<span class=\"string\">\"center_horizontal\"</span> /&gt;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></div><div class=\"line\">                <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"200dp\"</span></div><div class=\"line\">                <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"40dp\"</span></div><div class=\"line\">                <span class=\"attr\">android:background</span>=<span class=\"string\">\"#bcf5b1\"</span></div><div class=\"line\">                <span class=\"attr\">android:gravity</span>=<span class=\"string\">\"right\"</span></div><div class=\"line\">                <span class=\"attr\">android:text</span>=<span class=\"string\">\"right\"</span> /&gt;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></div><div class=\"line\">                <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"200dp\"</span></div><div class=\"line\">                <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"40dp\"</span></div><div class=\"line\">                <span class=\"attr\">android:background</span>=<span class=\"string\">\"#aacaff\"</span></div><div class=\"line\">                <span class=\"attr\">android:gravity</span>=<span class=\"string\">\"center\"</span></div><div class=\"line\">                <span class=\"attr\">android:text</span>=<span class=\"string\">\"center\"</span> /&gt;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></div><div class=\"line\">    <span class=\"comment\">&lt;!--match_parent改为wrap_content则下面的layout_gravity失效--&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span></span></div><div class=\"line\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"0dp\"</span></div><div class=\"line\">            <span class=\"attr\">android:layout_weight</span>=<span class=\"string\">\"1\"</span></div><div class=\"line\">            <span class=\"attr\">android:background</span>=<span class=\"string\">\"#d6c6cd\"</span></div><div class=\"line\">            <span class=\"attr\">android:orientation</span>=<span class=\"string\">\"vertical\"</span> &gt;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></div><div class=\"line\">                <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">                <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">                <span class=\"attr\">android:layout_gravity</span>=<span class=\"string\">\"center_horizontal\"</span></div><div class=\"line\">                <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"24sp\"</span></div><div class=\"line\">                <span class=\"attr\">android:text</span>=<span class=\"string\">\"layout_gravity=\"</span> /&gt;</div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></div><div class=\"line\">                <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"200dp\"</span></div><div class=\"line\">                <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"40dp\"</span></div><div class=\"line\">                <span class=\"attr\">android:layout_gravity</span>=<span class=\"string\">\"left\"</span></div><div class=\"line\">                <span class=\"attr\">android:background</span>=<span class=\"string\">\"#bcf5b1\"</span></div><div class=\"line\">                <span class=\"attr\">android:text</span>=<span class=\"string\">\"left\"</span> /&gt;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></div><div class=\"line\">                <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"200dp\"</span></div><div class=\"line\">                <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"40dp\"</span></div><div class=\"line\">                <span class=\"attr\">android:layout_gravity</span>=<span class=\"string\">\"center_horizontal\"</span></div><div class=\"line\">                <span class=\"attr\">android:background</span>=<span class=\"string\">\"#aacaff\"</span></div><div class=\"line\">                <span class=\"attr\">android:text</span>=<span class=\"string\">\"center_horizontal\"</span> /&gt;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></div><div class=\"line\">                <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"200dp\"</span></div><div class=\"line\">                <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"40dp\"</span></div><div class=\"line\">                <span class=\"attr\">android:layout_gravity</span>=<span class=\"string\">\"right\"</span></div><div class=\"line\">                <span class=\"attr\">android:background</span>=<span class=\"string\">\"#bcf5b1\"</span></div><div class=\"line\">                <span class=\"attr\">android:text</span>=<span class=\"string\">\"right\"</span></div><div class=\"line\">                <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/\"</span>/&gt;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></div><div class=\"line\">                <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"200dp\"</span></div><div class=\"line\">                <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"40dp\"</span></div><div class=\"line\">                <span class=\"attr\">android:layout_gravity</span>=<span class=\"string\">\"center\"</span></div><div class=\"line\">                <span class=\"attr\">android:background</span>=<span class=\"string\">\"#aacaff\"</span></div><div class=\"line\">                <span class=\"attr\">android:text</span>=<span class=\"string\">\"center\"</span> /&gt;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>参考<br>1.<a href=\"http://stackoverflow.com/questions/3482742/gravity-and-layout-gravity-on-android\" target=\"_blank\" rel=\"external\">Gravity and layout_gravity on Android</a></p>\n","excerpt":"","more":"<h2 id=\"Android-Layout-Gravity和Gravity\"><a href=\"#Android-Layout-Gravity和Gravity\" class=\"headerlink\" title=\"Android Layout_Gravity和Gravity\"></a>Android Layout_Gravity和Gravity</h2><p>简单来说layout_gravity表示子控件在父容器的位置，gravity表示控件内容在控件内的位置。<br><img src=\"http://i.stack.imgur.com/xKdfI.png\" alt=\"如图所示\"></p>\n<p>上面图片的xml代码</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"php\"><span class=\"meta\">&lt;?</span>xml version=<span class=\"string\">\"1.0\"</span> encoding=<span class=\"string\">\"utf-8\"</span><span class=\"meta\">?&gt;</span></span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></div><div class=\"line\">              <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">              <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">              <span class=\"attr\">android:orientation</span>=<span class=\"string\">\"vertical\"</span> &gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span></div><div class=\"line\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"0dp\"</span></div><div class=\"line\">            <span class=\"attr\">android:layout_weight</span>=<span class=\"string\">\"1\"</span></div><div class=\"line\">            <span class=\"attr\">android:background</span>=<span class=\"string\">\"#e3e2ad\"</span></div><div class=\"line\">            <span class=\"attr\">android:orientation</span>=<span class=\"string\">\"vertical\"</span></div><div class=\"line\">            <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/\"</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></div><div class=\"line\">                <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">                <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">                <span class=\"attr\">android:layout_gravity</span>=<span class=\"string\">\"center_horizontal\"</span></div><div class=\"line\">                <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"24sp\"</span></div><div class=\"line\">                <span class=\"attr\">android:text</span>=<span class=\"string\">\"gravity=\"</span> /&gt;</span></div><div class=\"line\">        <span class=\"comment\">&lt;!--如何设置为wrap_content 则gravity失效--&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></div><div class=\"line\">                <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"200dp\"</span></div><div class=\"line\">                <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"40dp\"</span></div><div class=\"line\">                <span class=\"attr\">android:background</span>=<span class=\"string\">\"#bcf5b1\"</span></div><div class=\"line\">                <span class=\"attr\">android:gravity</span>=<span class=\"string\">\"left\"</span></div><div class=\"line\">                <span class=\"attr\">android:text</span>=<span class=\"string\">\"left\"</span> /&gt;</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></div><div class=\"line\">                <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"200dp\"</span></div><div class=\"line\">                <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"40dp\"</span></div><div class=\"line\">                <span class=\"attr\">android:background</span>=<span class=\"string\">\"#aacaff\"</span></div><div class=\"line\">                <span class=\"attr\">android:gravity</span>=<span class=\"string\">\"center_horizontal\"</span></div><div class=\"line\">                <span class=\"attr\">android:text</span>=<span class=\"string\">\"center_horizontal\"</span> /&gt;</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></div><div class=\"line\">                <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"200dp\"</span></div><div class=\"line\">                <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"40dp\"</span></div><div class=\"line\">                <span class=\"attr\">android:background</span>=<span class=\"string\">\"#bcf5b1\"</span></div><div class=\"line\">                <span class=\"attr\">android:gravity</span>=<span class=\"string\">\"right\"</span></div><div class=\"line\">                <span class=\"attr\">android:text</span>=<span class=\"string\">\"right\"</span> /&gt;</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></div><div class=\"line\">                <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"200dp\"</span></div><div class=\"line\">                <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"40dp\"</span></div><div class=\"line\">                <span class=\"attr\">android:background</span>=<span class=\"string\">\"#aacaff\"</span></div><div class=\"line\">                <span class=\"attr\">android:gravity</span>=<span class=\"string\">\"center\"</span></div><div class=\"line\">                <span class=\"attr\">android:text</span>=<span class=\"string\">\"center\"</span> /&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></div><div class=\"line\">    <span class=\"comment\">&lt;!--match_parent改为wrap_content则下面的layout_gravity失效--&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span></div><div class=\"line\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"0dp\"</span></div><div class=\"line\">            <span class=\"attr\">android:layout_weight</span>=<span class=\"string\">\"1\"</span></div><div class=\"line\">            <span class=\"attr\">android:background</span>=<span class=\"string\">\"#d6c6cd\"</span></div><div class=\"line\">            <span class=\"attr\">android:orientation</span>=<span class=\"string\">\"vertical\"</span> &gt;</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></div><div class=\"line\">                <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">                <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">                <span class=\"attr\">android:layout_gravity</span>=<span class=\"string\">\"center_horizontal\"</span></div><div class=\"line\">                <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"24sp\"</span></div><div class=\"line\">                <span class=\"attr\">android:text</span>=<span class=\"string\">\"layout_gravity=\"</span> /&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></div><div class=\"line\">                <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"200dp\"</span></div><div class=\"line\">                <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"40dp\"</span></div><div class=\"line\">                <span class=\"attr\">android:layout_gravity</span>=<span class=\"string\">\"left\"</span></div><div class=\"line\">                <span class=\"attr\">android:background</span>=<span class=\"string\">\"#bcf5b1\"</span></div><div class=\"line\">                <span class=\"attr\">android:text</span>=<span class=\"string\">\"left\"</span> /&gt;</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></div><div class=\"line\">                <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"200dp\"</span></div><div class=\"line\">                <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"40dp\"</span></div><div class=\"line\">                <span class=\"attr\">android:layout_gravity</span>=<span class=\"string\">\"center_horizontal\"</span></div><div class=\"line\">                <span class=\"attr\">android:background</span>=<span class=\"string\">\"#aacaff\"</span></div><div class=\"line\">                <span class=\"attr\">android:text</span>=<span class=\"string\">\"center_horizontal\"</span> /&gt;</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></div><div class=\"line\">                <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"200dp\"</span></div><div class=\"line\">                <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"40dp\"</span></div><div class=\"line\">                <span class=\"attr\">android:layout_gravity</span>=<span class=\"string\">\"right\"</span></div><div class=\"line\">                <span class=\"attr\">android:background</span>=<span class=\"string\">\"#bcf5b1\"</span></div><div class=\"line\">                <span class=\"attr\">android:text</span>=<span class=\"string\">\"right\"</span></div><div class=\"line\">                <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/\"</span>/&gt;</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></div><div class=\"line\">                <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"200dp\"</span></div><div class=\"line\">                <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"40dp\"</span></div><div class=\"line\">                <span class=\"attr\">android:layout_gravity</span>=<span class=\"string\">\"center\"</span></div><div class=\"line\">                <span class=\"attr\">android:background</span>=<span class=\"string\">\"#aacaff\"</span></div><div class=\"line\">                <span class=\"attr\">android:text</span>=<span class=\"string\">\"center\"</span> /&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>参考<br>1.<a href=\"http://stackoverflow.com/questions/3482742/gravity-and-layout-gravity-on-android\">Gravity and layout_gravity on Android</a></p>\n"},{"author":"ivyxjc","date":"2016-06-01T16:00:00.000Z","title":"Sunshine开发实战:数据持久化","keywords":null,"description":null,"_content":"\n##　Sunshine应用数据存储总体框架\n![](http://oezmbgg4j.bkt.clouddn.com/sunshine_data_persistence.png)\n\n## WeatherContract\nA contract is an agreement between the data model, storeage, and views, presentation, describing how information is accessed.\n事实上就是在一个类中规定好所有相关的数据表中相应的表名,列名等等.\n\n## WeatherDBHelper\n\n创建数据库并进行初始化\n","source":"_posts/android/开发实战/Sunshine开发实战/2016-06-02-data-persistence.md","raw":"---\nauthor: ivyxjc\ndate: 2016-06-02\ntitle: Sunshine开发实战:数据持久化\ncategory: Android\ntags: [android,android_data_persistence]\nkeywords:\ndescription:\n---\n\n##　Sunshine应用数据存储总体框架\n![](http://oezmbgg4j.bkt.clouddn.com/sunshine_data_persistence.png)\n\n## WeatherContract\nA contract is an agreement between the data model, storeage, and views, presentation, describing how information is accessed.\n事实上就是在一个类中规定好所有相关的数据表中相应的表名,列名等等.\n\n## WeatherDBHelper\n\n创建数据库并进行初始化\n","slug":"android/开发实战/Sunshine开发实战/2016-06-02-data-persistence","published":1,"updated":"2016-10-13T13:29:32.982Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f011w004acwjr6ub4qc8x","content":"<p>##　Sunshine应用数据存储总体框架<br><img src=\"http://oezmbgg4j.bkt.clouddn.com/sunshine_data_persistence.png\" alt=\"\"></p>\n<h2 id=\"WeatherContract\"><a href=\"#WeatherContract\" class=\"headerlink\" title=\"WeatherContract\"></a>WeatherContract</h2><p>A contract is an agreement between the data model, storeage, and views, presentation, describing how information is accessed.<br>事实上就是在一个类中规定好所有相关的数据表中相应的表名,列名等等.</p>\n<h2 id=\"WeatherDBHelper\"><a href=\"#WeatherDBHelper\" class=\"headerlink\" title=\"WeatherDBHelper\"></a>WeatherDBHelper</h2><p>创建数据库并进行初始化</p>\n","excerpt":"","more":"<p>##　Sunshine应用数据存储总体框架<br><img src=\"http://oezmbgg4j.bkt.clouddn.com/sunshine_data_persistence.png\" alt=\"\"></p>\n<h2 id=\"WeatherContract\"><a href=\"#WeatherContract\" class=\"headerlink\" title=\"WeatherContract\"></a>WeatherContract</h2><p>A contract is an agreement between the data model, storeage, and views, presentation, describing how information is accessed.<br>事实上就是在一个类中规定好所有相关的数据表中相应的表名,列名等等.</p>\n<h2 id=\"WeatherDBHelper\"><a href=\"#WeatherDBHelper\" class=\"headerlink\" title=\"WeatherDBHelper\"></a>WeatherDBHelper</h2><p>创建数据库并进行初始化</p>\n"},{"author":"ivyxjc","date":"2016-06-02T16:00:00.000Z","title":"Sunshine开发实战:测试","keywords":null,"description":"Android开发中如何进行测试的简单例子.","_content":"\n## 简单的例子\n\n```java\npublic class TestPractice extends AndroidTestCase {\n    //测试前进行的工作\n    @Override\n    protected void setUp() throws Exception {\n        super.setUp();\n    }\n\n//所有测试的类必须以test开头\n    public void testThatDemonstratesAssertations() throws Throwable{\n        int a=5;\n        int b=3;\n        int c=5;\n        int d=10;\n\n        assertEquals(\"X should be equal\",a,c);\n        assertTrue(\"Y should be true\",d>a);\n        assertFalse(\"Z should be false\",a==b);\n\n    }\n\n    //测试之后进行的工作\n    @Override\n    protected void tearDown() throws Exception {\n        super.tearDown();\n    }\n}\n```\n然后点击`run 'Tests in ...`即可.\n![](http://oezmbgg4j.bkt.clouddn.com/android_test_run.png)\n","source":"_posts/android/开发实战/Sunshine开发实战/2016-06-03-android-test.md","raw":"---\nauthor: ivyxjc\ndate: 2016-06-03\ntitle: Sunshine开发实战:测试\ncategory: Android\ntags: [android,android_test]\nkeywords:\ndescription: Android开发中如何进行测试的简单例子.\n---\n\n## 简单的例子\n\n```java\npublic class TestPractice extends AndroidTestCase {\n    //测试前进行的工作\n    @Override\n    protected void setUp() throws Exception {\n        super.setUp();\n    }\n\n//所有测试的类必须以test开头\n    public void testThatDemonstratesAssertations() throws Throwable{\n        int a=5;\n        int b=3;\n        int c=5;\n        int d=10;\n\n        assertEquals(\"X should be equal\",a,c);\n        assertTrue(\"Y should be true\",d>a);\n        assertFalse(\"Z should be false\",a==b);\n\n    }\n\n    //测试之后进行的工作\n    @Override\n    protected void tearDown() throws Exception {\n        super.tearDown();\n    }\n}\n```\n然后点击`run 'Tests in ...`即可.\n![](http://oezmbgg4j.bkt.clouddn.com/android_test_run.png)\n","slug":"android/开发实战/Sunshine开发实战/2016-06-03-android-test","published":1,"updated":"2016-10-13T13:29:38.135Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f011x004ccwjr4ridt3fd","content":"<h2 id=\"简单的例子\"><a href=\"#简单的例子\" class=\"headerlink\" title=\"简单的例子\"></a>简单的例子</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestPractice</span> <span class=\"keyword\">extends</span> <span class=\"title\">AndroidTestCase</span> </span>&#123;</div><div class=\"line\">    <span class=\"comment\">//测试前进行的工作</span></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">setUp</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.setUp();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//所有测试的类必须以test开头</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testThatDemonstratesAssertations</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Throwable</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">int</span> a=<span class=\"number\">5</span>;</div><div class=\"line\">        <span class=\"keyword\">int</span> b=<span class=\"number\">3</span>;</div><div class=\"line\">        <span class=\"keyword\">int</span> c=<span class=\"number\">5</span>;</div><div class=\"line\">        <span class=\"keyword\">int</span> d=<span class=\"number\">10</span>;</div><div class=\"line\"></div><div class=\"line\">        assertEquals(<span class=\"string\">\"X should be equal\"</span>,a,c);</div><div class=\"line\">        assertTrue(<span class=\"string\">\"Y should be true\"</span>,d&gt;a);</div><div class=\"line\">        assertFalse(<span class=\"string\">\"Z should be false\"</span>,a==b);</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//测试之后进行的工作</span></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">tearDown</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.tearDown();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>然后点击<code>run &#39;Tests in ...</code>即可.<br><img src=\"http://oezmbgg4j.bkt.clouddn.com/android_test_run.png\" alt=\"\"></p>\n","excerpt":"","more":"<h2 id=\"简单的例子\"><a href=\"#简单的例子\" class=\"headerlink\" title=\"简单的例子\"></a>简单的例子</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestPractice</span> <span class=\"keyword\">extends</span> <span class=\"title\">AndroidTestCase</span> </span>&#123;</div><div class=\"line\">    <span class=\"comment\">//测试前进行的工作</span></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">setUp</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.setUp();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//所有测试的类必须以test开头</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testThatDemonstratesAssertations</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Throwable</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">int</span> a=<span class=\"number\">5</span>;</div><div class=\"line\">        <span class=\"keyword\">int</span> b=<span class=\"number\">3</span>;</div><div class=\"line\">        <span class=\"keyword\">int</span> c=<span class=\"number\">5</span>;</div><div class=\"line\">        <span class=\"keyword\">int</span> d=<span class=\"number\">10</span>;</div><div class=\"line\"></div><div class=\"line\">        assertEquals(<span class=\"string\">\"X should be equal\"</span>,a,c);</div><div class=\"line\">        assertTrue(<span class=\"string\">\"Y should be true\"</span>,d&gt;a);</div><div class=\"line\">        assertFalse(<span class=\"string\">\"Z should be false\"</span>,a==b);</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//测试之后进行的工作</span></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">tearDown</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.tearDown();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>然后点击<code>run &#39;Tests in ...</code>即可.<br><img src=\"http://oezmbgg4j.bkt.clouddn.com/android_test_run.png\" alt=\"\"></p>\n"},{"author":"ivyxjc","date":"2016-06-02T16:00:00.000Z","title":"Sunshine开发实战:架构(与官方原版有一些不同)","keywords":null,"description":null,"_content":"\n## 搜索\n通过搜索按钮,进入搜索界面,进行搜索,返回搜索结果,选择,将地址存入数据库中.\n\n## 刷新\n点击刷新按钮,联网获取数据,处理数据,若数据非null,存入数据库,从数据库中读取数据,刷新UI.\n","source":"_posts/android/开发实战/Sunshine开发实战/2016-06-03-sunshine-build-custom.md","raw":"---\nauthor: ivyxjc\ndate: 2016-06-03\ntitle: Sunshine开发实战:架构(与官方原版有一些不同)\ncategory: Android\ntags: [android]\nkeywords:\ndescription:\n---\n\n## 搜索\n通过搜索按钮,进入搜索界面,进行搜索,返回搜索结果,选择,将地址存入数据库中.\n\n## 刷新\n点击刷新按钮,联网获取数据,处理数据,若数据非null,存入数据库,从数据库中读取数据,刷新UI.\n","slug":"android/开发实战/Sunshine开发实战/2016-06-03-sunshine-build-custom","published":1,"updated":"2016-10-13T06:34:38.509Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f011z004fcwjrxc8fpm6e","content":"<h2 id=\"搜索\"><a href=\"#搜索\" class=\"headerlink\" title=\"搜索\"></a>搜索</h2><p>通过搜索按钮,进入搜索界面,进行搜索,返回搜索结果,选择,将地址存入数据库中.</p>\n<h2 id=\"刷新\"><a href=\"#刷新\" class=\"headerlink\" title=\"刷新\"></a>刷新</h2><p>点击刷新按钮,联网获取数据,处理数据,若数据非null,存入数据库,从数据库中读取数据,刷新UI.</p>\n","excerpt":"","more":"<h2 id=\"搜索\"><a href=\"#搜索\" class=\"headerlink\" title=\"搜索\"></a>搜索</h2><p>通过搜索按钮,进入搜索界面,进行搜索,返回搜索结果,选择,将地址存入数据库中.</p>\n<h2 id=\"刷新\"><a href=\"#刷新\" class=\"headerlink\" title=\"刷新\"></a>刷新</h2><p>点击刷新按钮,联网获取数据,处理数据,若数据非null,存入数据库,从数据库中读取数据,刷新UI.</p>\n"},{"author":"ivyxjc","date":"2016-07-06T16:00:00.000Z","title":"简易计算器开发","keywords":null,"description":"一个简易计算器的开发中遇到的EditText相关问题.","_content":"\n## edittext按回车时操作\n\n如果有多行，没一行有多个edittext时，按回车时，它会到下一行的edittext之中，而不是同一行的下一个editext。\n\n在xml文件中添加`imeOptions`。\n\n```xml\n<EditText\n        android:layout_width=\"0dp\"\n        android:layout_weight=\"1\"\n        android:layout_height=\"wrap_content\"\n        android:inputType=\"numberDecimal\"\n        android:id=\"@+id/editText3\"\n        android:imeOptions=\"actionNext\"/>\n```\n\n但是最后一行按回车回跳到下一行最后一个而不是下一行第一个。\n\n\n\n## listfragment自己编写listadapter中button监听问题\n\nlistfragment自己编写listadapter中button总是监听最后一个item中的数据。\n\n![](http://oezmbgg4j.bkt.clouddn.com/listview_button_click.gif)\n\n无论点击哪一个button都是计算最后一行。\n","source":"_posts/android/开发实战/个人开发/2016-07-07-calculator.md","raw":"---\nauthor: ivyxjc\ndate: 2016-07-07\ntitle: 简易计算器开发\ncategory: Android\ntags: [android,android_project]\nkeywords:\ndescription: 一个简易计算器的开发中遇到的EditText相关问题.\n---\n\n## edittext按回车时操作\n\n如果有多行，没一行有多个edittext时，按回车时，它会到下一行的edittext之中，而不是同一行的下一个editext。\n\n在xml文件中添加`imeOptions`。\n\n```xml\n<EditText\n        android:layout_width=\"0dp\"\n        android:layout_weight=\"1\"\n        android:layout_height=\"wrap_content\"\n        android:inputType=\"numberDecimal\"\n        android:id=\"@+id/editText3\"\n        android:imeOptions=\"actionNext\"/>\n```\n\n但是最后一行按回车回跳到下一行最后一个而不是下一行第一个。\n\n\n\n## listfragment自己编写listadapter中button监听问题\n\nlistfragment自己编写listadapter中button总是监听最后一个item中的数据。\n\n![](http://oezmbgg4j.bkt.clouddn.com/listview_button_click.gif)\n\n无论点击哪一个button都是计算最后一行。\n","slug":"android/开发实战/个人开发/2016-07-07-calculator","published":1,"updated":"2016-10-13T13:29:44.669Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f0123004hcwjrq59fwskf","content":"<h2 id=\"edittext按回车时操作\"><a href=\"#edittext按回车时操作\" class=\"headerlink\" title=\"edittext按回车时操作\"></a>edittext按回车时操作</h2><p>如果有多行，没一行有多个edittext时，按回车时，它会到下一行的edittext之中，而不是同一行的下一个editext。</p>\n<p>在xml文件中添加<code>imeOptions</code>。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">EditText</span></span></div><div class=\"line\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"0dp\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_weight</span>=<span class=\"string\">\"1\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">        <span class=\"attr\">android:inputType</span>=<span class=\"string\">\"numberDecimal\"</span></div><div class=\"line\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/editText3\"</span></div><div class=\"line\">        <span class=\"attr\">android:imeOptions</span>=<span class=\"string\">\"actionNext\"</span>/&gt;</div></pre></td></tr></table></figure>\n<p>但是最后一行按回车回跳到下一行最后一个而不是下一行第一个。</p>\n<h2 id=\"listfragment自己编写listadapter中button监听问题\"><a href=\"#listfragment自己编写listadapter中button监听问题\" class=\"headerlink\" title=\"listfragment自己编写listadapter中button监听问题\"></a>listfragment自己编写listadapter中button监听问题</h2><p>listfragment自己编写listadapter中button总是监听最后一个item中的数据。</p>\n<p><img src=\"http://oezmbgg4j.bkt.clouddn.com/listview_button_click.gif\" alt=\"\"></p>\n<p>无论点击哪一个button都是计算最后一行。</p>\n","excerpt":"","more":"<h2 id=\"edittext按回车时操作\"><a href=\"#edittext按回车时操作\" class=\"headerlink\" title=\"edittext按回车时操作\"></a>edittext按回车时操作</h2><p>如果有多行，没一行有多个edittext时，按回车时，它会到下一行的edittext之中，而不是同一行的下一个editext。</p>\n<p>在xml文件中添加<code>imeOptions</code>。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">EditText</span></div><div class=\"line\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"0dp\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_weight</span>=<span class=\"string\">\"1\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">        <span class=\"attr\">android:inputType</span>=<span class=\"string\">\"numberDecimal\"</span></div><div class=\"line\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/editText3\"</span></div><div class=\"line\">        <span class=\"attr\">android:imeOptions</span>=<span class=\"string\">\"actionNext\"</span>/&gt;</span></div></pre></td></tr></table></figure>\n<p>但是最后一行按回车回跳到下一行最后一个而不是下一行第一个。</p>\n<h2 id=\"listfragment自己编写listadapter中button监听问题\"><a href=\"#listfragment自己编写listadapter中button监听问题\" class=\"headerlink\" title=\"listfragment自己编写listadapter中button监听问题\"></a>listfragment自己编写listadapter中button监听问题</h2><p>listfragment自己编写listadapter中button总是监听最后一个item中的数据。</p>\n<p><img src=\"http://oezmbgg4j.bkt.clouddn.com/listview_button_click.gif\" alt=\"\"></p>\n<p>无论点击哪一个button都是计算最后一行。</p>\n"},{"author":"ivyxjc","date":"2016-03-24T16:00:00.000Z","title":"AlertDialog","keywords":null,"description":null,"_content":"\n\n## 在Activity中调用AlertDialog\n\n只能在`Activity`中调用`AlertDialog`，所以要想在`Receiver`中使用`AlerDialog`，可以在`Receiver`中用`starActivity()`启动有`AlertDialog`的`Activity`。\n\n\n```java\n@Override\npublic void onReceive(final Context context, Intent intent) {\n    Intent i=new Intent(context,AlertDialogActivity.class);\n    i.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);;\n    context.startActivity(i);\n}\n```\n\n```java\npublic class AlertDialogActivity extends Activity {\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n\n        AlertDialog.Builder dialogBuilder=new AlertDialog.Builder(this);\n        dialogBuilder.setTitle(\"Warning\");\n\n        dialogBuilder.setMessage(\"you are force to be offline\");\n        dialogBuilder.setCancelable(false);\n        dialogBuilder.setPositiveButton(\"OK\",\n                new DialogInterface.OnClickListener() {\n                    @Override\n                    public void onClick(DialogInterface dialog, int which) {\n                        ActivityCollector.finishAll();\n                        Intent intent = new Intent(AlertDialogActivity.this,LoginActivity.class);\n                        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n                        startActivity(intent);//重新启动LoginActivity\n\n                    }\n                });\n        AlertDialog alertDialog=dialogBuilder.create();\n\n        alertDialog.getWindow().setType(WindowManager.LayoutParams.TYPE_SYSTEM_ALERT);\n        alertDialog.show();\n    }\n}\n```\n","source":"_posts/android/控件/AlertDialog/2016-03-25-Alert-Dialog.md","raw":"---\nauthor: ivyxjc\ndate: 2016-03-25\ntitle: AlertDialog\ncategory: Android\ntags: [android,android_control]\nkeywords:\ndescription:\n---\n\n\n## 在Activity中调用AlertDialog\n\n只能在`Activity`中调用`AlertDialog`，所以要想在`Receiver`中使用`AlerDialog`，可以在`Receiver`中用`starActivity()`启动有`AlertDialog`的`Activity`。\n\n\n```java\n@Override\npublic void onReceive(final Context context, Intent intent) {\n    Intent i=new Intent(context,AlertDialogActivity.class);\n    i.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);;\n    context.startActivity(i);\n}\n```\n\n```java\npublic class AlertDialogActivity extends Activity {\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n\n        AlertDialog.Builder dialogBuilder=new AlertDialog.Builder(this);\n        dialogBuilder.setTitle(\"Warning\");\n\n        dialogBuilder.setMessage(\"you are force to be offline\");\n        dialogBuilder.setCancelable(false);\n        dialogBuilder.setPositiveButton(\"OK\",\n                new DialogInterface.OnClickListener() {\n                    @Override\n                    public void onClick(DialogInterface dialog, int which) {\n                        ActivityCollector.finishAll();\n                        Intent intent = new Intent(AlertDialogActivity.this,LoginActivity.class);\n                        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n                        startActivity(intent);//重新启动LoginActivity\n\n                    }\n                });\n        AlertDialog alertDialog=dialogBuilder.create();\n\n        alertDialog.getWindow().setType(WindowManager.LayoutParams.TYPE_SYSTEM_ALERT);\n        alertDialog.show();\n    }\n}\n```\n","slug":"android/控件/AlertDialog/2016-03-25-Alert-Dialog","published":1,"updated":"2016-10-13T06:34:38.515Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f0124004lcwjrv7w6hthw","content":"<h2 id=\"在Activity中调用AlertDialog\"><a href=\"#在Activity中调用AlertDialog\" class=\"headerlink\" title=\"在Activity中调用AlertDialog\"></a>在Activity中调用AlertDialog</h2><p>只能在<code>Activity</code>中调用<code>AlertDialog</code>，所以要想在<code>Receiver</code>中使用<code>AlerDialog</code>，可以在<code>Receiver</code>中用<code>starActivity()</code>启动有<code>AlertDialog</code>的<code>Activity</code>。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Override</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onReceive</span><span class=\"params\">(<span class=\"keyword\">final</span> Context context, Intent intent)</span> </span>&#123;</div><div class=\"line\">    Intent i=<span class=\"keyword\">new</span> Intent(context,AlertDialogActivity.class);</div><div class=\"line\">    i.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);;</div><div class=\"line\">    context.startActivity(i);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AlertDialogActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">Activity</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\"></div><div class=\"line\">        AlertDialog.Builder dialogBuilder=<span class=\"keyword\">new</span> AlertDialog.Builder(<span class=\"keyword\">this</span>);</div><div class=\"line\">        dialogBuilder.setTitle(<span class=\"string\">\"Warning\"</span>);</div><div class=\"line\"></div><div class=\"line\">        dialogBuilder.setMessage(<span class=\"string\">\"you are force to be offline\"</span>);</div><div class=\"line\">        dialogBuilder.setCancelable(<span class=\"keyword\">false</span>);</div><div class=\"line\">        dialogBuilder.setPositiveButton(<span class=\"string\">\"OK\"</span>,</div><div class=\"line\">                <span class=\"keyword\">new</span> DialogInterface.OnClickListener() &#123;</div><div class=\"line\">                    <span class=\"meta\">@Override</span></div><div class=\"line\">                    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(DialogInterface dialog, <span class=\"keyword\">int</span> which)</span> </span>&#123;</div><div class=\"line\">                        ActivityCollector.finishAll();</div><div class=\"line\">                        Intent intent = <span class=\"keyword\">new</span> Intent(AlertDialogActivity.<span class=\"keyword\">this</span>,LoginActivity.class);</div><div class=\"line\">                        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</div><div class=\"line\">                        startActivity(intent);<span class=\"comment\">//重新启动LoginActivity</span></div><div class=\"line\"></div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;);</div><div class=\"line\">        AlertDialog alertDialog=dialogBuilder.create();</div><div class=\"line\"></div><div class=\"line\">        alertDialog.getWindow().setType(WindowManager.LayoutParams.TYPE_SYSTEM_ALERT);</div><div class=\"line\">        alertDialog.show();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h2 id=\"在Activity中调用AlertDialog\"><a href=\"#在Activity中调用AlertDialog\" class=\"headerlink\" title=\"在Activity中调用AlertDialog\"></a>在Activity中调用AlertDialog</h2><p>只能在<code>Activity</code>中调用<code>AlertDialog</code>，所以要想在<code>Receiver</code>中使用<code>AlerDialog</code>，可以在<code>Receiver</code>中用<code>starActivity()</code>启动有<code>AlertDialog</code>的<code>Activity</code>。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Override</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onReceive</span><span class=\"params\">(<span class=\"keyword\">final</span> Context context, Intent intent)</span> </span>&#123;</div><div class=\"line\">    Intent i=<span class=\"keyword\">new</span> Intent(context,AlertDialogActivity.class);</div><div class=\"line\">    i.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);;</div><div class=\"line\">    context.startActivity(i);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AlertDialogActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">Activity</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\"></div><div class=\"line\">        AlertDialog.Builder dialogBuilder=<span class=\"keyword\">new</span> AlertDialog.Builder(<span class=\"keyword\">this</span>);</div><div class=\"line\">        dialogBuilder.setTitle(<span class=\"string\">\"Warning\"</span>);</div><div class=\"line\"></div><div class=\"line\">        dialogBuilder.setMessage(<span class=\"string\">\"you are force to be offline\"</span>);</div><div class=\"line\">        dialogBuilder.setCancelable(<span class=\"keyword\">false</span>);</div><div class=\"line\">        dialogBuilder.setPositiveButton(<span class=\"string\">\"OK\"</span>,</div><div class=\"line\">                <span class=\"keyword\">new</span> DialogInterface.OnClickListener() &#123;</div><div class=\"line\">                    <span class=\"meta\">@Override</span></div><div class=\"line\">                    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(DialogInterface dialog, <span class=\"keyword\">int</span> which)</span> </span>&#123;</div><div class=\"line\">                        ActivityCollector.finishAll();</div><div class=\"line\">                        Intent intent = <span class=\"keyword\">new</span> Intent(AlertDialogActivity.<span class=\"keyword\">this</span>,LoginActivity.class);</div><div class=\"line\">                        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</div><div class=\"line\">                        startActivity(intent);<span class=\"comment\">//重新启动LoginActivity</span></div><div class=\"line\"></div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;);</div><div class=\"line\">        AlertDialog alertDialog=dialogBuilder.create();</div><div class=\"line\"></div><div class=\"line\">        alertDialog.getWindow().setType(WindowManager.LayoutParams.TYPE_SYSTEM_ALERT);</div><div class=\"line\">        alertDialog.show();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"},{"author":"ivyxjc","date":"2016-03-08T16:00:00.000Z","title":"ProgressBar和ProgressDialog","keywords":null,"description":"各种类型进度条的samples, 包括ProgressBar, ProgressDialog 以及如何自定义ProgressBar.","_content":"\n## 分类\n\n可以精确显示进度(可以显示刻度或者百分比)\n\n不可以精确显示进度()\n\n```java\n//显示两种进度条\nsetProgressBarVisibility(true);\nsetProgressBarIndeterminateVisibility(false);\n```\n\n还可分类为圆圈型，直线型。\n\n## ProgressBar属性\n\n```xml\nandroid:max=\"100\"\nandroid:progress=\"50\"----第一进度\nandroid:secondaryProgress=\"80\"---第二进度\nandroid:indeterminate=\"true\"---设置是否精确显示，true显示不精确显示进度，false表示精确显示进度\n```\n\n## 实例\n\n```java\nfirst=progressBar.getProgress();//获取第一进度条的进度\nsecond=progressBar.getSecondaryProgress();//获取第二进度条的进度\nmax=progressBar.getMax();//获取进度条的最大进度\nint firstPercent=(int)(first/(float)max*100);\nint seconPercent=(int)(second/(float)max*100);\ntext.setText(\"FirstProgress\"+firstPercent+\"%  SecondProgress\"+seconPercent+\"%\");\n\naddButton.setOnClickListener(this);\nreduceButton.setOnClickListener(this);\nresetButton.setOnClickListener(this);\n\npublic void onClick(View v) {\n    switch (v.getId()){\n        case R.id.add:{\n            first+=5;\n            second+=5;\n            break;\n        }\n        case R.id.reduce:{\n            first-=5;\n            second-=5;\n            break;\n        }\n        case R.id.reset:{\n            first=0;\n            second=10;\n            break;\n        }\n        default:{\n\n        }\n    }\n    //也可使用incrementProgress\n    progressBar.setProgress(first);\n    progressBar.setSecondaryProgress(second);\n    int firstPercent=(int)(first/(float)max*100);\n    int seconPercent=(int)(second/(float)max*100);\n    text.setText(\"FirstProgress\" + firstPercent + \"%  SecondProgress\" + seconPercent+\"%\");\n}\n```\n\n![](http://oezmbgg4j.bkt.clouddn.com/progressbar.gif)\n\n## ProgressDialog\n\n```xml\n<Button\n    android:id=\"@+id/showDialog\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:text=\"Dialog\"/>\n```\n\n```java\ncase R.id.showDialog:{\n    //新建ProgressDialog的对象\n    prodialog=new ProgressDialog(MainActivity.this);\n    //设置显示风格\n    prodialog.setProgress(ProgressDialog.STYLE_HORIZONTAL);\n    //设置标题\n    prodialog.setTitle(\"IVYXJC\");\n    //设置对话框文本\n    prodialog.setMessage(\"Welcome to ProgressDialog\");\n    //设置图标\n    prodialog.setIcon(android.R.drawable.ic_dialog_alert);\n    //设定最大进度\n    prodialog.setMax(100);\n    //设定初始化已经增长到的进度\n    prodialog.incrementProgressBy(50);\n    //进度条是明确显示进度的\n    prodialog.setIndeterminate(false);\n\n    //设定一个确定按钮\n    prodialog.setButton(DialogInterface.BUTTON_POSITIVE,\"确定\",new DialogInterface.OnClickListener()\n    {\n        @Override\n        public void onClick(DialogInterface dialog, int which) {\n            Toast.makeText(MainActivity.this,\"欢迎\",Toast.LENGTH_SHORT).show();\n        }\n    });\n\n    prodialog.show();\n    //\n\n\n    break;\n}\n```\n\n![](http://oezmbgg4j.bkt.clouddn.com/progressdialog.gif)\n\n## 自定义ProgressBar的样式\n\nProgressBar的样式是可以自定义的，可参考默认的样式更改。\n","source":"_posts/android/控件/Bar/2016-03-09-ProgressBar.md","raw":"---\nauthor: ivyxjc\ndate: 2016-03-09\ntitle: ProgressBar和ProgressDialog\ncategory: Android\ntags: [android,android_bar]\nkeywords:\ndescription: 各种类型进度条的samples, 包括ProgressBar, ProgressDialog 以及如何自定义ProgressBar.\n---\n\n## 分类\n\n可以精确显示进度(可以显示刻度或者百分比)\n\n不可以精确显示进度()\n\n```java\n//显示两种进度条\nsetProgressBarVisibility(true);\nsetProgressBarIndeterminateVisibility(false);\n```\n\n还可分类为圆圈型，直线型。\n\n## ProgressBar属性\n\n```xml\nandroid:max=\"100\"\nandroid:progress=\"50\"----第一进度\nandroid:secondaryProgress=\"80\"---第二进度\nandroid:indeterminate=\"true\"---设置是否精确显示，true显示不精确显示进度，false表示精确显示进度\n```\n\n## 实例\n\n```java\nfirst=progressBar.getProgress();//获取第一进度条的进度\nsecond=progressBar.getSecondaryProgress();//获取第二进度条的进度\nmax=progressBar.getMax();//获取进度条的最大进度\nint firstPercent=(int)(first/(float)max*100);\nint seconPercent=(int)(second/(float)max*100);\ntext.setText(\"FirstProgress\"+firstPercent+\"%  SecondProgress\"+seconPercent+\"%\");\n\naddButton.setOnClickListener(this);\nreduceButton.setOnClickListener(this);\nresetButton.setOnClickListener(this);\n\npublic void onClick(View v) {\n    switch (v.getId()){\n        case R.id.add:{\n            first+=5;\n            second+=5;\n            break;\n        }\n        case R.id.reduce:{\n            first-=5;\n            second-=5;\n            break;\n        }\n        case R.id.reset:{\n            first=0;\n            second=10;\n            break;\n        }\n        default:{\n\n        }\n    }\n    //也可使用incrementProgress\n    progressBar.setProgress(first);\n    progressBar.setSecondaryProgress(second);\n    int firstPercent=(int)(first/(float)max*100);\n    int seconPercent=(int)(second/(float)max*100);\n    text.setText(\"FirstProgress\" + firstPercent + \"%  SecondProgress\" + seconPercent+\"%\");\n}\n```\n\n![](http://oezmbgg4j.bkt.clouddn.com/progressbar.gif)\n\n## ProgressDialog\n\n```xml\n<Button\n    android:id=\"@+id/showDialog\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:text=\"Dialog\"/>\n```\n\n```java\ncase R.id.showDialog:{\n    //新建ProgressDialog的对象\n    prodialog=new ProgressDialog(MainActivity.this);\n    //设置显示风格\n    prodialog.setProgress(ProgressDialog.STYLE_HORIZONTAL);\n    //设置标题\n    prodialog.setTitle(\"IVYXJC\");\n    //设置对话框文本\n    prodialog.setMessage(\"Welcome to ProgressDialog\");\n    //设置图标\n    prodialog.setIcon(android.R.drawable.ic_dialog_alert);\n    //设定最大进度\n    prodialog.setMax(100);\n    //设定初始化已经增长到的进度\n    prodialog.incrementProgressBy(50);\n    //进度条是明确显示进度的\n    prodialog.setIndeterminate(false);\n\n    //设定一个确定按钮\n    prodialog.setButton(DialogInterface.BUTTON_POSITIVE,\"确定\",new DialogInterface.OnClickListener()\n    {\n        @Override\n        public void onClick(DialogInterface dialog, int which) {\n            Toast.makeText(MainActivity.this,\"欢迎\",Toast.LENGTH_SHORT).show();\n        }\n    });\n\n    prodialog.show();\n    //\n\n\n    break;\n}\n```\n\n![](http://oezmbgg4j.bkt.clouddn.com/progressdialog.gif)\n\n## 自定义ProgressBar的样式\n\nProgressBar的样式是可以自定义的，可参考默认的样式更改。\n","slug":"android/控件/Bar/2016-03-09-ProgressBar","published":1,"updated":"2016-10-13T13:30:00.995Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f0125004ncwjr6ab49obi","content":"<h2 id=\"分类\"><a href=\"#分类\" class=\"headerlink\" title=\"分类\"></a>分类</h2><p>可以精确显示进度(可以显示刻度或者百分比)</p>\n<p>不可以精确显示进度()</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//显示两种进度条</span></div><div class=\"line\">setProgressBarVisibility(<span class=\"keyword\">true</span>);</div><div class=\"line\">setProgressBarIndeterminateVisibility(<span class=\"keyword\">false</span>);</div></pre></td></tr></table></figure>\n<p>还可分类为圆圈型，直线型。</p>\n<h2 id=\"ProgressBar属性\"><a href=\"#ProgressBar属性\" class=\"headerlink\" title=\"ProgressBar属性\"></a>ProgressBar属性</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">android:max=\"100\"</div><div class=\"line\">android:progress=\"50\"----第一进度</div><div class=\"line\">android:secondaryProgress=\"80\"---第二进度</div><div class=\"line\">android:indeterminate=\"true\"---设置是否精确显示，true显示不精确显示进度，false表示精确显示进度</div></pre></td></tr></table></figure>\n<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div></pre></td><td class=\"code\"><pre><div class=\"line\">first=progressBar.getProgress();<span class=\"comment\">//获取第一进度条的进度</span></div><div class=\"line\">second=progressBar.getSecondaryProgress();<span class=\"comment\">//获取第二进度条的进度</span></div><div class=\"line\">max=progressBar.getMax();<span class=\"comment\">//获取进度条的最大进度</span></div><div class=\"line\"><span class=\"keyword\">int</span> firstPercent=(<span class=\"keyword\">int</span>)(first/(<span class=\"keyword\">float</span>)max*<span class=\"number\">100</span>);</div><div class=\"line\"><span class=\"keyword\">int</span> seconPercent=(<span class=\"keyword\">int</span>)(second/(<span class=\"keyword\">float</span>)max*<span class=\"number\">100</span>);</div><div class=\"line\">text.setText(<span class=\"string\">\"FirstProgress\"</span>+firstPercent+<span class=\"string\">\"%  SecondProgress\"</span>+seconPercent+<span class=\"string\">\"%\"</span>);</div><div class=\"line\"></div><div class=\"line\">addButton.setOnClickListener(<span class=\"keyword\">this</span>);</div><div class=\"line\">reduceButton.setOnClickListener(<span class=\"keyword\">this</span>);</div><div class=\"line\">resetButton.setOnClickListener(<span class=\"keyword\">this</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">switch</span> (v.getId())&#123;</div><div class=\"line\">        <span class=\"keyword\">case</span> R.id.add:&#123;</div><div class=\"line\">            first+=<span class=\"number\">5</span>;</div><div class=\"line\">            second+=<span class=\"number\">5</span>;</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">case</span> R.id.reduce:&#123;</div><div class=\"line\">            first-=<span class=\"number\">5</span>;</div><div class=\"line\">            second-=<span class=\"number\">5</span>;</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">case</span> R.id.reset:&#123;</div><div class=\"line\">            first=<span class=\"number\">0</span>;</div><div class=\"line\">            second=<span class=\"number\">10</span>;</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">default</span>:&#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">//也可使用incrementProgress</span></div><div class=\"line\">    progressBar.setProgress(first);</div><div class=\"line\">    progressBar.setSecondaryProgress(second);</div><div class=\"line\">    <span class=\"keyword\">int</span> firstPercent=(<span class=\"keyword\">int</span>)(first/(<span class=\"keyword\">float</span>)max*<span class=\"number\">100</span>);</div><div class=\"line\">    <span class=\"keyword\">int</span> seconPercent=(<span class=\"keyword\">int</span>)(second/(<span class=\"keyword\">float</span>)max*<span class=\"number\">100</span>);</div><div class=\"line\">    text.setText(<span class=\"string\">\"FirstProgress\"</span> + firstPercent + <span class=\"string\">\"%  SecondProgress\"</span> + seconPercent+<span class=\"string\">\"%\"</span>);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><img src=\"http://oezmbgg4j.bkt.clouddn.com/progressbar.gif\" alt=\"\"></p>\n<h2 id=\"ProgressDialog\"><a href=\"#ProgressDialog\" class=\"headerlink\" title=\"ProgressDialog\"></a>ProgressDialog</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span></span></div><div class=\"line\">    <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/showDialog\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">    <span class=\"attr\">android:text</span>=<span class=\"string\">\"Dialog\"</span>/&gt;</div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">case</span> R.id.showDialog:&#123;</div><div class=\"line\">    <span class=\"comment\">//新建ProgressDialog的对象</span></div><div class=\"line\">    prodialog=<span class=\"keyword\">new</span> ProgressDialog(MainActivity.<span class=\"keyword\">this</span>);</div><div class=\"line\">    <span class=\"comment\">//设置显示风格</span></div><div class=\"line\">    prodialog.setProgress(ProgressDialog.STYLE_HORIZONTAL);</div><div class=\"line\">    <span class=\"comment\">//设置标题</span></div><div class=\"line\">    prodialog.setTitle(<span class=\"string\">\"IVYXJC\"</span>);</div><div class=\"line\">    <span class=\"comment\">//设置对话框文本</span></div><div class=\"line\">    prodialog.setMessage(<span class=\"string\">\"Welcome to ProgressDialog\"</span>);</div><div class=\"line\">    <span class=\"comment\">//设置图标</span></div><div class=\"line\">    prodialog.setIcon(android.R.drawable.ic_dialog_alert);</div><div class=\"line\">    <span class=\"comment\">//设定最大进度</span></div><div class=\"line\">    prodialog.setMax(<span class=\"number\">100</span>);</div><div class=\"line\">    <span class=\"comment\">//设定初始化已经增长到的进度</span></div><div class=\"line\">    prodialog.incrementProgressBy(<span class=\"number\">50</span>);</div><div class=\"line\">    <span class=\"comment\">//进度条是明确显示进度的</span></div><div class=\"line\">    prodialog.setIndeterminate(<span class=\"keyword\">false</span>);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//设定一个确定按钮</span></div><div class=\"line\">    prodialog.setButton(DialogInterface.BUTTON_POSITIVE,<span class=\"string\">\"确定\"</span>,<span class=\"keyword\">new</span> DialogInterface.OnClickListener()</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"meta\">@Override</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(DialogInterface dialog, <span class=\"keyword\">int</span> which)</span> </span>&#123;</div><div class=\"line\">            Toast.makeText(MainActivity.<span class=\"keyword\">this</span>,<span class=\"string\">\"欢迎\"</span>,Toast.LENGTH_SHORT).show();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;);</div><div class=\"line\"></div><div class=\"line\">    prodialog.show();</div><div class=\"line\">    <span class=\"comment\">//</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">break</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><img src=\"http://oezmbgg4j.bkt.clouddn.com/progressdialog.gif\" alt=\"\"></p>\n<h2 id=\"自定义ProgressBar的样式\"><a href=\"#自定义ProgressBar的样式\" class=\"headerlink\" title=\"自定义ProgressBar的样式\"></a>自定义ProgressBar的样式</h2><p>ProgressBar的样式是可以自定义的，可参考默认的样式更改。</p>\n","excerpt":"","more":"<h2 id=\"分类\"><a href=\"#分类\" class=\"headerlink\" title=\"分类\"></a>分类</h2><p>可以精确显示进度(可以显示刻度或者百分比)</p>\n<p>不可以精确显示进度()</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//显示两种进度条</span></div><div class=\"line\">setProgressBarVisibility(<span class=\"keyword\">true</span>);</div><div class=\"line\">setProgressBarIndeterminateVisibility(<span class=\"keyword\">false</span>);</div></pre></td></tr></table></figure>\n<p>还可分类为圆圈型，直线型。</p>\n<h2 id=\"ProgressBar属性\"><a href=\"#ProgressBar属性\" class=\"headerlink\" title=\"ProgressBar属性\"></a>ProgressBar属性</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">android:max=\"100\"</div><div class=\"line\">android:progress=\"50\"----第一进度</div><div class=\"line\">android:secondaryProgress=\"80\"---第二进度</div><div class=\"line\">android:indeterminate=\"true\"---设置是否精确显示，true显示不精确显示进度，false表示精确显示进度</div></pre></td></tr></table></figure>\n<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div></pre></td><td class=\"code\"><pre><div class=\"line\">first=progressBar.getProgress();<span class=\"comment\">//获取第一进度条的进度</span></div><div class=\"line\">second=progressBar.getSecondaryProgress();<span class=\"comment\">//获取第二进度条的进度</span></div><div class=\"line\">max=progressBar.getMax();<span class=\"comment\">//获取进度条的最大进度</span></div><div class=\"line\"><span class=\"keyword\">int</span> firstPercent=(<span class=\"keyword\">int</span>)(first/(<span class=\"keyword\">float</span>)max*<span class=\"number\">100</span>);</div><div class=\"line\"><span class=\"keyword\">int</span> seconPercent=(<span class=\"keyword\">int</span>)(second/(<span class=\"keyword\">float</span>)max*<span class=\"number\">100</span>);</div><div class=\"line\">text.setText(<span class=\"string\">\"FirstProgress\"</span>+firstPercent+<span class=\"string\">\"%  SecondProgress\"</span>+seconPercent+<span class=\"string\">\"%\"</span>);</div><div class=\"line\"></div><div class=\"line\">addButton.setOnClickListener(<span class=\"keyword\">this</span>);</div><div class=\"line\">reduceButton.setOnClickListener(<span class=\"keyword\">this</span>);</div><div class=\"line\">resetButton.setOnClickListener(<span class=\"keyword\">this</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">switch</span> (v.getId())&#123;</div><div class=\"line\">        <span class=\"keyword\">case</span> R.id.add:&#123;</div><div class=\"line\">            first+=<span class=\"number\">5</span>;</div><div class=\"line\">            second+=<span class=\"number\">5</span>;</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">case</span> R.id.reduce:&#123;</div><div class=\"line\">            first-=<span class=\"number\">5</span>;</div><div class=\"line\">            second-=<span class=\"number\">5</span>;</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">case</span> R.id.reset:&#123;</div><div class=\"line\">            first=<span class=\"number\">0</span>;</div><div class=\"line\">            second=<span class=\"number\">10</span>;</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">default</span>:&#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">//也可使用incrementProgress</span></div><div class=\"line\">    progressBar.setProgress(first);</div><div class=\"line\">    progressBar.setSecondaryProgress(second);</div><div class=\"line\">    <span class=\"keyword\">int</span> firstPercent=(<span class=\"keyword\">int</span>)(first/(<span class=\"keyword\">float</span>)max*<span class=\"number\">100</span>);</div><div class=\"line\">    <span class=\"keyword\">int</span> seconPercent=(<span class=\"keyword\">int</span>)(second/(<span class=\"keyword\">float</span>)max*<span class=\"number\">100</span>);</div><div class=\"line\">    text.setText(<span class=\"string\">\"FirstProgress\"</span> + firstPercent + <span class=\"string\">\"%  SecondProgress\"</span> + seconPercent+<span class=\"string\">\"%\"</span>);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><img src=\"http://oezmbgg4j.bkt.clouddn.com/progressbar.gif\" alt=\"\"></p>\n<h2 id=\"ProgressDialog\"><a href=\"#ProgressDialog\" class=\"headerlink\" title=\"ProgressDialog\"></a>ProgressDialog</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span></div><div class=\"line\">    <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/showDialog\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">    <span class=\"attr\">android:text</span>=<span class=\"string\">\"Dialog\"</span>/&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">case</span> R.id.showDialog:&#123;</div><div class=\"line\">    <span class=\"comment\">//新建ProgressDialog的对象</span></div><div class=\"line\">    prodialog=<span class=\"keyword\">new</span> ProgressDialog(MainActivity.<span class=\"keyword\">this</span>);</div><div class=\"line\">    <span class=\"comment\">//设置显示风格</span></div><div class=\"line\">    prodialog.setProgress(ProgressDialog.STYLE_HORIZONTAL);</div><div class=\"line\">    <span class=\"comment\">//设置标题</span></div><div class=\"line\">    prodialog.setTitle(<span class=\"string\">\"IVYXJC\"</span>);</div><div class=\"line\">    <span class=\"comment\">//设置对话框文本</span></div><div class=\"line\">    prodialog.setMessage(<span class=\"string\">\"Welcome to ProgressDialog\"</span>);</div><div class=\"line\">    <span class=\"comment\">//设置图标</span></div><div class=\"line\">    prodialog.setIcon(android.R.drawable.ic_dialog_alert);</div><div class=\"line\">    <span class=\"comment\">//设定最大进度</span></div><div class=\"line\">    prodialog.setMax(<span class=\"number\">100</span>);</div><div class=\"line\">    <span class=\"comment\">//设定初始化已经增长到的进度</span></div><div class=\"line\">    prodialog.incrementProgressBy(<span class=\"number\">50</span>);</div><div class=\"line\">    <span class=\"comment\">//进度条是明确显示进度的</span></div><div class=\"line\">    prodialog.setIndeterminate(<span class=\"keyword\">false</span>);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//设定一个确定按钮</span></div><div class=\"line\">    prodialog.setButton(DialogInterface.BUTTON_POSITIVE,<span class=\"string\">\"确定\"</span>,<span class=\"keyword\">new</span> DialogInterface.OnClickListener()</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"meta\">@Override</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(DialogInterface dialog, <span class=\"keyword\">int</span> which)</span> </span>&#123;</div><div class=\"line\">            Toast.makeText(MainActivity.<span class=\"keyword\">this</span>,<span class=\"string\">\"欢迎\"</span>,Toast.LENGTH_SHORT).show();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;);</div><div class=\"line\"></div><div class=\"line\">    prodialog.show();</div><div class=\"line\">    <span class=\"comment\">//</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">break</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><img src=\"http://oezmbgg4j.bkt.clouddn.com/progressdialog.gif\" alt=\"\"></p>\n<h2 id=\"自定义ProgressBar的样式\"><a href=\"#自定义ProgressBar的样式\" class=\"headerlink\" title=\"自定义ProgressBar的样式\"></a>自定义ProgressBar的样式</h2><p>ProgressBar的样式是可以自定义的，可参考默认的样式更改。</p>\n"},{"author":"ivyxjc","date":"2016-03-06T16:00:00.000Z","title":"使用WebView显示网页","keywords":null,"description":"如何使用WebView访问网页.","_content":"\n## 访问权限\n\n调用第三方或者系统默认浏览器不需要使用网络访问权限，但是自己写WebView访问网络资源需要配置网络访问权限。\n\n```xml\n<uses-permission android:name=\"android.permission.INTERNET\"/>\n```\n\n\n## 使用loadUrl()\n\nweb资源： webView.loadUrl(\"http://www.bing.com\");\n\n本地文件：webView.loadUrl(\"file:///android_assets/xx.html\");\n\n本地文件放在 asset文件夹中\n\n//使页面获得焦点\nwebView.requestFocus();\n\n## 处理页面导航\n\n当用户点击webView中的链接时，通常由默认浏览器打开并加载目标url，需要覆盖该默认处理方法。\n\n```java\nwebView.setWebViewClient(new WebViewClient(){\n            @Override\n            public boolean shouldOverrideUrlLoading(WebView view, String url) {\n                //返回True的时候控制网页在WebView中打开\n                //返回False控制网页在默认浏览器中打开。\n                view.loadUrl(url);\n                return true;\n            }\n\n            //WebViewClient帮助WebView处理一些页面控制和请求通知,还有其它很多方法，如下\n\n            @Override\n            public void onPageStarted(WebView view, String url, Bitmap favicon) {\n                super.onPageStarted(view, url, favicon);\n            }\n\n            @Override\n            public void onPageFinished(WebView view, String url) {\n                super.onPageFinished(view, url);\n            }\n        });\n```\n\n## WebView使用Javascript\n\n```java\n    WebSettings settings=webView.getSettings();\n    settings.setJavaScriptEnabled(true);\n```\n\n## 设置返回键逻辑\n\n```java\n@Override\npublic boolean onKeyDown(int keyCode, KeyEvent event) {\n    if(keyCode==KeyEvent.KEYCODE_BACK){\n        if(webView.canGoBack()){\n            Toast.makeText(this,webView.getUrl(),Toast.LENGTH_SHORT).show();\n            webView.goBack();//返回上一界面\n            return true;\n        }\n    }else{\n        System.exit(0);\n    }\n    return super.onKeyDown(keyCode, event);\n}\n```\n\n## 判断加载页面过程\n\n\n## 使用本地缓存\n\n```java\nWebSettings settings=webView.getSettings();   settings.setCacheMode(WebSettings.LOAD_CACHE_ELSE_NETWORK);\n```\n\n\n\n## 实例\n\n```xml\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:paddingLeft=\"0dp\"\n    android:paddingRight=\"0dp\" >\n\n    <ProgressBar\n        android:id=\"@+id/progressBar\"\n        style=\"?android:attr/progressBarStyleHorizontal\"\n        android:layout_alignParentTop=\"true\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" />\n\n    <WebView\n        android:id=\"@+id/webView\"\n        android:layout_below=\"@id/progressBar\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:layout_alignParentEnd=\"true\"></WebView>\n</RelativeLayout>\n```\n\n```java\nwebView.setWebChromeClient(new WebChromeClient(){\n    @Override\n    public void onProgressChanged(WebView view, int newProgress) {\n        if (newProgress == 100) {\n            //网页已经加载完毕\n            progressCompleted();\n        } else {\n            //网页正在加载\n            progressUnCompleted(newProgress);\n        }\n    }\n\n    private void progressCompleted(){\n        progressBar.setProgress(100);\n    }\n\n    private void progressUnCompleted(int newProgress){\n        progressBar.setProgress(newProgress);\n    }\n});\n```\n\n![](http://oezmbgg4j.bkt.clouddn.com/webview.gif)\n","source":"_posts/android/控件/WebView/2016-03-07-使用WebView显示网页.md","raw":"---\nauthor: ivyxjc\ndate: 2016-03-07\ntitle: 使用WebView显示网页\ncategory: Android\ntags: [android,android_control]\nkeywords:\ndescription: 如何使用WebView访问网页.\n---\n\n## 访问权限\n\n调用第三方或者系统默认浏览器不需要使用网络访问权限，但是自己写WebView访问网络资源需要配置网络访问权限。\n\n```xml\n<uses-permission android:name=\"android.permission.INTERNET\"/>\n```\n\n\n## 使用loadUrl()\n\nweb资源： webView.loadUrl(\"http://www.bing.com\");\n\n本地文件：webView.loadUrl(\"file:///android_assets/xx.html\");\n\n本地文件放在 asset文件夹中\n\n//使页面获得焦点\nwebView.requestFocus();\n\n## 处理页面导航\n\n当用户点击webView中的链接时，通常由默认浏览器打开并加载目标url，需要覆盖该默认处理方法。\n\n```java\nwebView.setWebViewClient(new WebViewClient(){\n            @Override\n            public boolean shouldOverrideUrlLoading(WebView view, String url) {\n                //返回True的时候控制网页在WebView中打开\n                //返回False控制网页在默认浏览器中打开。\n                view.loadUrl(url);\n                return true;\n            }\n\n            //WebViewClient帮助WebView处理一些页面控制和请求通知,还有其它很多方法，如下\n\n            @Override\n            public void onPageStarted(WebView view, String url, Bitmap favicon) {\n                super.onPageStarted(view, url, favicon);\n            }\n\n            @Override\n            public void onPageFinished(WebView view, String url) {\n                super.onPageFinished(view, url);\n            }\n        });\n```\n\n## WebView使用Javascript\n\n```java\n    WebSettings settings=webView.getSettings();\n    settings.setJavaScriptEnabled(true);\n```\n\n## 设置返回键逻辑\n\n```java\n@Override\npublic boolean onKeyDown(int keyCode, KeyEvent event) {\n    if(keyCode==KeyEvent.KEYCODE_BACK){\n        if(webView.canGoBack()){\n            Toast.makeText(this,webView.getUrl(),Toast.LENGTH_SHORT).show();\n            webView.goBack();//返回上一界面\n            return true;\n        }\n    }else{\n        System.exit(0);\n    }\n    return super.onKeyDown(keyCode, event);\n}\n```\n\n## 判断加载页面过程\n\n\n## 使用本地缓存\n\n```java\nWebSettings settings=webView.getSettings();   settings.setCacheMode(WebSettings.LOAD_CACHE_ELSE_NETWORK);\n```\n\n\n\n## 实例\n\n```xml\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:paddingLeft=\"0dp\"\n    android:paddingRight=\"0dp\" >\n\n    <ProgressBar\n        android:id=\"@+id/progressBar\"\n        style=\"?android:attr/progressBarStyleHorizontal\"\n        android:layout_alignParentTop=\"true\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\" />\n\n    <WebView\n        android:id=\"@+id/webView\"\n        android:layout_below=\"@id/progressBar\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:layout_alignParentEnd=\"true\"></WebView>\n</RelativeLayout>\n```\n\n```java\nwebView.setWebChromeClient(new WebChromeClient(){\n    @Override\n    public void onProgressChanged(WebView view, int newProgress) {\n        if (newProgress == 100) {\n            //网页已经加载完毕\n            progressCompleted();\n        } else {\n            //网页正在加载\n            progressUnCompleted(newProgress);\n        }\n    }\n\n    private void progressCompleted(){\n        progressBar.setProgress(100);\n    }\n\n    private void progressUnCompleted(int newProgress){\n        progressBar.setProgress(newProgress);\n    }\n});\n```\n\n![](http://oezmbgg4j.bkt.clouddn.com/webview.gif)\n","slug":"android/控件/WebView/2016-03-07-使用WebView显示网页","published":1,"updated":"2016-10-13T13:30:13.739Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f0127004qcwjrmchk0byc","content":"<h2 id=\"访问权限\"><a href=\"#访问权限\" class=\"headerlink\" title=\"访问权限\"></a>访问权限</h2><p>调用第三方或者系统默认浏览器不需要使用网络访问权限，但是自己写WebView访问网络资源需要配置网络访问权限。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">uses-permission</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.permission.INTERNET\"</span>/&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"使用loadUrl\"><a href=\"#使用loadUrl\" class=\"headerlink\" title=\"使用loadUrl()\"></a>使用loadUrl()</h2><p>web资源： webView.loadUrl(“<a href=\"http://www.bing.com\" target=\"_blank\" rel=\"external\">http://www.bing.com</a>“);</p>\n<p>本地文件：webView.loadUrl(“file:///android_assets/xx.html”);</p>\n<p>本地文件放在 asset文件夹中</p>\n<p>//使页面获得焦点<br>webView.requestFocus();</p>\n<h2 id=\"处理页面导航\"><a href=\"#处理页面导航\" class=\"headerlink\" title=\"处理页面导航\"></a>处理页面导航</h2><p>当用户点击webView中的链接时，通常由默认浏览器打开并加载目标url，需要覆盖该默认处理方法。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">webView.setWebViewClient(<span class=\"keyword\">new</span> WebViewClient()&#123;</div><div class=\"line\">            <span class=\"meta\">@Override</span></div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">shouldOverrideUrlLoading</span><span class=\"params\">(WebView view, String url)</span> </span>&#123;</div><div class=\"line\">                <span class=\"comment\">//返回True的时候控制网页在WebView中打开</span></div><div class=\"line\">                <span class=\"comment\">//返回False控制网页在默认浏览器中打开。</span></div><div class=\"line\">                view.loadUrl(url);</div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//WebViewClient帮助WebView处理一些页面控制和请求通知,还有其它很多方法，如下</span></div><div class=\"line\"></div><div class=\"line\">            <span class=\"meta\">@Override</span></div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onPageStarted</span><span class=\"params\">(WebView view, String url, Bitmap favicon)</span> </span>&#123;</div><div class=\"line\">                <span class=\"keyword\">super</span>.onPageStarted(view, url, favicon);</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"meta\">@Override</span></div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onPageFinished</span><span class=\"params\">(WebView view, String url)</span> </span>&#123;</div><div class=\"line\">                <span class=\"keyword\">super</span>.onPageFinished(view, url);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;);</div></pre></td></tr></table></figure>\n<h2 id=\"WebView使用Javascript\"><a href=\"#WebView使用Javascript\" class=\"headerlink\" title=\"WebView使用Javascript\"></a>WebView使用Javascript</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">WebSettings settings=webView.getSettings();</div><div class=\"line\">settings.setJavaScriptEnabled(<span class=\"keyword\">true</span>);</div></pre></td></tr></table></figure>\n<h2 id=\"设置返回键逻辑\"><a href=\"#设置返回键逻辑\" class=\"headerlink\" title=\"设置返回键逻辑\"></a>设置返回键逻辑</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Override</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onKeyDown</span><span class=\"params\">(<span class=\"keyword\">int</span> keyCode, KeyEvent event)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span>(keyCode==KeyEvent.KEYCODE_BACK)&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(webView.canGoBack())&#123;</div><div class=\"line\">            Toast.makeText(<span class=\"keyword\">this</span>,webView.getUrl(),Toast.LENGTH_SHORT).show();</div><div class=\"line\">            webView.goBack();<span class=\"comment\">//返回上一界面</span></div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">        System.exit(<span class=\"number\">0</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">super</span>.onKeyDown(keyCode, event);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"判断加载页面过程\"><a href=\"#判断加载页面过程\" class=\"headerlink\" title=\"判断加载页面过程\"></a>判断加载页面过程</h2><h2 id=\"使用本地缓存\"><a href=\"#使用本地缓存\" class=\"headerlink\" title=\"使用本地缓存\"></a>使用本地缓存</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">WebSettings settings=webView.getSettings();   settings.setCacheMode(WebSettings.LOAD_CACHE_ELSE_NETWORK);</div></pre></td></tr></table></figure>\n<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">RelativeLayout</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></span></div><div class=\"line\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">    <span class=\"attr\">android:paddingLeft</span>=<span class=\"string\">\"0dp\"</span></div><div class=\"line\">    <span class=\"attr\">android:paddingRight</span>=<span class=\"string\">\"0dp\"</span> &gt;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ProgressBar</span></span></div><div class=\"line\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/progressBar\"</span></div><div class=\"line\">        <span class=\"attr\">style</span>=<span class=\"string\">\"?android:attr/progressBarStyleHorizontal\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_alignParentTop</span>=<span class=\"string\">\"true\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span> /&gt;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">WebView</span></span></div><div class=\"line\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/webView\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_below</span>=<span class=\"string\">\"@id/progressBar\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_alignParentEnd</span>=<span class=\"string\">\"true\"</span>&gt;<span class=\"tag\">&lt;/<span class=\"name\">WebView</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">RelativeLayout</span>&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">webView.setWebChromeClient(<span class=\"keyword\">new</span> WebChromeClient()&#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onProgressChanged</span><span class=\"params\">(WebView view, <span class=\"keyword\">int</span> newProgress)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (newProgress == <span class=\"number\">100</span>) &#123;</div><div class=\"line\">            <span class=\"comment\">//网页已经加载完毕</span></div><div class=\"line\">            progressCompleted();</div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">            <span class=\"comment\">//网页正在加载</span></div><div class=\"line\">            progressUnCompleted(newProgress);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">progressCompleted</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        progressBar.setProgress(<span class=\"number\">100</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">progressUnCompleted</span><span class=\"params\">(<span class=\"keyword\">int</span> newProgress)</span></span>&#123;</div><div class=\"line\">        progressBar.setProgress(newProgress);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p><img src=\"http://oezmbgg4j.bkt.clouddn.com/webview.gif\" alt=\"\"></p>\n","excerpt":"","more":"<h2 id=\"访问权限\"><a href=\"#访问权限\" class=\"headerlink\" title=\"访问权限\"></a>访问权限</h2><p>调用第三方或者系统默认浏览器不需要使用网络访问权限，但是自己写WebView访问网络资源需要配置网络访问权限。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">uses-permission</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.permission.INTERNET\"</span>/&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"使用loadUrl\"><a href=\"#使用loadUrl\" class=\"headerlink\" title=\"使用loadUrl()\"></a>使用loadUrl()</h2><p>web资源： webView.loadUrl(“<a href=\"http://www.bing.com\">http://www.bing.com</a>“);</p>\n<p>本地文件：webView.loadUrl(“file:///android_assets/xx.html”);</p>\n<p>本地文件放在 asset文件夹中</p>\n<p>//使页面获得焦点<br>webView.requestFocus();</p>\n<h2 id=\"处理页面导航\"><a href=\"#处理页面导航\" class=\"headerlink\" title=\"处理页面导航\"></a>处理页面导航</h2><p>当用户点击webView中的链接时，通常由默认浏览器打开并加载目标url，需要覆盖该默认处理方法。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">webView.setWebViewClient(<span class=\"keyword\">new</span> WebViewClient()&#123;</div><div class=\"line\">            <span class=\"meta\">@Override</span></div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">shouldOverrideUrlLoading</span><span class=\"params\">(WebView view, String url)</span> </span>&#123;</div><div class=\"line\">                <span class=\"comment\">//返回True的时候控制网页在WebView中打开</span></div><div class=\"line\">                <span class=\"comment\">//返回False控制网页在默认浏览器中打开。</span></div><div class=\"line\">                view.loadUrl(url);</div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//WebViewClient帮助WebView处理一些页面控制和请求通知,还有其它很多方法，如下</span></div><div class=\"line\"></div><div class=\"line\">            <span class=\"meta\">@Override</span></div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onPageStarted</span><span class=\"params\">(WebView view, String url, Bitmap favicon)</span> </span>&#123;</div><div class=\"line\">                <span class=\"keyword\">super</span>.onPageStarted(view, url, favicon);</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"meta\">@Override</span></div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onPageFinished</span><span class=\"params\">(WebView view, String url)</span> </span>&#123;</div><div class=\"line\">                <span class=\"keyword\">super</span>.onPageFinished(view, url);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;);</div></pre></td></tr></table></figure>\n<h2 id=\"WebView使用Javascript\"><a href=\"#WebView使用Javascript\" class=\"headerlink\" title=\"WebView使用Javascript\"></a>WebView使用Javascript</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">WebSettings settings=webView.getSettings();</div><div class=\"line\">settings.setJavaScriptEnabled(<span class=\"keyword\">true</span>);</div></pre></td></tr></table></figure>\n<h2 id=\"设置返回键逻辑\"><a href=\"#设置返回键逻辑\" class=\"headerlink\" title=\"设置返回键逻辑\"></a>设置返回键逻辑</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Override</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onKeyDown</span><span class=\"params\">(<span class=\"keyword\">int</span> keyCode, KeyEvent event)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span>(keyCode==KeyEvent.KEYCODE_BACK)&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(webView.canGoBack())&#123;</div><div class=\"line\">            Toast.makeText(<span class=\"keyword\">this</span>,webView.getUrl(),Toast.LENGTH_SHORT).show();</div><div class=\"line\">            webView.goBack();<span class=\"comment\">//返回上一界面</span></div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">        System.exit(<span class=\"number\">0</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">super</span>.onKeyDown(keyCode, event);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"判断加载页面过程\"><a href=\"#判断加载页面过程\" class=\"headerlink\" title=\"判断加载页面过程\"></a>判断加载页面过程</h2><h2 id=\"使用本地缓存\"><a href=\"#使用本地缓存\" class=\"headerlink\" title=\"使用本地缓存\"></a>使用本地缓存</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">WebSettings settings=webView.getSettings();   settings.setCacheMode(WebSettings.LOAD_CACHE_ELSE_NETWORK);</div></pre></td></tr></table></figure>\n<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">RelativeLayout</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">    <span class=\"attr\">android:paddingLeft</span>=<span class=\"string\">\"0dp\"</span></div><div class=\"line\">    <span class=\"attr\">android:paddingRight</span>=<span class=\"string\">\"0dp\"</span> &gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ProgressBar</span></div><div class=\"line\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/progressBar\"</span></div><div class=\"line\">        <span class=\"attr\">style</span>=<span class=\"string\">\"?android:attr/progressBarStyleHorizontal\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_alignParentTop</span>=<span class=\"string\">\"true\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span> /&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">WebView</span></div><div class=\"line\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/webView\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_below</span>=<span class=\"string\">\"@id/progressBar\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_alignParentEnd</span>=<span class=\"string\">\"true\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">WebView</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">RelativeLayout</span>&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">webView.setWebChromeClient(<span class=\"keyword\">new</span> WebChromeClient()&#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onProgressChanged</span><span class=\"params\">(WebView view, <span class=\"keyword\">int</span> newProgress)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (newProgress == <span class=\"number\">100</span>) &#123;</div><div class=\"line\">            <span class=\"comment\">//网页已经加载完毕</span></div><div class=\"line\">            progressCompleted();</div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">            <span class=\"comment\">//网页正在加载</span></div><div class=\"line\">            progressUnCompleted(newProgress);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">progressCompleted</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        progressBar.setProgress(<span class=\"number\">100</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">progressUnCompleted</span><span class=\"params\">(<span class=\"keyword\">int</span> newProgress)</span></span>&#123;</div><div class=\"line\">        progressBar.setProgress(newProgress);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p><img src=\"http://oezmbgg4j.bkt.clouddn.com/webview.gif\" alt=\"\"></p>\n"},{"author":"ivyxjc","date":"2016-06-07T16:00:00.000Z","title":"猫眼票房数据获取","keywords":null,"description":null,"_content":"","source":"_posts/python/Spider/票房爬虫/2016-06-08-maoyan.md","raw":"---\nauthor: ivyxjc\ndate: 2016-06-08\ntitle: 猫眼票房数据获取\ncategory: Python\ntags: [python,spider,pythonspider]\nkeywords:\ndescription:\n---\n","slug":"python/Spider/票房爬虫/2016-06-08-maoyan","published":1,"updated":"2016-10-13T06:34:38.591Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f0128004tcwjrvgzw7yq7","content":"","excerpt":"","more":""},{"author":"ivyxjc","date":"2016-03-26T16:00:00.000Z","title":"Python Spider入门","keywords":null,"description":null,"_content":"\n## 添加header和data\n\n```python\nrequest=urllib.request.Request(url)\nresponse=urllib.request.urlopen(request)\n#response是一个http.client.HTTPResponse对象\nprint(response.geturl()) #获取网址\nprint(response.info())  #获取信息\nprint(response.getcode()) # http状态码\n\nhtml=response.read()\n```\n\n`urllib.request.Request(url, data=None, headers={}, origin_req_host=None, unverifiable=False, method=None)`\n1.data参数：the HTTP request will be a POST instead of a GET when the data parameter is provided.data should be a buffer in the standard application/x-www-form-urlencoded format. The urllib.parse.urlencode() function takes a mapping or sequence of 2-tuples and returns a string in this format.<br>\n\n```python\ndata={}\ndata['type']='AUTO'\ndata['i']=content\ndata['doctype']='json'\ndata['xmlVersion']=1.8\ndata['keyfrom']='fanyi.web'\ndata['ue']='UTF-8'\ndata['action']='FY_BY_CLICKBUTTON'\ndata['typoResult']='true'\n\ndata=urllib.parse.urlencode(data).encode('utf-8')\n```\n\n2.headers：一个字典，可以直接从浏览器中复制过来\n\n```python\nheader={}\n#添加header的第一种方法\nheader['User-Agent']='Mozilla/5.0 (Windows NT 10.0; WOW64; rv:43.0) Gecko/20100101 Firefox/43.0'\nrequest=urllib.request.Request(url,data,header)\n#也可使用以下方法\nrequest.add_header('User-Agent','Mozilla/5.0 (Windows NT 10.0; WOW64; rv:43.0) Gecko/20100101 Firefox/43.0')\n```\n\n\n## 获取Response Headers\n\n下面代码是用来判断 网页是否使用`gzip`压缩过。\n```python\nfor i in response.getheaders():\n    if i[0]==\"Content-Encoding\":\n        if(i[-1]==\"gzip\"):\n            html=gzip.decompress(html)\n```\n\n## 使用代理\n\n\n\n1.参数是一个字典{'类型’：‘代理ip:端口号’}\n`proxy_support=urllib.request.ProxyHandler({})`\n2.定制、创建一个openner\n`opener=urllib.request.build_opener(proxy_support)\n3a.安装opener\n`urllib.request.install_opener(opener)`\n3b.调用opener\n`opener.open(url)`\n\n### 代码\n\n```python\nproxy_support=urllib.request.ProxyHandler({'http':random.choice(iplist)})\n\nopener=urllib.request.build_opener(proxy_support)\nopener.addheaders=[('User-Agent','Mozilla/5.0 (Windows NT 10.0; WOW64; rv:43.0) Gecko/20100101 Firefox/43.0')]\nurllib.request.install_opener(opener)\n\nreq=urllib.request.Request(url)\nresponse=urllib.request.urlopen(req)\n```\n\n\n## 爬知乎图片\n\n```python\nimport urllib.request\nimport os\nimport random\n\n#打开网页\ndef url_open(url):\n    iplist=[\n        '49.77.22.1:8118',\n        '58.134.102.3:12696',\n        '120.26.213.55:9999'...]\n\n    proxy_support=urllib.request.ProxyHandler({'http':random.choice(iplist)})\n\n    opener=urllib.request.build_opener(proxy_support)\n    opener.addheaders=[('User-Agent','Mozilla/5.0 (Windows NT 10.0; WOW64; rv:43.0) Gecko/20100101 Firefox/43.0')]\n\n    urllib.request.install_opener(opener)\n\n    req=urllib.request.Request(url)\n    response=urllib.request.urlopen(req)\n    html=response.read()\n    return html\n\n#获取图片地址，返回图片地址的list\ndef get_imgs(url):\n    html=url_open(url).decode('utf-8')\n\n    img_address=[]\n    a=html.find('data-original')\n    while(a!=-1):\n        b=html.find('.jpg',a,a+300)\n        if(b!=-1):\n            # print(html[a+15:b+4])\n            img_address.append(html[a+15:b+4])\n        else:\n            b=a+9\n        a=html.find('data-original=',b)\n\n\n    for i in img_address:\n        print(i)\n\n    return img_address\n\n#存储到本地\ndef save_imgs(img_address):\n\n    for i in img_address:\n        # print(i)\n        filename=i.split('/')[-1]\n        with open(filename,'wb') as f:\n            img=url_open(i)\n            f.write(img)\n\n\ndef zhihuPic(url,folder=\"zhihu\"):\n    if(os.path.exists(folder)):\n        os.chdir(folder)\n    else:\n        os.mkdir(folder)\n        os.chdir(folder)\n    img_address=get_imgs(url)\n    save_imgs(img_address)\n\n\n\n\n\nif __name__=='__main__':\n    zhihuPic(\"https://www.zhihu.com/question/22070147\")\n```\n","source":"_posts/python/Spider/基础知识/2016-03-27-python-spider.md","raw":"---\nauthor: ivyxjc\ndate: 2016-03-27\ntitle: Python Spider入门\ncategory: Python\ntags: [python,spider,pythonspider]\nkeywords:\ndescription:\n---\n\n## 添加header和data\n\n```python\nrequest=urllib.request.Request(url)\nresponse=urllib.request.urlopen(request)\n#response是一个http.client.HTTPResponse对象\nprint(response.geturl()) #获取网址\nprint(response.info())  #获取信息\nprint(response.getcode()) # http状态码\n\nhtml=response.read()\n```\n\n`urllib.request.Request(url, data=None, headers={}, origin_req_host=None, unverifiable=False, method=None)`\n1.data参数：the HTTP request will be a POST instead of a GET when the data parameter is provided.data should be a buffer in the standard application/x-www-form-urlencoded format. The urllib.parse.urlencode() function takes a mapping or sequence of 2-tuples and returns a string in this format.<br>\n\n```python\ndata={}\ndata['type']='AUTO'\ndata['i']=content\ndata['doctype']='json'\ndata['xmlVersion']=1.8\ndata['keyfrom']='fanyi.web'\ndata['ue']='UTF-8'\ndata['action']='FY_BY_CLICKBUTTON'\ndata['typoResult']='true'\n\ndata=urllib.parse.urlencode(data).encode('utf-8')\n```\n\n2.headers：一个字典，可以直接从浏览器中复制过来\n\n```python\nheader={}\n#添加header的第一种方法\nheader['User-Agent']='Mozilla/5.0 (Windows NT 10.0; WOW64; rv:43.0) Gecko/20100101 Firefox/43.0'\nrequest=urllib.request.Request(url,data,header)\n#也可使用以下方法\nrequest.add_header('User-Agent','Mozilla/5.0 (Windows NT 10.0; WOW64; rv:43.0) Gecko/20100101 Firefox/43.0')\n```\n\n\n## 获取Response Headers\n\n下面代码是用来判断 网页是否使用`gzip`压缩过。\n```python\nfor i in response.getheaders():\n    if i[0]==\"Content-Encoding\":\n        if(i[-1]==\"gzip\"):\n            html=gzip.decompress(html)\n```\n\n## 使用代理\n\n\n\n1.参数是一个字典{'类型’：‘代理ip:端口号’}\n`proxy_support=urllib.request.ProxyHandler({})`\n2.定制、创建一个openner\n`opener=urllib.request.build_opener(proxy_support)\n3a.安装opener\n`urllib.request.install_opener(opener)`\n3b.调用opener\n`opener.open(url)`\n\n### 代码\n\n```python\nproxy_support=urllib.request.ProxyHandler({'http':random.choice(iplist)})\n\nopener=urllib.request.build_opener(proxy_support)\nopener.addheaders=[('User-Agent','Mozilla/5.0 (Windows NT 10.0; WOW64; rv:43.0) Gecko/20100101 Firefox/43.0')]\nurllib.request.install_opener(opener)\n\nreq=urllib.request.Request(url)\nresponse=urllib.request.urlopen(req)\n```\n\n\n## 爬知乎图片\n\n```python\nimport urllib.request\nimport os\nimport random\n\n#打开网页\ndef url_open(url):\n    iplist=[\n        '49.77.22.1:8118',\n        '58.134.102.3:12696',\n        '120.26.213.55:9999'...]\n\n    proxy_support=urllib.request.ProxyHandler({'http':random.choice(iplist)})\n\n    opener=urllib.request.build_opener(proxy_support)\n    opener.addheaders=[('User-Agent','Mozilla/5.0 (Windows NT 10.0; WOW64; rv:43.0) Gecko/20100101 Firefox/43.0')]\n\n    urllib.request.install_opener(opener)\n\n    req=urllib.request.Request(url)\n    response=urllib.request.urlopen(req)\n    html=response.read()\n    return html\n\n#获取图片地址，返回图片地址的list\ndef get_imgs(url):\n    html=url_open(url).decode('utf-8')\n\n    img_address=[]\n    a=html.find('data-original')\n    while(a!=-1):\n        b=html.find('.jpg',a,a+300)\n        if(b!=-1):\n            # print(html[a+15:b+4])\n            img_address.append(html[a+15:b+4])\n        else:\n            b=a+9\n        a=html.find('data-original=',b)\n\n\n    for i in img_address:\n        print(i)\n\n    return img_address\n\n#存储到本地\ndef save_imgs(img_address):\n\n    for i in img_address:\n        # print(i)\n        filename=i.split('/')[-1]\n        with open(filename,'wb') as f:\n            img=url_open(i)\n            f.write(img)\n\n\ndef zhihuPic(url,folder=\"zhihu\"):\n    if(os.path.exists(folder)):\n        os.chdir(folder)\n    else:\n        os.mkdir(folder)\n        os.chdir(folder)\n    img_address=get_imgs(url)\n    save_imgs(img_address)\n\n\n\n\n\nif __name__=='__main__':\n    zhihuPic(\"https://www.zhihu.com/question/22070147\")\n```\n","slug":"python/Spider/基础知识/2016-03-27-python-spider","published":1,"updated":"2016-10-13T06:34:38.576Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f012b004wcwjr33eext83","content":"<h2 id=\"添加header和data\"><a href=\"#添加header和data\" class=\"headerlink\" title=\"添加header和data\"></a>添加header和data</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">request=urllib.request.Request(url)</div><div class=\"line\">response=urllib.request.urlopen(request)</div><div class=\"line\"><span class=\"comment\">#response是一个http.client.HTTPResponse对象</span></div><div class=\"line\">print(response.geturl()) <span class=\"comment\">#获取网址</span></div><div class=\"line\">print(response.info())  <span class=\"comment\">#获取信息</span></div><div class=\"line\">print(response.getcode()) <span class=\"comment\"># http状态码</span></div><div class=\"line\"></div><div class=\"line\">html=response.read()</div></pre></td></tr></table></figure>\n<p><code>urllib.request.Request(url, data=None, headers={}, origin_req_host=None, unverifiable=False, method=None)</code><br>1.data参数：the HTTP request will be a POST instead of a GET when the data parameter is provided.data should be a buffer in the standard application/x-www-form-urlencoded format. The urllib.parse.urlencode() function takes a mapping or sequence of 2-tuples and returns a string in this format.<br></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">data=&#123;&#125;</div><div class=\"line\">data[<span class=\"string\">'type'</span>]=<span class=\"string\">'AUTO'</span></div><div class=\"line\">data[<span class=\"string\">'i'</span>]=content</div><div class=\"line\">data[<span class=\"string\">'doctype'</span>]=<span class=\"string\">'json'</span></div><div class=\"line\">data[<span class=\"string\">'xmlVersion'</span>]=<span class=\"number\">1.8</span></div><div class=\"line\">data[<span class=\"string\">'keyfrom'</span>]=<span class=\"string\">'fanyi.web'</span></div><div class=\"line\">data[<span class=\"string\">'ue'</span>]=<span class=\"string\">'UTF-8'</span></div><div class=\"line\">data[<span class=\"string\">'action'</span>]=<span class=\"string\">'FY_BY_CLICKBUTTON'</span></div><div class=\"line\">data[<span class=\"string\">'typoResult'</span>]=<span class=\"string\">'true'</span></div><div class=\"line\"></div><div class=\"line\">data=urllib.parse.urlencode(data).encode(<span class=\"string\">'utf-8'</span>)</div></pre></td></tr></table></figure>\n<p>2.headers：一个字典，可以直接从浏览器中复制过来</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">header=&#123;&#125;</div><div class=\"line\"><span class=\"comment\">#添加header的第一种方法</span></div><div class=\"line\">header[<span class=\"string\">'User-Agent'</span>]=<span class=\"string\">'Mozilla/5.0 (Windows NT 10.0; WOW64; rv:43.0) Gecko/20100101 Firefox/43.0'</span></div><div class=\"line\">request=urllib.request.Request(url,data,header)</div><div class=\"line\"><span class=\"comment\">#也可使用以下方法</span></div><div class=\"line\">request.add_header(<span class=\"string\">'User-Agent'</span>,<span class=\"string\">'Mozilla/5.0 (Windows NT 10.0; WOW64; rv:43.0) Gecko/20100101 Firefox/43.0'</span>)</div></pre></td></tr></table></figure>\n<h2 id=\"获取Response-Headers\"><a href=\"#获取Response-Headers\" class=\"headerlink\" title=\"获取Response Headers\"></a>获取Response Headers</h2><p>下面代码是用来判断 网页是否使用<code>gzip</code>压缩过。<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> response.getheaders():</div><div class=\"line\">    <span class=\"keyword\">if</span> i[<span class=\"number\">0</span>]==<span class=\"string\">\"Content-Encoding\"</span>:</div><div class=\"line\">        <span class=\"keyword\">if</span>(i[<span class=\"number\">-1</span>]==<span class=\"string\">\"gzip\"</span>):</div><div class=\"line\">            html=gzip.decompress(html)</div></pre></td></tr></table></figure></p>\n<h2 id=\"使用代理\"><a href=\"#使用代理\" class=\"headerlink\" title=\"使用代理\"></a>使用代理</h2><p>1.参数是一个字典{‘类型’：‘代理ip:端口号’}<br><code>proxy_support=urllib.request.ProxyHandler({})</code><br>2.定制、创建一个openner<br><code>opener=urllib.request.build_opener(proxy_support)\n3a.安装opener</code>urllib.request.install_opener(opener)<code>3b.调用opener</code>opener.open(url)`</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">proxy_support=urllib.request.ProxyHandler(&#123;<span class=\"string\">'http'</span>:random.choice(iplist)&#125;)</div><div class=\"line\"></div><div class=\"line\">opener=urllib.request.build_opener(proxy_support)</div><div class=\"line\">opener.addheaders=[(<span class=\"string\">'User-Agent'</span>,<span class=\"string\">'Mozilla/5.0 (Windows NT 10.0; WOW64; rv:43.0) Gecko/20100101 Firefox/43.0'</span>)]</div><div class=\"line\">urllib.request.install_opener(opener)</div><div class=\"line\"></div><div class=\"line\">req=urllib.request.Request(url)</div><div class=\"line\">response=urllib.request.urlopen(req)</div></pre></td></tr></table></figure>\n<h2 id=\"爬知乎图片\"><a href=\"#爬知乎图片\" class=\"headerlink\" title=\"爬知乎图片\"></a>爬知乎图片</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> urllib.request</div><div class=\"line\"><span class=\"keyword\">import</span> os</div><div class=\"line\"><span class=\"keyword\">import</span> random</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#打开网页</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">url_open</span><span class=\"params\">(url)</span>:</span></div><div class=\"line\">    iplist=[</div><div class=\"line\">        <span class=\"string\">'49.77.22.1:8118'</span>,</div><div class=\"line\">        <span class=\"string\">'58.134.102.3:12696'</span>,</div><div class=\"line\">        <span class=\"string\">'120.26.213.55:9999'</span>...]</div><div class=\"line\"></div><div class=\"line\">    proxy_support=urllib.request.ProxyHandler(&#123;<span class=\"string\">'http'</span>:random.choice(iplist)&#125;)</div><div class=\"line\"></div><div class=\"line\">    opener=urllib.request.build_opener(proxy_support)</div><div class=\"line\">    opener.addheaders=[(<span class=\"string\">'User-Agent'</span>,<span class=\"string\">'Mozilla/5.0 (Windows NT 10.0; WOW64; rv:43.0) Gecko/20100101 Firefox/43.0'</span>)]</div><div class=\"line\"></div><div class=\"line\">    urllib.request.install_opener(opener)</div><div class=\"line\"></div><div class=\"line\">    req=urllib.request.Request(url)</div><div class=\"line\">    response=urllib.request.urlopen(req)</div><div class=\"line\">    html=response.read()</div><div class=\"line\">    <span class=\"keyword\">return</span> html</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#获取图片地址，返回图片地址的list</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_imgs</span><span class=\"params\">(url)</span>:</span></div><div class=\"line\">    html=url_open(url).decode(<span class=\"string\">'utf-8'</span>)</div><div class=\"line\"></div><div class=\"line\">    img_address=[]</div><div class=\"line\">    a=html.find(<span class=\"string\">'data-original'</span>)</div><div class=\"line\">    <span class=\"keyword\">while</span>(a!=<span class=\"number\">-1</span>):</div><div class=\"line\">        b=html.find(<span class=\"string\">'.jpg'</span>,a,a+<span class=\"number\">300</span>)</div><div class=\"line\">        <span class=\"keyword\">if</span>(b!=<span class=\"number\">-1</span>):</div><div class=\"line\">            <span class=\"comment\"># print(html[a+15:b+4])</span></div><div class=\"line\">            img_address.append(html[a+<span class=\"number\">15</span>:b+<span class=\"number\">4</span>])</div><div class=\"line\">        <span class=\"keyword\">else</span>:</div><div class=\"line\">            b=a+<span class=\"number\">9</span></div><div class=\"line\">        a=html.find(<span class=\"string\">'data-original='</span>,b)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> img_address:</div><div class=\"line\">        print(i)</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> img_address</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#存储到本地</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">save_imgs</span><span class=\"params\">(img_address)</span>:</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> img_address:</div><div class=\"line\">        <span class=\"comment\"># print(i)</span></div><div class=\"line\">        filename=i.split(<span class=\"string\">'/'</span>)[<span class=\"number\">-1</span>]</div><div class=\"line\">        <span class=\"keyword\">with</span> open(filename,<span class=\"string\">'wb'</span>) <span class=\"keyword\">as</span> f:</div><div class=\"line\">            img=url_open(i)</div><div class=\"line\">            f.write(img)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">zhihuPic</span><span class=\"params\">(url,folder=<span class=\"string\">\"zhihu\"</span>)</span>:</span></div><div class=\"line\">    <span class=\"keyword\">if</span>(os.path.exists(folder)):</div><div class=\"line\">        os.chdir(folder)</div><div class=\"line\">    <span class=\"keyword\">else</span>:</div><div class=\"line\">        os.mkdir(folder)</div><div class=\"line\">        os.chdir(folder)</div><div class=\"line\">    img_address=get_imgs(url)</div><div class=\"line\">    save_imgs(img_address)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> __name__==<span class=\"string\">'__main__'</span>:</div><div class=\"line\">    zhihuPic(<span class=\"string\">\"https://www.zhihu.com/question/22070147\"</span>)</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h2 id=\"添加header和data\"><a href=\"#添加header和data\" class=\"headerlink\" title=\"添加header和data\"></a>添加header和data</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">request=urllib.request.Request(url)</div><div class=\"line\">response=urllib.request.urlopen(request)</div><div class=\"line\"><span class=\"comment\">#response是一个http.client.HTTPResponse对象</span></div><div class=\"line\">print(response.geturl()) <span class=\"comment\">#获取网址</span></div><div class=\"line\">print(response.info())  <span class=\"comment\">#获取信息</span></div><div class=\"line\">print(response.getcode()) <span class=\"comment\"># http状态码</span></div><div class=\"line\"></div><div class=\"line\">html=response.read()</div></pre></td></tr></table></figure>\n<p><code>urllib.request.Request(url, data=None, headers={}, origin_req_host=None, unverifiable=False, method=None)</code><br>1.data参数：the HTTP request will be a POST instead of a GET when the data parameter is provided.data should be a buffer in the standard application/x-www-form-urlencoded format. The urllib.parse.urlencode() function takes a mapping or sequence of 2-tuples and returns a string in this format.<br></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">data=&#123;&#125;</div><div class=\"line\">data[<span class=\"string\">'type'</span>]=<span class=\"string\">'AUTO'</span></div><div class=\"line\">data[<span class=\"string\">'i'</span>]=content</div><div class=\"line\">data[<span class=\"string\">'doctype'</span>]=<span class=\"string\">'json'</span></div><div class=\"line\">data[<span class=\"string\">'xmlVersion'</span>]=<span class=\"number\">1.8</span></div><div class=\"line\">data[<span class=\"string\">'keyfrom'</span>]=<span class=\"string\">'fanyi.web'</span></div><div class=\"line\">data[<span class=\"string\">'ue'</span>]=<span class=\"string\">'UTF-8'</span></div><div class=\"line\">data[<span class=\"string\">'action'</span>]=<span class=\"string\">'FY_BY_CLICKBUTTON'</span></div><div class=\"line\">data[<span class=\"string\">'typoResult'</span>]=<span class=\"string\">'true'</span></div><div class=\"line\"></div><div class=\"line\">data=urllib.parse.urlencode(data).encode(<span class=\"string\">'utf-8'</span>)</div></pre></td></tr></table></figure>\n<p>2.headers：一个字典，可以直接从浏览器中复制过来</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">header=&#123;&#125;</div><div class=\"line\"><span class=\"comment\">#添加header的第一种方法</span></div><div class=\"line\">header[<span class=\"string\">'User-Agent'</span>]=<span class=\"string\">'Mozilla/5.0 (Windows NT 10.0; WOW64; rv:43.0) Gecko/20100101 Firefox/43.0'</span></div><div class=\"line\">request=urllib.request.Request(url,data,header)</div><div class=\"line\"><span class=\"comment\">#也可使用以下方法</span></div><div class=\"line\">request.add_header(<span class=\"string\">'User-Agent'</span>,<span class=\"string\">'Mozilla/5.0 (Windows NT 10.0; WOW64; rv:43.0) Gecko/20100101 Firefox/43.0'</span>)</div></pre></td></tr></table></figure>\n<h2 id=\"获取Response-Headers\"><a href=\"#获取Response-Headers\" class=\"headerlink\" title=\"获取Response Headers\"></a>获取Response Headers</h2><p>下面代码是用来判断 网页是否使用<code>gzip</code>压缩过。<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> response.getheaders():</div><div class=\"line\">    <span class=\"keyword\">if</span> i[<span class=\"number\">0</span>]==<span class=\"string\">\"Content-Encoding\"</span>:</div><div class=\"line\">        <span class=\"keyword\">if</span>(i[<span class=\"number\">-1</span>]==<span class=\"string\">\"gzip\"</span>):</div><div class=\"line\">            html=gzip.decompress(html)</div></pre></td></tr></table></figure></p>\n<h2 id=\"使用代理\"><a href=\"#使用代理\" class=\"headerlink\" title=\"使用代理\"></a>使用代理</h2><p>1.参数是一个字典{‘类型’：‘代理ip:端口号’}<br><code>proxy_support=urllib.request.ProxyHandler({})</code><br>2.定制、创建一个openner<br><code>opener=urllib.request.build_opener(proxy_support)\n3a.安装opener</code>urllib.request.install_opener(opener)<code>3b.调用opener</code>opener.open(url)`</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">proxy_support=urllib.request.ProxyHandler(&#123;<span class=\"string\">'http'</span>:random.choice(iplist)&#125;)</div><div class=\"line\"></div><div class=\"line\">opener=urllib.request.build_opener(proxy_support)</div><div class=\"line\">opener.addheaders=[(<span class=\"string\">'User-Agent'</span>,<span class=\"string\">'Mozilla/5.0 (Windows NT 10.0; WOW64; rv:43.0) Gecko/20100101 Firefox/43.0'</span>)]</div><div class=\"line\">urllib.request.install_opener(opener)</div><div class=\"line\"></div><div class=\"line\">req=urllib.request.Request(url)</div><div class=\"line\">response=urllib.request.urlopen(req)</div></pre></td></tr></table></figure>\n<h2 id=\"爬知乎图片\"><a href=\"#爬知乎图片\" class=\"headerlink\" title=\"爬知乎图片\"></a>爬知乎图片</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> urllib.request</div><div class=\"line\"><span class=\"keyword\">import</span> os</div><div class=\"line\"><span class=\"keyword\">import</span> random</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#打开网页</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">url_open</span><span class=\"params\">(url)</span>:</span></div><div class=\"line\">    iplist=[</div><div class=\"line\">        <span class=\"string\">'49.77.22.1:8118'</span>,</div><div class=\"line\">        <span class=\"string\">'58.134.102.3:12696'</span>,</div><div class=\"line\">        <span class=\"string\">'120.26.213.55:9999'</span>...]</div><div class=\"line\"></div><div class=\"line\">    proxy_support=urllib.request.ProxyHandler(&#123;<span class=\"string\">'http'</span>:random.choice(iplist)&#125;)</div><div class=\"line\"></div><div class=\"line\">    opener=urllib.request.build_opener(proxy_support)</div><div class=\"line\">    opener.addheaders=[(<span class=\"string\">'User-Agent'</span>,<span class=\"string\">'Mozilla/5.0 (Windows NT 10.0; WOW64; rv:43.0) Gecko/20100101 Firefox/43.0'</span>)]</div><div class=\"line\"></div><div class=\"line\">    urllib.request.install_opener(opener)</div><div class=\"line\"></div><div class=\"line\">    req=urllib.request.Request(url)</div><div class=\"line\">    response=urllib.request.urlopen(req)</div><div class=\"line\">    html=response.read()</div><div class=\"line\">    <span class=\"keyword\">return</span> html</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#获取图片地址，返回图片地址的list</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_imgs</span><span class=\"params\">(url)</span>:</span></div><div class=\"line\">    html=url_open(url).decode(<span class=\"string\">'utf-8'</span>)</div><div class=\"line\"></div><div class=\"line\">    img_address=[]</div><div class=\"line\">    a=html.find(<span class=\"string\">'data-original'</span>)</div><div class=\"line\">    <span class=\"keyword\">while</span>(a!=<span class=\"number\">-1</span>):</div><div class=\"line\">        b=html.find(<span class=\"string\">'.jpg'</span>,a,a+<span class=\"number\">300</span>)</div><div class=\"line\">        <span class=\"keyword\">if</span>(b!=<span class=\"number\">-1</span>):</div><div class=\"line\">            <span class=\"comment\"># print(html[a+15:b+4])</span></div><div class=\"line\">            img_address.append(html[a+<span class=\"number\">15</span>:b+<span class=\"number\">4</span>])</div><div class=\"line\">        <span class=\"keyword\">else</span>:</div><div class=\"line\">            b=a+<span class=\"number\">9</span></div><div class=\"line\">        a=html.find(<span class=\"string\">'data-original='</span>,b)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> img_address:</div><div class=\"line\">        print(i)</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> img_address</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#存储到本地</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">save_imgs</span><span class=\"params\">(img_address)</span>:</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> img_address:</div><div class=\"line\">        <span class=\"comment\"># print(i)</span></div><div class=\"line\">        filename=i.split(<span class=\"string\">'/'</span>)[<span class=\"number\">-1</span>]</div><div class=\"line\">        <span class=\"keyword\">with</span> open(filename,<span class=\"string\">'wb'</span>) <span class=\"keyword\">as</span> f:</div><div class=\"line\">            img=url_open(i)</div><div class=\"line\">            f.write(img)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">zhihuPic</span><span class=\"params\">(url,folder=<span class=\"string\">\"zhihu\"</span>)</span>:</span></div><div class=\"line\">    <span class=\"keyword\">if</span>(os.path.exists(folder)):</div><div class=\"line\">        os.chdir(folder)</div><div class=\"line\">    <span class=\"keyword\">else</span>:</div><div class=\"line\">        os.mkdir(folder)</div><div class=\"line\">        os.chdir(folder)</div><div class=\"line\">    img_address=get_imgs(url)</div><div class=\"line\">    save_imgs(img_address)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> __name__==<span class=\"string\">'__main__'</span>:</div><div class=\"line\">    zhihuPic(<span class=\"string\">\"https://www.zhihu.com/question/22070147\"</span>)</div></pre></td></tr></table></figure>\n"},{"author":"ivyxjc","date":"2016-03-26T16:00:00.000Z","title":"正则表达式（python）","keywords":null,"description":null,"_content":"\n## re方法\n### re.search()\n`re.search(pattern,string,flags=0)`\n例：`re.search(r'love','I love you')`\n\n### re.findall()\n\n返回一个符合pattern的全部字符的list。\n\n### re.compile()\n\n```python\np=re.compile(r'[a-z]')\nres=re.findall(p,'iLadfaww')\nprint(res)\n\n['i', 'a', 'd', 'f', 'a', 'w', 'w']\n```\n\n```python\np=re.compile(r'[a-z]+',re.IGNORECASE)\nres=p.search('ADSwqefS',2,5)#后两个参数表示范围\nprint(res)\n\n<_sre.SRE_Match object; span=(2, 5), match='Swq'>\n\n```\n\n### 代码\n\n```python\np=re.compile(r'(Love) (You)')\nres=p.search('I Love You')\nprint(res.group(0))\nprint(res.group(1))\nprint(res.group(2))\n\nprint(res.start())\nprint(res.end())\nprint(res.span())\n\nLove You\nLove\nYou\n2\n10\n(2, 10)\n```\n\n## 编译标志\n\n[编译标志](http://bbs.fishc.com/forum.php?mod=viewthread&tid=57207&extra=page%3D1%26filter%3Dtypeid%26typeid%3D403)\n\n编译标志有两个名字：完整名和简写名\n\n1.ASCII,A：使得`\\w`,`\\b`,`\\s`和`\\d`只能匹配ASCII字符\n2.DOTALL,S：使得`.`匹配任何符号，包括换行符\n3.IGNORECASE,I：不区分大小写\n4.LOCALE,L：支持当前的语言，区域设置\n5.MULTILINE,M：多行匹配，影响`^`和`$`\n6.VERBOSE,X ：启用详细的正则表达式\n\n## 正则Pattern\n\n[Python3正则表达式特殊符号及用法](http://bbs.fishc.com/forum.php?mod=viewthread&tid=57691&extra=page%3D1%26filter%3Dtypeid%26typeid%3D403)\n\n`\\d`：匹配数字\n`\\D`:与`\\d`相反，相当于`[^0-9]`\n\n`\\s`：匹配任何空白字符（包含空格，换行符，制表符等），相当于`[\\t\\n\\r\\f\\v]`\n`\\S`：与上相反\n\n`\\w`匹配任何单词字符\n`\\W`与上相反\n\n`\\b`匹配单词的开始或者结束。`\\b`在字符类中可表示空格\n`\\B`与上相反\n\n`.`：匹配除换行符以外的任何字符\n\n`|`：或\n\n`*`:匹配前面的表达式0次或者而多次=={0,}\n`+`:匹配前面的表达式1次或者多次=={1,}\n`?`:匹配前面的表达式0次或者1次=={0,1}\n\n`\\`:\n1.转义字符\n2.类似于`\\d`这种用途\n3.引用序号对应的子组所对应的字符串(两位数)\n`r'(ABC)(.com)\\2'匹配的就是'ABC.com.com’`\n4.(三位数，首位可为0)表示八进制数所代表的ASCII码\n\n`[..]`:字符类，匹配所包含的任意一个字符\n\n\n`^`:\n1.匹配字符串的开始位置\n2.如果设置了re.MULTILINE标志，则表示换行符之后的位置\n3.`[^..]`取反，只能放在最开头。若不在最开头，则表示`^`本身。\n\n`%`：\n1.匹配字符串的结束位置，\n2.如果设置了re.MULTILINE标志，则表示换行符之前的位置\n\n`{M,N}`：匹配前面的内容M~N次\n\n`[a-z]`：匹配a-z\n\n\n`ab{3}z`:匹配abbbc\n\n`ab{3,10}c`：匹配a(3-10个)bc\n\n## 零宽断言\n\n`\\b` `^` `$` `\\A` `\\Z` 等用于指定位置，这个位置应满足的一定的条件（即断言），称为零宽断言。\n\n### 前向肯定断言\n`(?=exp)`\n\n例`abc(?=.com)`只会匹配后面紧跟着`.com`的`abc`\n\n### 前向否定断言\n`(?!exp)`\n\n### 后向肯定断言\n`(?<=exp)`\n\n例：`(?<=abc).com`只会匹配前面为`abc`的`.com`\n\n### 后向否定断言\n`(?<!exp)`\n\n## 贪婪与非贪婪\n\n默认是贪婪模式（在符合条件下尽可能多的匹配）：\n\n```python\nres=re.search(r'ABC{2,8}','ABCCCCCC')\nprint(res)\n\n<_sre.SRE_Match object; span=(0, 8), match='ABCCCCCC'>\n```\n\n可以利用`?`变为非贪婪模式\n\n```python\nres=re.search(r'ABC{2,8}?','ABCCCCCC')\nprint(res)\n\n<_sre.SRE_Match object; span=(0, 4), match='ABCC'>\n```\n\n## 捕获\n使用`(....)`会捕获其中内容\n\n使用`(?:...)`不会捕获其中内容\n\n## 例子\n\n### 匹配ip地址\n\n`res=re.search(r'((\\d\\d|\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.){3}((\\d\\d|\\d|1\\d\\d|2[0-4]\\d|25[0-5]))','2.1.1.1')`\n\n\n相关博客：[Python3如何优雅地使用正则表达式](http://bbs.fishc.com/thread-57073-1-1.html)\n\n","source":"_posts/python/Spider/基础知识/2016-03-27-regex.md","raw":"---\nauthor: ivyxjc\ndate: 2016-03-27\ntitle: 正则表达式（python）\ncategory: Python\ntags: [python,regex]\nkeywords:\ndescription:\n---\n\n## re方法\n### re.search()\n`re.search(pattern,string,flags=0)`\n例：`re.search(r'love','I love you')`\n\n### re.findall()\n\n返回一个符合pattern的全部字符的list。\n\n### re.compile()\n\n```python\np=re.compile(r'[a-z]')\nres=re.findall(p,'iLadfaww')\nprint(res)\n\n['i', 'a', 'd', 'f', 'a', 'w', 'w']\n```\n\n```python\np=re.compile(r'[a-z]+',re.IGNORECASE)\nres=p.search('ADSwqefS',2,5)#后两个参数表示范围\nprint(res)\n\n<_sre.SRE_Match object; span=(2, 5), match='Swq'>\n\n```\n\n### 代码\n\n```python\np=re.compile(r'(Love) (You)')\nres=p.search('I Love You')\nprint(res.group(0))\nprint(res.group(1))\nprint(res.group(2))\n\nprint(res.start())\nprint(res.end())\nprint(res.span())\n\nLove You\nLove\nYou\n2\n10\n(2, 10)\n```\n\n## 编译标志\n\n[编译标志](http://bbs.fishc.com/forum.php?mod=viewthread&tid=57207&extra=page%3D1%26filter%3Dtypeid%26typeid%3D403)\n\n编译标志有两个名字：完整名和简写名\n\n1.ASCII,A：使得`\\w`,`\\b`,`\\s`和`\\d`只能匹配ASCII字符\n2.DOTALL,S：使得`.`匹配任何符号，包括换行符\n3.IGNORECASE,I：不区分大小写\n4.LOCALE,L：支持当前的语言，区域设置\n5.MULTILINE,M：多行匹配，影响`^`和`$`\n6.VERBOSE,X ：启用详细的正则表达式\n\n## 正则Pattern\n\n[Python3正则表达式特殊符号及用法](http://bbs.fishc.com/forum.php?mod=viewthread&tid=57691&extra=page%3D1%26filter%3Dtypeid%26typeid%3D403)\n\n`\\d`：匹配数字\n`\\D`:与`\\d`相反，相当于`[^0-9]`\n\n`\\s`：匹配任何空白字符（包含空格，换行符，制表符等），相当于`[\\t\\n\\r\\f\\v]`\n`\\S`：与上相反\n\n`\\w`匹配任何单词字符\n`\\W`与上相反\n\n`\\b`匹配单词的开始或者结束。`\\b`在字符类中可表示空格\n`\\B`与上相反\n\n`.`：匹配除换行符以外的任何字符\n\n`|`：或\n\n`*`:匹配前面的表达式0次或者而多次=={0,}\n`+`:匹配前面的表达式1次或者多次=={1,}\n`?`:匹配前面的表达式0次或者1次=={0,1}\n\n`\\`:\n1.转义字符\n2.类似于`\\d`这种用途\n3.引用序号对应的子组所对应的字符串(两位数)\n`r'(ABC)(.com)\\2'匹配的就是'ABC.com.com’`\n4.(三位数，首位可为0)表示八进制数所代表的ASCII码\n\n`[..]`:字符类，匹配所包含的任意一个字符\n\n\n`^`:\n1.匹配字符串的开始位置\n2.如果设置了re.MULTILINE标志，则表示换行符之后的位置\n3.`[^..]`取反，只能放在最开头。若不在最开头，则表示`^`本身。\n\n`%`：\n1.匹配字符串的结束位置，\n2.如果设置了re.MULTILINE标志，则表示换行符之前的位置\n\n`{M,N}`：匹配前面的内容M~N次\n\n`[a-z]`：匹配a-z\n\n\n`ab{3}z`:匹配abbbc\n\n`ab{3,10}c`：匹配a(3-10个)bc\n\n## 零宽断言\n\n`\\b` `^` `$` `\\A` `\\Z` 等用于指定位置，这个位置应满足的一定的条件（即断言），称为零宽断言。\n\n### 前向肯定断言\n`(?=exp)`\n\n例`abc(?=.com)`只会匹配后面紧跟着`.com`的`abc`\n\n### 前向否定断言\n`(?!exp)`\n\n### 后向肯定断言\n`(?<=exp)`\n\n例：`(?<=abc).com`只会匹配前面为`abc`的`.com`\n\n### 后向否定断言\n`(?<!exp)`\n\n## 贪婪与非贪婪\n\n默认是贪婪模式（在符合条件下尽可能多的匹配）：\n\n```python\nres=re.search(r'ABC{2,8}','ABCCCCCC')\nprint(res)\n\n<_sre.SRE_Match object; span=(0, 8), match='ABCCCCCC'>\n```\n\n可以利用`?`变为非贪婪模式\n\n```python\nres=re.search(r'ABC{2,8}?','ABCCCCCC')\nprint(res)\n\n<_sre.SRE_Match object; span=(0, 4), match='ABCC'>\n```\n\n## 捕获\n使用`(....)`会捕获其中内容\n\n使用`(?:...)`不会捕获其中内容\n\n## 例子\n\n### 匹配ip地址\n\n`res=re.search(r'((\\d\\d|\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.){3}((\\d\\d|\\d|1\\d\\d|2[0-4]\\d|25[0-5]))','2.1.1.1')`\n\n\n相关博客：[Python3如何优雅地使用正则表达式](http://bbs.fishc.com/thread-57073-1-1.html)\n\n","slug":"python/Spider/基础知识/2016-03-27-regex","published":1,"updated":"2016-10-13T06:34:38.579Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f012d0050cwjrqhxl7myo","content":"<h2 id=\"re方法\"><a href=\"#re方法\" class=\"headerlink\" title=\"re方法\"></a>re方法</h2><h3 id=\"re-search\"><a href=\"#re-search\" class=\"headerlink\" title=\"re.search()\"></a>re.search()</h3><p><code>re.search(pattern,string,flags=0)</code><br>例：<code>re.search(r&#39;love&#39;,&#39;I love you&#39;)</code></p>\n<h3 id=\"re-findall\"><a href=\"#re-findall\" class=\"headerlink\" title=\"re.findall()\"></a>re.findall()</h3><p>返回一个符合pattern的全部字符的list。</p>\n<h3 id=\"re-compile\"><a href=\"#re-compile\" class=\"headerlink\" title=\"re.compile()\"></a>re.compile()</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">p=re.compile(<span class=\"string\">r'[a-z]'</span>)</div><div class=\"line\">res=re.findall(p,<span class=\"string\">'iLadfaww'</span>)</div><div class=\"line\">print(res)</div><div class=\"line\"></div><div class=\"line\">[<span class=\"string\">'i'</span>, <span class=\"string\">'a'</span>, <span class=\"string\">'d'</span>, <span class=\"string\">'f'</span>, <span class=\"string\">'a'</span>, <span class=\"string\">'w'</span>, <span class=\"string\">'w'</span>]</div></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">p=re.compile(<span class=\"string\">r'[a-z]+'</span>,re.IGNORECASE)</div><div class=\"line\">res=p.search(<span class=\"string\">'ADSwqefS'</span>,<span class=\"number\">2</span>,<span class=\"number\">5</span>)<span class=\"comment\">#后两个参数表示范围</span></div><div class=\"line\">print(res)</div><div class=\"line\"></div><div class=\"line\">&lt;_sre.SRE_Match object; span=(<span class=\"number\">2</span>, <span class=\"number\">5</span>), match=<span class=\"string\">'Swq'</span>&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">p=re.compile(<span class=\"string\">r'(Love) (You)'</span>)</div><div class=\"line\">res=p.search(<span class=\"string\">'I Love You'</span>)</div><div class=\"line\">print(res.group(<span class=\"number\">0</span>))</div><div class=\"line\">print(res.group(<span class=\"number\">1</span>))</div><div class=\"line\">print(res.group(<span class=\"number\">2</span>))</div><div class=\"line\"></div><div class=\"line\">print(res.start())</div><div class=\"line\">print(res.end())</div><div class=\"line\">print(res.span())</div><div class=\"line\"></div><div class=\"line\">Love You</div><div class=\"line\">Love</div><div class=\"line\">You</div><div class=\"line\"><span class=\"number\">2</span></div><div class=\"line\"><span class=\"number\">10</span></div><div class=\"line\">(<span class=\"number\">2</span>, <span class=\"number\">10</span>)</div></pre></td></tr></table></figure>\n<h2 id=\"编译标志\"><a href=\"#编译标志\" class=\"headerlink\" title=\"编译标志\"></a>编译标志</h2><p><a href=\"http://bbs.fishc.com/forum.php?mod=viewthread&amp;tid=57207&amp;extra=page%3D1%26filter%3Dtypeid%26typeid%3D403\" target=\"_blank\" rel=\"external\">编译标志</a></p>\n<p>编译标志有两个名字：完整名和简写名</p>\n<p>1.ASCII,A：使得<code>\\w</code>,<code>\\b</code>,<code>\\s</code>和<code>\\d</code>只能匹配ASCII字符<br>2.DOTALL,S：使得<code>.</code>匹配任何符号，包括换行符<br>3.IGNORECASE,I：不区分大小写<br>4.LOCALE,L：支持当前的语言，区域设置<br>5.MULTILINE,M：多行匹配，影响<code>^</code>和<code>$</code><br>6.VERBOSE,X ：启用详细的正则表达式</p>\n<h2 id=\"正则Pattern\"><a href=\"#正则Pattern\" class=\"headerlink\" title=\"正则Pattern\"></a>正则Pattern</h2><p><a href=\"http://bbs.fishc.com/forum.php?mod=viewthread&amp;tid=57691&amp;extra=page%3D1%26filter%3Dtypeid%26typeid%3D403\" target=\"_blank\" rel=\"external\">Python3正则表达式特殊符号及用法</a></p>\n<p><code>\\d</code>：匹配数字<br><code>\\D</code>:与<code>\\d</code>相反，相当于<code>[^0-9]</code></p>\n<p><code>\\s</code>：匹配任何空白字符（包含空格，换行符，制表符等），相当于<code>[\\t\\n\\r\\f\\v]</code><br><code>\\S</code>：与上相反</p>\n<p><code>\\w</code>匹配任何单词字符<br><code>\\W</code>与上相反</p>\n<p><code>\\b</code>匹配单词的开始或者结束。<code>\\b</code>在字符类中可表示空格<br><code>\\B</code>与上相反</p>\n<p><code>.</code>：匹配除换行符以外的任何字符</p>\n<p><code>|</code>：或</p>\n<p><code>*</code>:匹配前面的表达式0次或者而多次=={0,}<br><code>+</code>:匹配前面的表达式1次或者多次=={1,}<br><code>?</code>:匹配前面的表达式0次或者1次=={0,1}</p>\n<p><code>\\</code>:<br>1.转义字符<br>2.类似于<code>\\d</code>这种用途<br>3.引用序号对应的子组所对应的字符串(两位数)<br><code>r&#39;(ABC)(.com)\\2&#39;匹配的就是&#39;ABC.com.com’</code><br>4.(三位数，首位可为0)表示八进制数所代表的ASCII码</p>\n<p><code>[..]</code>:字符类，匹配所包含的任意一个字符</p>\n<p><code>^</code>:<br>1.匹配字符串的开始位置<br>2.如果设置了re.MULTILINE标志，则表示换行符之后的位置<br>3.<code>[^..]</code>取反，只能放在最开头。若不在最开头，则表示<code>^</code>本身。</p>\n<p><code>%</code>：<br>1.匹配字符串的结束位置，<br>2.如果设置了re.MULTILINE标志，则表示换行符之前的位置</p>\n<p><code>{M,N}</code>：匹配前面的内容M~N次</p>\n<p><code>[a-z]</code>：匹配a-z</p>\n<p><code>ab{3}z</code>:匹配abbbc</p>\n<p><code>ab{3,10}c</code>：匹配a(3-10个)bc</p>\n<h2 id=\"零宽断言\"><a href=\"#零宽断言\" class=\"headerlink\" title=\"零宽断言\"></a>零宽断言</h2><p><code>\\b</code> <code>^</code> <code>$</code> <code>\\A</code> <code>\\Z</code> 等用于指定位置，这个位置应满足的一定的条件（即断言），称为零宽断言。</p>\n<h3 id=\"前向肯定断言\"><a href=\"#前向肯定断言\" class=\"headerlink\" title=\"前向肯定断言\"></a>前向肯定断言</h3><p><code>(?=exp)</code></p>\n<p>例<code>abc(?=.com)</code>只会匹配后面紧跟着<code>.com</code>的<code>abc</code></p>\n<h3 id=\"前向否定断言\"><a href=\"#前向否定断言\" class=\"headerlink\" title=\"前向否定断言\"></a>前向否定断言</h3><p><code>(?!exp)</code></p>\n<h3 id=\"后向肯定断言\"><a href=\"#后向肯定断言\" class=\"headerlink\" title=\"后向肯定断言\"></a>后向肯定断言</h3><p><code>(?&lt;=exp)</code></p>\n<p>例：<code>(?&lt;=abc).com</code>只会匹配前面为<code>abc</code>的<code>.com</code></p>\n<h3 id=\"后向否定断言\"><a href=\"#后向否定断言\" class=\"headerlink\" title=\"后向否定断言\"></a>后向否定断言</h3><p><code>(?&lt;!exp)</code></p>\n<h2 id=\"贪婪与非贪婪\"><a href=\"#贪婪与非贪婪\" class=\"headerlink\" title=\"贪婪与非贪婪\"></a>贪婪与非贪婪</h2><p>默认是贪婪模式（在符合条件下尽可能多的匹配）：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">res=re.search(<span class=\"string\">r'ABC&#123;2,8&#125;'</span>,<span class=\"string\">'ABCCCCCC'</span>)</div><div class=\"line\">print(res)</div><div class=\"line\"></div><div class=\"line\">&lt;_sre.SRE_Match object; span=(<span class=\"number\">0</span>, <span class=\"number\">8</span>), match=<span class=\"string\">'ABCCCCCC'</span>&gt;</div></pre></td></tr></table></figure>\n<p>可以利用<code>?</code>变为非贪婪模式</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">res=re.search(<span class=\"string\">r'ABC&#123;2,8&#125;?'</span>,<span class=\"string\">'ABCCCCCC'</span>)</div><div class=\"line\">print(res)</div><div class=\"line\"></div><div class=\"line\">&lt;_sre.SRE_Match object; span=(<span class=\"number\">0</span>, <span class=\"number\">4</span>), match=<span class=\"string\">'ABCC'</span>&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"捕获\"><a href=\"#捕获\" class=\"headerlink\" title=\"捕获\"></a>捕获</h2><p>使用<code>(....)</code>会捕获其中内容</p>\n<p>使用<code>(?:...)</code>不会捕获其中内容</p>\n<h2 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h2><h3 id=\"匹配ip地址\"><a href=\"#匹配ip地址\" class=\"headerlink\" title=\"匹配ip地址\"></a>匹配ip地址</h3><p><code>res=re.search(r&#39;((\\d\\d|\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.){3}((\\d\\d|\\d|1\\d\\d|2[0-4]\\d|25[0-5]))&#39;,&#39;2.1.1.1&#39;)</code></p>\n<p>相关博客：<a href=\"http://bbs.fishc.com/thread-57073-1-1.html\" target=\"_blank\" rel=\"external\">Python3如何优雅地使用正则表达式</a></p>\n","excerpt":"","more":"<h2 id=\"re方法\"><a href=\"#re方法\" class=\"headerlink\" title=\"re方法\"></a>re方法</h2><h3 id=\"re-search\"><a href=\"#re-search\" class=\"headerlink\" title=\"re.search()\"></a>re.search()</h3><p><code>re.search(pattern,string,flags=0)</code><br>例：<code>re.search(r&#39;love&#39;,&#39;I love you&#39;)</code></p>\n<h3 id=\"re-findall\"><a href=\"#re-findall\" class=\"headerlink\" title=\"re.findall()\"></a>re.findall()</h3><p>返回一个符合pattern的全部字符的list。</p>\n<h3 id=\"re-compile\"><a href=\"#re-compile\" class=\"headerlink\" title=\"re.compile()\"></a>re.compile()</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">p=re.compile(<span class=\"string\">r'[a-z]'</span>)</div><div class=\"line\">res=re.findall(p,<span class=\"string\">'iLadfaww'</span>)</div><div class=\"line\">print(res)</div><div class=\"line\"></div><div class=\"line\">[<span class=\"string\">'i'</span>, <span class=\"string\">'a'</span>, <span class=\"string\">'d'</span>, <span class=\"string\">'f'</span>, <span class=\"string\">'a'</span>, <span class=\"string\">'w'</span>, <span class=\"string\">'w'</span>]</div></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">p=re.compile(<span class=\"string\">r'[a-z]+'</span>,re.IGNORECASE)</div><div class=\"line\">res=p.search(<span class=\"string\">'ADSwqefS'</span>,<span class=\"number\">2</span>,<span class=\"number\">5</span>)<span class=\"comment\">#后两个参数表示范围</span></div><div class=\"line\">print(res)</div><div class=\"line\"></div><div class=\"line\">&lt;_sre.SRE_Match object; span=(<span class=\"number\">2</span>, <span class=\"number\">5</span>), match=<span class=\"string\">'Swq'</span>&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">p=re.compile(<span class=\"string\">r'(Love) (You)'</span>)</div><div class=\"line\">res=p.search(<span class=\"string\">'I Love You'</span>)</div><div class=\"line\">print(res.group(<span class=\"number\">0</span>))</div><div class=\"line\">print(res.group(<span class=\"number\">1</span>))</div><div class=\"line\">print(res.group(<span class=\"number\">2</span>))</div><div class=\"line\"></div><div class=\"line\">print(res.start())</div><div class=\"line\">print(res.end())</div><div class=\"line\">print(res.span())</div><div class=\"line\"></div><div class=\"line\">Love You</div><div class=\"line\">Love</div><div class=\"line\">You</div><div class=\"line\"><span class=\"number\">2</span></div><div class=\"line\"><span class=\"number\">10</span></div><div class=\"line\">(<span class=\"number\">2</span>, <span class=\"number\">10</span>)</div></pre></td></tr></table></figure>\n<h2 id=\"编译标志\"><a href=\"#编译标志\" class=\"headerlink\" title=\"编译标志\"></a>编译标志</h2><p><a href=\"http://bbs.fishc.com/forum.php?mod=viewthread&amp;tid=57207&amp;extra=page%3D1%26filter%3Dtypeid%26typeid%3D403\">编译标志</a></p>\n<p>编译标志有两个名字：完整名和简写名</p>\n<p>1.ASCII,A：使得<code>\\w</code>,<code>\\b</code>,<code>\\s</code>和<code>\\d</code>只能匹配ASCII字符<br>2.DOTALL,S：使得<code>.</code>匹配任何符号，包括换行符<br>3.IGNORECASE,I：不区分大小写<br>4.LOCALE,L：支持当前的语言，区域设置<br>5.MULTILINE,M：多行匹配，影响<code>^</code>和<code>$</code><br>6.VERBOSE,X ：启用详细的正则表达式</p>\n<h2 id=\"正则Pattern\"><a href=\"#正则Pattern\" class=\"headerlink\" title=\"正则Pattern\"></a>正则Pattern</h2><p><a href=\"http://bbs.fishc.com/forum.php?mod=viewthread&amp;tid=57691&amp;extra=page%3D1%26filter%3Dtypeid%26typeid%3D403\">Python3正则表达式特殊符号及用法</a></p>\n<p><code>\\d</code>：匹配数字<br><code>\\D</code>:与<code>\\d</code>相反，相当于<code>[^0-9]</code></p>\n<p><code>\\s</code>：匹配任何空白字符（包含空格，换行符，制表符等），相当于<code>[\\t\\n\\r\\f\\v]</code><br><code>\\S</code>：与上相反</p>\n<p><code>\\w</code>匹配任何单词字符<br><code>\\W</code>与上相反</p>\n<p><code>\\b</code>匹配单词的开始或者结束。<code>\\b</code>在字符类中可表示空格<br><code>\\B</code>与上相反</p>\n<p><code>.</code>：匹配除换行符以外的任何字符</p>\n<p><code>|</code>：或</p>\n<p><code>*</code>:匹配前面的表达式0次或者而多次=={0,}<br><code>+</code>:匹配前面的表达式1次或者多次=={1,}<br><code>?</code>:匹配前面的表达式0次或者1次=={0,1}</p>\n<p><code>\\</code>:<br>1.转义字符<br>2.类似于<code>\\d</code>这种用途<br>3.引用序号对应的子组所对应的字符串(两位数)<br><code>r&#39;(ABC)(.com)\\2&#39;匹配的就是&#39;ABC.com.com’</code><br>4.(三位数，首位可为0)表示八进制数所代表的ASCII码</p>\n<p><code>[..]</code>:字符类，匹配所包含的任意一个字符</p>\n<p><code>^</code>:<br>1.匹配字符串的开始位置<br>2.如果设置了re.MULTILINE标志，则表示换行符之后的位置<br>3.<code>[^..]</code>取反，只能放在最开头。若不在最开头，则表示<code>^</code>本身。</p>\n<p><code>%</code>：<br>1.匹配字符串的结束位置，<br>2.如果设置了re.MULTILINE标志，则表示换行符之前的位置</p>\n<p><code>{M,N}</code>：匹配前面的内容M~N次</p>\n<p><code>[a-z]</code>：匹配a-z</p>\n<p><code>ab{3}z</code>:匹配abbbc</p>\n<p><code>ab{3,10}c</code>：匹配a(3-10个)bc</p>\n<h2 id=\"零宽断言\"><a href=\"#零宽断言\" class=\"headerlink\" title=\"零宽断言\"></a>零宽断言</h2><p><code>\\b</code> <code>^</code> <code>$</code> <code>\\A</code> <code>\\Z</code> 等用于指定位置，这个位置应满足的一定的条件（即断言），称为零宽断言。</p>\n<h3 id=\"前向肯定断言\"><a href=\"#前向肯定断言\" class=\"headerlink\" title=\"前向肯定断言\"></a>前向肯定断言</h3><p><code>(?=exp)</code></p>\n<p>例<code>abc(?=.com)</code>只会匹配后面紧跟着<code>.com</code>的<code>abc</code></p>\n<h3 id=\"前向否定断言\"><a href=\"#前向否定断言\" class=\"headerlink\" title=\"前向否定断言\"></a>前向否定断言</h3><p><code>(?!exp)</code></p>\n<h3 id=\"后向肯定断言\"><a href=\"#后向肯定断言\" class=\"headerlink\" title=\"后向肯定断言\"></a>后向肯定断言</h3><p><code>(?&lt;=exp)</code></p>\n<p>例：<code>(?&lt;=abc).com</code>只会匹配前面为<code>abc</code>的<code>.com</code></p>\n<h3 id=\"后向否定断言\"><a href=\"#后向否定断言\" class=\"headerlink\" title=\"后向否定断言\"></a>后向否定断言</h3><p><code>(?&lt;!exp)</code></p>\n<h2 id=\"贪婪与非贪婪\"><a href=\"#贪婪与非贪婪\" class=\"headerlink\" title=\"贪婪与非贪婪\"></a>贪婪与非贪婪</h2><p>默认是贪婪模式（在符合条件下尽可能多的匹配）：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">res=re.search(<span class=\"string\">r'ABC&#123;2,8&#125;'</span>,<span class=\"string\">'ABCCCCCC'</span>)</div><div class=\"line\">print(res)</div><div class=\"line\"></div><div class=\"line\">&lt;_sre.SRE_Match object; span=(<span class=\"number\">0</span>, <span class=\"number\">8</span>), match=<span class=\"string\">'ABCCCCCC'</span>&gt;</div></pre></td></tr></table></figure>\n<p>可以利用<code>?</code>变为非贪婪模式</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">res=re.search(<span class=\"string\">r'ABC&#123;2,8&#125;?'</span>,<span class=\"string\">'ABCCCCCC'</span>)</div><div class=\"line\">print(res)</div><div class=\"line\"></div><div class=\"line\">&lt;_sre.SRE_Match object; span=(<span class=\"number\">0</span>, <span class=\"number\">4</span>), match=<span class=\"string\">'ABCC'</span>&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"捕获\"><a href=\"#捕获\" class=\"headerlink\" title=\"捕获\"></a>捕获</h2><p>使用<code>(....)</code>会捕获其中内容</p>\n<p>使用<code>(?:...)</code>不会捕获其中内容</p>\n<h2 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h2><h3 id=\"匹配ip地址\"><a href=\"#匹配ip地址\" class=\"headerlink\" title=\"匹配ip地址\"></a>匹配ip地址</h3><p><code>res=re.search(r&#39;((\\d\\d|\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.){3}((\\d\\d|\\d|1\\d\\d|2[0-4]\\d|25[0-5]))&#39;,&#39;2.1.1.1&#39;)</code></p>\n<p>相关博客：<a href=\"http://bbs.fishc.com/thread-57073-1-1.html\">Python3如何优雅地使用正则表达式</a></p>\n"},{"author":"ivyxjc","date":"2016-03-28T16:00:00.000Z","title":"BeautifulSoup4入门","keywords":null,"description":null,"_content":"\n## 对象的种类\nBeautifulSoup会将HTML文档抓换成一个树形结构, 每个节点都是Python对象，所有对象可以分为4类：`Tag`,`NavigableString`,`BeautifulSoup`,`Comment`。\n\n\n### Tag\n`Tag`与XML或HTML中的tag相同：\n\n```python3\nsoup = BeautifulSoup('<b class=\"boldest\">Extremely bold</b>')\ntag = soup.b\nprint(type(tag))\nprint(tag)\n\n--<class 'bs4.element.Tag'>\n--<b class=\"boldest\">Extremely bold</b>\n```\n\n#### name\n\n每一个Tag都有自己的name，可以通过`.name`。改变tag的name，将会影响通过当前BS对象生成的HTML文档\n\n```python3\nsoup = BeautifulSoup('<b class=\"boldest\">Extremely bold</b>',\"html.parser\")\ntag = soup.b\nprint(tag)\nprint(tag.name)\ntag.name=\"blockquote\"\nprint(tag)\n\n---<b class=\"boldest\">Extremely bold</b>\n---b\n---<blockquote class=\"boldest\">Extremely bold</blockquote>\n```\n\n#### attributes\n一个tag可能有多个属性\n\n```python3\nsoup = BeautifulSoup('<b class=\"boldest\">Extremely bold</b>',\"html.parser\")\ntag = soup.b\nprint(tag['class'])\nprint(tag.attrs)\n\n---['boldest']\n---{'class': ['boldest']}\n```\n\ntag的属性可以被添加，删除或修改\n\n```python\nsoup = BeautifulSoup('<b class=\"boldest\">Extremely bold</b>',\"html.parser\")\ntag = soup.b\n#更改属性\ntag['class']=\"verybold\"\ntag['id']=1\nprint(tag)\n\n#删除属性\ndel tag['class']\nprint(tag)\nprint(tag.get('class'))\n\n---<b class=\"verybold\" id=\"1\">Extremely bold</b>\n---<b id=\"1\">Extremely bold</b>\n---\n```\n\n##### 多值属性\n多值属性即为可包含多个值的属性，最常见的即为`class`\n`xml`中没有多值属性\n\n多值属性的返回类型是list\n\n```python\ncss_soup = BeautifulSoup('<p class=\"body strikeout\"></p>',\"html.parser\")\nprint(css_soup.p['class'])\n\n---['body', 'strikeout']\n```\n\n若某个属性看起来像多值属性，但是在任何版本HTML中都没有被定义为多值属性，那么BS会将这个属性作为字符串返回\n\n```python\nid_soup = BeautifulSoup('<p id=\"my id\"></p>',\"html.parser\")\nprint(id_soup.p['id'])\n\n---my id\n```\n\n### NavigableString\n\n`NavigableString`不支持`.content`,`.string`,`find()`方法。\n\n如果想在Beautiful Soup之外使用`NavigableString`对象,需要调用`unicode()`方法,将该对象转换成普通的Unicode字符串,否则就算Beautiful Soup已方法已经执行结束,该对象的输出也会带有对象的引用地址.这样会浪费内存.\n\n```python\nsoup = BeautifulSoup('<b class=\"boldest\">Extremely bold</b>',\"html.parser\")\ntag = soup.b\nprint(tag.string)\nprint(type(tag.string))\ntag.string.replace_with(\"No long bold\")\nprint(tag)\n\n---Extremely bold\n---<class 'bs4.element.NavigableString'>\n---<b class=\"boldest\">No long bold</b>\n```\n\n## BeautifulSoup\n\n`BeautifulSoup`对象表示的是一个文档的全部内容.大部分时候,可以把它当作 Tag 对象,它支持 遍历文档树 和 搜索文档树 中描述的大部分的方法.\n\n`BeautifuSoup`没有name和attribute属性。但有一个值为`[document]`的特殊属性`.name`\n\n```python\nsoup = BeautifulSoup('<b class=\"boldest\">Extremely bold</b>',\"html.parser\")\nprint(soup.name)\n\n---[document]\n```\n\n### Comment\n\n## 遍历文档树\n\n```\nhtml_doc = \"\"\"\n<html><head><title>The Dormouse's story</title></head>\n\n<p class=\"title\"><b>The Dormouse's story</b></p>\n\n<p class=\"story\">Once upon a time there were three little sisters; and their names were\n<a href=\"http://example.com/elsie\" class=\"sister\" id=\"link1\">Elsie</a>,\n<a href=\"http://example.com/lacie\" class=\"sister\" id=\"link2\">Lacie</a> and\n<a href=\"http://example.com/tillie\" class=\"sister\" id=\"link3\">Tillie</a>;\nand they lived at the bottom of a well.</p>\n\n<p class=\"story\">...</p>\n\"\"\"\n```\n\n### `.content`和`.children`\ntag的`.contents`属性可以将tag的子节点以列表的方式输出:\n通过tag的`.children`生成器,可以对tag的子节点进行循环:\n\n```python\nprint(soup.title.contents)\nprint(soup.title.contents[0])\n\n---[\"The Dormouse's story\"]\n---The Dormouse's story\n```\n\n```python\nfor i in soup.head.children:\n    print(i)\n\n---<title>The Dormouse's story</title>\n```\n\n### `.descendants`\n\n`.descendants`属性可以对所有tag的子孙节点进行递归循环\n\n```python\nprint(soup.head.contents)\nfor child in soup.head.descendants:\n    print(child)\n\nprint(len(list(soup.children)))\nprint(len(list(soup.descendants)))\n\n---[<title>The Dormouse's story</title>]\n---<title>The Dormouse's story</title>\n---The Dormouse's story\n---2\n---25\n```\n\n### `.string`\n\n如果tag只有一个`NavigableString`类型子节点,那么这个tag可以使用`.string`得到子节点\n\n```python\nprint(soup.head.string)\n\n---The Dormouse's story\n```\n\n### `.strings`和`stripped_strings`\n如果tag中有多个字符串，可以使用`.strings`循环获取\n使用`.stripped_strings`可以去除多余空白内容：\n\n```python\nfor string in soup.stripped_strings:\n    print(repr(string))\n```\n\n### `.parent`和`.parents`\n通过`.parent`属性来获取某个元素的父节点\n通过元素的`.parents`属性可以递归得到元素的所有父辈节点。\n\n```python\nfor parent in soup.a.parents:\n    if parent is None:\n        print(parent)\n    else:\n        print(parent.name)\n\n---p\n---html\n---[document]\n```\n\n### 兄弟节点\n\n#### `.next_sibling`和`.previous_sibling`\n\n使用`。next_sibling`和`.previous_sibling`属性来查询兄弟节点\n\n实际文档中的tag的 .next_sibling 和 .previous_sibling 属性通常是字符串或空白。因为中间可能会隔着一些字符以及标点。\n\n#### `.next_siblings`和`.previous_siblings`\n\n```python3\nfor sibling in soup.a.next_siblings:\n    print(repr(sibling))\n\n---',\\n'\n---<a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>\n---' and\\n'\n---<a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>\n';\\nand they lived at the bottom of a well.'\n```\n\n### 重现解析过程\n\n#### `.next_element`和`.previous_element`\n`next_element`属性指向解析过程中下一个被解析的对象(字符串或tag),结果可能与`.next_sibling`相同,但通常是不一样的.\n\n```python\nlast_a_tag=soup.find(\"a\",id=\"link3\")\nprint(last_a_tag)\nprint(last_a_tag.next_sibling)\nprint(last_a_tag.next_element)\n\n---<a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>\n---;\n---and they lived at the bottom of a well.\n---Tillie\n```\n\n#### `.next_elements`和`.previous_elements`\n\n## 搜索文档树\n\n### 过滤器\n\n#### 字符串\n\n#### 正则表达式\n\n```python\nfor tag in soup.find_all(re.compile(\"^b\")):\n    print(tag.name)\n```\n\n#### 列表\n如果传入列表参数,Beautiful Soup会将与列表中任一元素匹配的内容返回.\n\n#### True\n\nTrue可以匹配任何值,但是不会返回字符串节点\n\n#### 方法\n如果没有合适过滤器,那么还可以定义一个方法,方法只接受一个元素参数,如果这个方法返回True表示当前元素匹配并且被找到,如果不是则反回False。\n\n```python3\ndef has_class_but_no_id(tag):\n    return tag.has_attr('class') and not tag.has_attr('id')\n```\n\n\n### find_all()\n\n#### name参数\n\n#### keyword参数\n\n`soup.find_all(id='link2')`\n\n\n#### 按CSS搜索\n\n因为`class`是python保留字，所以用`class_`\n例：\n`soup.find_all(\"a\",class_=\"sister\")`\n\n`class_`参数同样接受不同类型的过滤器 ,字符串,正则表达式,方法或 True :\n\ntag的`class`属性是 多值属性 .按照CSS类名搜索tag时,可以分别搜索tag中的每个CSS类名:\n\n#### text参数\n通过`text`参数可以搜搜文档中的字符串内容.\n\n#### limit参数\n\n`limit`参数限制返回结果的数量\n\n#### recursive参数\n调用tag的`find_all()`方法时,Beautiful Soup会检索当前tag的所有子孙节点,如果只想搜索tag的直接子节点,可以使用参数 `recursive=False`.\n\n#### 简写\n\n```\nsoup.find_all(\"a\")\nsoup(\"a\")\n```\n\n```\nsoup.title.find_all(text=True)\nsoup.title(text=True)\n```\n\n### find()\n\n只返回一个结果\n\n### `find_parents()`和`find_parent()`\n\n### `find_next_siblings()和`find_next_sibling()`\n\n### `find_all_next()`和`find_next()`\n\n### `find_all_previous()`和`find_previous()`\n\n### CSS选择器\n在Tag或BeautifulSoup对象的`.select()`方法中传入字符串参数,即可使用CSS选择器的语法找到tag:\n","source":"_posts/python/Spider/基础知识/2016-03-29-beautiful-soup4-basic.md","raw":"---\nauthor: ivyxjc\ndate: 2016-03-29\ntitle: BeautifulSoup4入门\ncategory: Python\ntags: [python,spider,bs4]\nkeywords:\ndescription:\n---\n\n## 对象的种类\nBeautifulSoup会将HTML文档抓换成一个树形结构, 每个节点都是Python对象，所有对象可以分为4类：`Tag`,`NavigableString`,`BeautifulSoup`,`Comment`。\n\n\n### Tag\n`Tag`与XML或HTML中的tag相同：\n\n```python3\nsoup = BeautifulSoup('<b class=\"boldest\">Extremely bold</b>')\ntag = soup.b\nprint(type(tag))\nprint(tag)\n\n--<class 'bs4.element.Tag'>\n--<b class=\"boldest\">Extremely bold</b>\n```\n\n#### name\n\n每一个Tag都有自己的name，可以通过`.name`。改变tag的name，将会影响通过当前BS对象生成的HTML文档\n\n```python3\nsoup = BeautifulSoup('<b class=\"boldest\">Extremely bold</b>',\"html.parser\")\ntag = soup.b\nprint(tag)\nprint(tag.name)\ntag.name=\"blockquote\"\nprint(tag)\n\n---<b class=\"boldest\">Extremely bold</b>\n---b\n---<blockquote class=\"boldest\">Extremely bold</blockquote>\n```\n\n#### attributes\n一个tag可能有多个属性\n\n```python3\nsoup = BeautifulSoup('<b class=\"boldest\">Extremely bold</b>',\"html.parser\")\ntag = soup.b\nprint(tag['class'])\nprint(tag.attrs)\n\n---['boldest']\n---{'class': ['boldest']}\n```\n\ntag的属性可以被添加，删除或修改\n\n```python\nsoup = BeautifulSoup('<b class=\"boldest\">Extremely bold</b>',\"html.parser\")\ntag = soup.b\n#更改属性\ntag['class']=\"verybold\"\ntag['id']=1\nprint(tag)\n\n#删除属性\ndel tag['class']\nprint(tag)\nprint(tag.get('class'))\n\n---<b class=\"verybold\" id=\"1\">Extremely bold</b>\n---<b id=\"1\">Extremely bold</b>\n---\n```\n\n##### 多值属性\n多值属性即为可包含多个值的属性，最常见的即为`class`\n`xml`中没有多值属性\n\n多值属性的返回类型是list\n\n```python\ncss_soup = BeautifulSoup('<p class=\"body strikeout\"></p>',\"html.parser\")\nprint(css_soup.p['class'])\n\n---['body', 'strikeout']\n```\n\n若某个属性看起来像多值属性，但是在任何版本HTML中都没有被定义为多值属性，那么BS会将这个属性作为字符串返回\n\n```python\nid_soup = BeautifulSoup('<p id=\"my id\"></p>',\"html.parser\")\nprint(id_soup.p['id'])\n\n---my id\n```\n\n### NavigableString\n\n`NavigableString`不支持`.content`,`.string`,`find()`方法。\n\n如果想在Beautiful Soup之外使用`NavigableString`对象,需要调用`unicode()`方法,将该对象转换成普通的Unicode字符串,否则就算Beautiful Soup已方法已经执行结束,该对象的输出也会带有对象的引用地址.这样会浪费内存.\n\n```python\nsoup = BeautifulSoup('<b class=\"boldest\">Extremely bold</b>',\"html.parser\")\ntag = soup.b\nprint(tag.string)\nprint(type(tag.string))\ntag.string.replace_with(\"No long bold\")\nprint(tag)\n\n---Extremely bold\n---<class 'bs4.element.NavigableString'>\n---<b class=\"boldest\">No long bold</b>\n```\n\n## BeautifulSoup\n\n`BeautifulSoup`对象表示的是一个文档的全部内容.大部分时候,可以把它当作 Tag 对象,它支持 遍历文档树 和 搜索文档树 中描述的大部分的方法.\n\n`BeautifuSoup`没有name和attribute属性。但有一个值为`[document]`的特殊属性`.name`\n\n```python\nsoup = BeautifulSoup('<b class=\"boldest\">Extremely bold</b>',\"html.parser\")\nprint(soup.name)\n\n---[document]\n```\n\n### Comment\n\n## 遍历文档树\n\n```\nhtml_doc = \"\"\"\n<html><head><title>The Dormouse's story</title></head>\n\n<p class=\"title\"><b>The Dormouse's story</b></p>\n\n<p class=\"story\">Once upon a time there were three little sisters; and their names were\n<a href=\"http://example.com/elsie\" class=\"sister\" id=\"link1\">Elsie</a>,\n<a href=\"http://example.com/lacie\" class=\"sister\" id=\"link2\">Lacie</a> and\n<a href=\"http://example.com/tillie\" class=\"sister\" id=\"link3\">Tillie</a>;\nand they lived at the bottom of a well.</p>\n\n<p class=\"story\">...</p>\n\"\"\"\n```\n\n### `.content`和`.children`\ntag的`.contents`属性可以将tag的子节点以列表的方式输出:\n通过tag的`.children`生成器,可以对tag的子节点进行循环:\n\n```python\nprint(soup.title.contents)\nprint(soup.title.contents[0])\n\n---[\"The Dormouse's story\"]\n---The Dormouse's story\n```\n\n```python\nfor i in soup.head.children:\n    print(i)\n\n---<title>The Dormouse's story</title>\n```\n\n### `.descendants`\n\n`.descendants`属性可以对所有tag的子孙节点进行递归循环\n\n```python\nprint(soup.head.contents)\nfor child in soup.head.descendants:\n    print(child)\n\nprint(len(list(soup.children)))\nprint(len(list(soup.descendants)))\n\n---[<title>The Dormouse's story</title>]\n---<title>The Dormouse's story</title>\n---The Dormouse's story\n---2\n---25\n```\n\n### `.string`\n\n如果tag只有一个`NavigableString`类型子节点,那么这个tag可以使用`.string`得到子节点\n\n```python\nprint(soup.head.string)\n\n---The Dormouse's story\n```\n\n### `.strings`和`stripped_strings`\n如果tag中有多个字符串，可以使用`.strings`循环获取\n使用`.stripped_strings`可以去除多余空白内容：\n\n```python\nfor string in soup.stripped_strings:\n    print(repr(string))\n```\n\n### `.parent`和`.parents`\n通过`.parent`属性来获取某个元素的父节点\n通过元素的`.parents`属性可以递归得到元素的所有父辈节点。\n\n```python\nfor parent in soup.a.parents:\n    if parent is None:\n        print(parent)\n    else:\n        print(parent.name)\n\n---p\n---html\n---[document]\n```\n\n### 兄弟节点\n\n#### `.next_sibling`和`.previous_sibling`\n\n使用`。next_sibling`和`.previous_sibling`属性来查询兄弟节点\n\n实际文档中的tag的 .next_sibling 和 .previous_sibling 属性通常是字符串或空白。因为中间可能会隔着一些字符以及标点。\n\n#### `.next_siblings`和`.previous_siblings`\n\n```python3\nfor sibling in soup.a.next_siblings:\n    print(repr(sibling))\n\n---',\\n'\n---<a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>\n---' and\\n'\n---<a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>\n';\\nand they lived at the bottom of a well.'\n```\n\n### 重现解析过程\n\n#### `.next_element`和`.previous_element`\n`next_element`属性指向解析过程中下一个被解析的对象(字符串或tag),结果可能与`.next_sibling`相同,但通常是不一样的.\n\n```python\nlast_a_tag=soup.find(\"a\",id=\"link3\")\nprint(last_a_tag)\nprint(last_a_tag.next_sibling)\nprint(last_a_tag.next_element)\n\n---<a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>\n---;\n---and they lived at the bottom of a well.\n---Tillie\n```\n\n#### `.next_elements`和`.previous_elements`\n\n## 搜索文档树\n\n### 过滤器\n\n#### 字符串\n\n#### 正则表达式\n\n```python\nfor tag in soup.find_all(re.compile(\"^b\")):\n    print(tag.name)\n```\n\n#### 列表\n如果传入列表参数,Beautiful Soup会将与列表中任一元素匹配的内容返回.\n\n#### True\n\nTrue可以匹配任何值,但是不会返回字符串节点\n\n#### 方法\n如果没有合适过滤器,那么还可以定义一个方法,方法只接受一个元素参数,如果这个方法返回True表示当前元素匹配并且被找到,如果不是则反回False。\n\n```python3\ndef has_class_but_no_id(tag):\n    return tag.has_attr('class') and not tag.has_attr('id')\n```\n\n\n### find_all()\n\n#### name参数\n\n#### keyword参数\n\n`soup.find_all(id='link2')`\n\n\n#### 按CSS搜索\n\n因为`class`是python保留字，所以用`class_`\n例：\n`soup.find_all(\"a\",class_=\"sister\")`\n\n`class_`参数同样接受不同类型的过滤器 ,字符串,正则表达式,方法或 True :\n\ntag的`class`属性是 多值属性 .按照CSS类名搜索tag时,可以分别搜索tag中的每个CSS类名:\n\n#### text参数\n通过`text`参数可以搜搜文档中的字符串内容.\n\n#### limit参数\n\n`limit`参数限制返回结果的数量\n\n#### recursive参数\n调用tag的`find_all()`方法时,Beautiful Soup会检索当前tag的所有子孙节点,如果只想搜索tag的直接子节点,可以使用参数 `recursive=False`.\n\n#### 简写\n\n```\nsoup.find_all(\"a\")\nsoup(\"a\")\n```\n\n```\nsoup.title.find_all(text=True)\nsoup.title(text=True)\n```\n\n### find()\n\n只返回一个结果\n\n### `find_parents()`和`find_parent()`\n\n### `find_next_siblings()和`find_next_sibling()`\n\n### `find_all_next()`和`find_next()`\n\n### `find_all_previous()`和`find_previous()`\n\n### CSS选择器\n在Tag或BeautifulSoup对象的`.select()`方法中传入字符串参数,即可使用CSS选择器的语法找到tag:\n","slug":"python/Spider/基础知识/2016-03-29-beautiful-soup4-basic","published":1,"updated":"2016-10-13T06:34:38.582Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f012g0053cwjr5owxs7wr","content":"<h2 id=\"对象的种类\"><a href=\"#对象的种类\" class=\"headerlink\" title=\"对象的种类\"></a>对象的种类</h2><p>BeautifulSoup会将HTML文档抓换成一个树形结构, 每个节点都是Python对象，所有对象可以分为4类：<code>Tag</code>,<code>NavigableString</code>,<code>BeautifulSoup</code>,<code>Comment</code>。</p>\n<h3 id=\"Tag\"><a href=\"#Tag\" class=\"headerlink\" title=\"Tag\"></a>Tag</h3><p><code>Tag</code>与XML或HTML中的tag相同：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">soup = BeautifulSoup(&apos;&lt;b class=&quot;boldest&quot;&gt;Extremely bold&lt;/b&gt;&apos;)</div><div class=\"line\">tag = soup.b</div><div class=\"line\">print(type(tag))</div><div class=\"line\">print(tag)</div><div class=\"line\"></div><div class=\"line\">--&lt;class &apos;bs4.element.Tag&apos;&gt;</div><div class=\"line\">--&lt;b class=&quot;boldest&quot;&gt;Extremely bold&lt;/b&gt;</div></pre></td></tr></table></figure>\n<h4 id=\"name\"><a href=\"#name\" class=\"headerlink\" title=\"name\"></a>name</h4><p>每一个Tag都有自己的name，可以通过<code>.name</code>。改变tag的name，将会影响通过当前BS对象生成的HTML文档</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">soup = BeautifulSoup(&apos;&lt;b class=&quot;boldest&quot;&gt;Extremely bold&lt;/b&gt;&apos;,&quot;html.parser&quot;)</div><div class=\"line\">tag = soup.b</div><div class=\"line\">print(tag)</div><div class=\"line\">print(tag.name)</div><div class=\"line\">tag.name=&quot;blockquote&quot;</div><div class=\"line\">print(tag)</div><div class=\"line\"></div><div class=\"line\">---&lt;b class=&quot;boldest&quot;&gt;Extremely bold&lt;/b&gt;</div><div class=\"line\">---b</div><div class=\"line\">---&lt;blockquote class=&quot;boldest&quot;&gt;Extremely bold&lt;/blockquote&gt;</div></pre></td></tr></table></figure>\n<h4 id=\"attributes\"><a href=\"#attributes\" class=\"headerlink\" title=\"attributes\"></a>attributes</h4><p>一个tag可能有多个属性</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">soup = BeautifulSoup(&apos;&lt;b class=&quot;boldest&quot;&gt;Extremely bold&lt;/b&gt;&apos;,&quot;html.parser&quot;)</div><div class=\"line\">tag = soup.b</div><div class=\"line\">print(tag[&apos;class&apos;])</div><div class=\"line\">print(tag.attrs)</div><div class=\"line\"></div><div class=\"line\">---[&apos;boldest&apos;]</div><div class=\"line\">---&#123;&apos;class&apos;: [&apos;boldest&apos;]&#125;</div></pre></td></tr></table></figure>\n<p>tag的属性可以被添加，删除或修改</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">soup = BeautifulSoup('&lt;b class=\"boldest\"&gt;Extremely bold&lt;/b&gt;',\"html.parser\")</div><div class=\"line\">tag = soup.b</div><div class=\"line\">#更改属性</div><div class=\"line\">tag['class']=\"verybold\"</div><div class=\"line\">tag['id']=1</div><div class=\"line\">print(tag)</div><div class=\"line\"></div><div class=\"line\">#删除属性</div><div class=\"line\">del tag['class']</div><div class=\"line\">print(tag)</div><div class=\"line\">print(tag.get('class'))</div><div class=\"line\"></div><div class=\"line\">---&lt;b class=\"verybold\" id=\"1\"&gt;Extremely bold&lt;/b&gt;</div><div class=\"line\">---&lt;b id=\"1\"&gt;Extremely bold&lt;/b&gt;</div><div class=\"line\">---</div></pre></td></tr></table></figure>\n<h5 id=\"多值属性\"><a href=\"#多值属性\" class=\"headerlink\" title=\"多值属性\"></a>多值属性</h5><p>多值属性即为可包含多个值的属性，最常见的即为<code>class</code><br><code>xml</code>中没有多值属性</p>\n<p>多值属性的返回类型是list</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">css_soup = BeautifulSoup(<span class=\"string\">'&lt;p class=\"body strikeout\"&gt;&lt;/p&gt;'</span>,<span class=\"string\">\"html.parser\"</span>)</div><div class=\"line\">print(css_soup.p[<span class=\"string\">'class'</span>])</div><div class=\"line\"></div><div class=\"line\">---[<span class=\"string\">'body'</span>, <span class=\"string\">'strikeout'</span>]</div></pre></td></tr></table></figure>\n<p>若某个属性看起来像多值属性，但是在任何版本HTML中都没有被定义为多值属性，那么BS会将这个属性作为字符串返回</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">id_soup = BeautifulSoup(<span class=\"string\">'&lt;p id=\"my id\"&gt;&lt;/p&gt;'</span>,<span class=\"string\">\"html.parser\"</span>)</div><div class=\"line\">print(id_soup.p[<span class=\"string\">'id'</span>])</div><div class=\"line\"></div><div class=\"line\">---my id</div></pre></td></tr></table></figure>\n<h3 id=\"NavigableString\"><a href=\"#NavigableString\" class=\"headerlink\" title=\"NavigableString\"></a>NavigableString</h3><p><code>NavigableString</code>不支持<code>.content</code>,<code>.string</code>,<code>find()</code>方法。</p>\n<p>如果想在Beautiful Soup之外使用<code>NavigableString</code>对象,需要调用<code>unicode()</code>方法,将该对象转换成普通的Unicode字符串,否则就算Beautiful Soup已方法已经执行结束,该对象的输出也会带有对象的引用地址.这样会浪费内存.</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">soup = BeautifulSoup('&lt;b class=\"boldest\"&gt;Extremely bold&lt;/b&gt;',\"html.parser\")</div><div class=\"line\">tag = soup.b</div><div class=\"line\">print(tag.string)</div><div class=\"line\">print(type(tag.string))</div><div class=\"line\">tag.string.replace_with(\"No long bold\")</div><div class=\"line\">print(tag)</div><div class=\"line\"></div><div class=\"line\">---Extremely bold</div><div class=\"line\">---&lt;class 'bs4.element.NavigableString'&gt;</div><div class=\"line\">---&lt;b class=\"boldest\"&gt;No long bold&lt;/b&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"BeautifulSoup\"><a href=\"#BeautifulSoup\" class=\"headerlink\" title=\"BeautifulSoup\"></a>BeautifulSoup</h2><p><code>BeautifulSoup</code>对象表示的是一个文档的全部内容.大部分时候,可以把它当作 Tag 对象,它支持 遍历文档树 和 搜索文档树 中描述的大部分的方法.</p>\n<p><code>BeautifuSoup</code>没有name和attribute属性。但有一个值为<code>[document]</code>的特殊属性<code>.name</code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">soup = BeautifulSoup(<span class=\"string\">'&lt;b class=\"boldest\"&gt;Extremely bold&lt;/b&gt;'</span>,<span class=\"string\">\"html.parser\"</span>)</div><div class=\"line\">print(soup.name)</div><div class=\"line\"></div><div class=\"line\">---[document]</div></pre></td></tr></table></figure>\n<h3 id=\"Comment\"><a href=\"#Comment\" class=\"headerlink\" title=\"Comment\"></a>Comment</h3><h2 id=\"遍历文档树\"><a href=\"#遍历文档树\" class=\"headerlink\" title=\"遍历文档树\"></a>遍历文档树</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">html_doc = \"\"\"</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>The Dormouse's story<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"title\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">b</span>&gt;</span>The Dormouse's story<span class=\"tag\">&lt;/<span class=\"name\">b</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"story\"</span>&gt;</span>Once upon a time there were three little sisters; and their names were</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://example.com/elsie\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"sister\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"link1\"</span>&gt;</span>Elsie<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>,</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://example.com/lacie\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"sister\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"link2\"</span>&gt;</span>Lacie<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> and</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://example.com/tillie\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"sister\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"link3\"</span>&gt;</span>Tillie<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>;</div><div class=\"line\">and they lived at the bottom of a well.<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"story\"</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">\"\"\"</div></pre></td></tr></table></figure>\n<h3 id=\"content和-children\"><a href=\"#content和-children\" class=\"headerlink\" title=\".content和.children\"></a><code>.content</code>和<code>.children</code></h3><p>tag的<code>.contents</code>属性可以将tag的子节点以列表的方式输出:<br>通过tag的<code>.children</code>生成器,可以对tag的子节点进行循环:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">print(soup.title.contents)</div><div class=\"line\">print(soup.title.contents[<span class=\"number\">0</span>])</div><div class=\"line\"></div><div class=\"line\">---[<span class=\"string\">\"The Dormouse's story\"</span>]</div><div class=\"line\">---The Dormouse<span class=\"string\">'s story</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> soup.head.children:</div><div class=\"line\">    print(i)</div><div class=\"line\"></div><div class=\"line\">---&lt;title&gt;The Dormouse<span class=\"string\">'s story&lt;/title&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"descendants\"><a href=\"#descendants\" class=\"headerlink\" title=\".descendants\"></a><code>.descendants</code></h3><p><code>.descendants</code>属性可以对所有tag的子孙节点进行递归循环</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">print(soup.head.contents)</div><div class=\"line\">for child in soup.head.descendants:</div><div class=\"line\">    print(child)</div><div class=\"line\"></div><div class=\"line\">print(len(list(soup.children)))</div><div class=\"line\">print(len(list(soup.descendants)))</div><div class=\"line\"></div><div class=\"line\">---[&lt;title&gt;The Dormouse's story&lt;/title&gt;]</div><div class=\"line\">---&lt;title&gt;The Dormouse's story&lt;/title&gt;</div><div class=\"line\">---The Dormouse's story</div><div class=\"line\">---2</div><div class=\"line\">---25</div></pre></td></tr></table></figure>\n<h3 id=\"string\"><a href=\"#string\" class=\"headerlink\" title=\".string\"></a><code>.string</code></h3><p>如果tag只有一个<code>NavigableString</code>类型子节点,那么这个tag可以使用<code>.string</code>得到子节点</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">print(soup.head.string)</div><div class=\"line\"></div><div class=\"line\">---The Dormouse<span class=\"string\">'s story</span></div></pre></td></tr></table></figure>\n<h3 id=\"strings和stripped-strings\"><a href=\"#strings和stripped-strings\" class=\"headerlink\" title=\".strings和stripped_strings\"></a><code>.strings</code>和<code>stripped_strings</code></h3><p>如果tag中有多个字符串，可以使用<code>.strings</code>循环获取<br>使用<code>.stripped_strings</code>可以去除多余空白内容：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> string <span class=\"keyword\">in</span> soup.stripped_strings:</div><div class=\"line\">    print(repr(string))</div></pre></td></tr></table></figure>\n<h3 id=\"parent和-parents\"><a href=\"#parent和-parents\" class=\"headerlink\" title=\".parent和.parents\"></a><code>.parent</code>和<code>.parents</code></h3><p>通过<code>.parent</code>属性来获取某个元素的父节点<br>通过元素的<code>.parents</code>属性可以递归得到元素的所有父辈节点。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> parent <span class=\"keyword\">in</span> soup.a.parents:</div><div class=\"line\">    <span class=\"keyword\">if</span> parent <span class=\"keyword\">is</span> <span class=\"keyword\">None</span>:</div><div class=\"line\">        print(parent)</div><div class=\"line\">    <span class=\"keyword\">else</span>:</div><div class=\"line\">        print(parent.name)</div><div class=\"line\"></div><div class=\"line\">---p</div><div class=\"line\">---html</div><div class=\"line\">---[document]</div></pre></td></tr></table></figure>\n<h3 id=\"兄弟节点\"><a href=\"#兄弟节点\" class=\"headerlink\" title=\"兄弟节点\"></a>兄弟节点</h3><h4 id=\"next-sibling和-previous-sibling\"><a href=\"#next-sibling和-previous-sibling\" class=\"headerlink\" title=\".next_sibling和.previous_sibling\"></a><code>.next_sibling</code>和<code>.previous_sibling</code></h4><p>使用<code>。next_sibling</code>和<code>.previous_sibling</code>属性来查询兄弟节点</p>\n<p>实际文档中的tag的 .next_sibling 和 .previous_sibling 属性通常是字符串或空白。因为中间可能会隔着一些字符以及标点。</p>\n<h4 id=\"next-siblings和-previous-siblings\"><a href=\"#next-siblings和-previous-siblings\" class=\"headerlink\" title=\".next_siblings和.previous_siblings\"></a><code>.next_siblings</code>和<code>.previous_siblings</code></h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">for sibling in soup.a.next_siblings:</div><div class=\"line\">    print(repr(sibling))</div><div class=\"line\"></div><div class=\"line\">---&apos;,\\n&apos;</div><div class=\"line\">---&lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;</div><div class=\"line\">---&apos; and\\n&apos;</div><div class=\"line\">---&lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;</div><div class=\"line\">&apos;;\\nand they lived at the bottom of a well.&apos;</div></pre></td></tr></table></figure>\n<h3 id=\"重现解析过程\"><a href=\"#重现解析过程\" class=\"headerlink\" title=\"重现解析过程\"></a>重现解析过程</h3><h4 id=\"next-element和-previous-element\"><a href=\"#next-element和-previous-element\" class=\"headerlink\" title=\".next_element和.previous_element\"></a><code>.next_element</code>和<code>.previous_element</code></h4><p><code>next_element</code>属性指向解析过程中下一个被解析的对象(字符串或tag),结果可能与<code>.next_sibling</code>相同,但通常是不一样的.</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">last_a_tag=soup.find(\"a\",id=\"link3\")</div><div class=\"line\">print(last_a_tag)</div><div class=\"line\">print(last_a_tag.next_sibling)</div><div class=\"line\">print(last_a_tag.next_element)</div><div class=\"line\"></div><div class=\"line\">---&lt;a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\"&gt;Tillie&lt;/a&gt;</div><div class=\"line\">---;</div><div class=\"line\">---and they lived at the bottom of a well.</div><div class=\"line\">---Tillie</div></pre></td></tr></table></figure>\n<h4 id=\"next-elements和-previous-elements\"><a href=\"#next-elements和-previous-elements\" class=\"headerlink\" title=\".next_elements和.previous_elements\"></a><code>.next_elements</code>和<code>.previous_elements</code></h4><h2 id=\"搜索文档树\"><a href=\"#搜索文档树\" class=\"headerlink\" title=\"搜索文档树\"></a>搜索文档树</h2><h3 id=\"过滤器\"><a href=\"#过滤器\" class=\"headerlink\" title=\"过滤器\"></a>过滤器</h3><h4 id=\"字符串\"><a href=\"#字符串\" class=\"headerlink\" title=\"字符串\"></a>字符串</h4><h4 id=\"正则表达式\"><a href=\"#正则表达式\" class=\"headerlink\" title=\"正则表达式\"></a>正则表达式</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> tag <span class=\"keyword\">in</span> soup.find_all(re.compile(<span class=\"string\">\"^b\"</span>)):</div><div class=\"line\">    print(tag.name)</div></pre></td></tr></table></figure>\n<h4 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h4><p>如果传入列表参数,Beautiful Soup会将与列表中任一元素匹配的内容返回.</p>\n<h4 id=\"True\"><a href=\"#True\" class=\"headerlink\" title=\"True\"></a>True</h4><p>True可以匹配任何值,但是不会返回字符串节点</p>\n<h4 id=\"方法\"><a href=\"#方法\" class=\"headerlink\" title=\"方法\"></a>方法</h4><p>如果没有合适过滤器,那么还可以定义一个方法,方法只接受一个元素参数,如果这个方法返回True表示当前元素匹配并且被找到,如果不是则反回False。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">def has_class_but_no_id(tag):</div><div class=\"line\">    return tag.has_attr(&apos;class&apos;) and not tag.has_attr(&apos;id&apos;)</div></pre></td></tr></table></figure>\n<h3 id=\"find-all\"><a href=\"#find-all\" class=\"headerlink\" title=\"find_all()\"></a>find_all()</h3><h4 id=\"name参数\"><a href=\"#name参数\" class=\"headerlink\" title=\"name参数\"></a>name参数</h4><h4 id=\"keyword参数\"><a href=\"#keyword参数\" class=\"headerlink\" title=\"keyword参数\"></a>keyword参数</h4><p><code>soup.find_all(id=&#39;link2&#39;)</code></p>\n<h4 id=\"按CSS搜索\"><a href=\"#按CSS搜索\" class=\"headerlink\" title=\"按CSS搜索\"></a>按CSS搜索</h4><p>因为<code>class</code>是python保留字，所以用<code>class_</code><br>例：<br><code>soup.find_all(&quot;a&quot;,class_=&quot;sister&quot;)</code></p>\n<p><code>class_</code>参数同样接受不同类型的过滤器 ,字符串,正则表达式,方法或 True :</p>\n<p>tag的<code>class</code>属性是 多值属性 .按照CSS类名搜索tag时,可以分别搜索tag中的每个CSS类名:</p>\n<h4 id=\"text参数\"><a href=\"#text参数\" class=\"headerlink\" title=\"text参数\"></a>text参数</h4><p>通过<code>text</code>参数可以搜搜文档中的字符串内容.</p>\n<h4 id=\"limit参数\"><a href=\"#limit参数\" class=\"headerlink\" title=\"limit参数\"></a>limit参数</h4><p><code>limit</code>参数限制返回结果的数量</p>\n<h4 id=\"recursive参数\"><a href=\"#recursive参数\" class=\"headerlink\" title=\"recursive参数\"></a>recursive参数</h4><p>调用tag的<code>find_all()</code>方法时,Beautiful Soup会检索当前tag的所有子孙节点,如果只想搜索tag的直接子节点,可以使用参数 <code>recursive=False</code>.</p>\n<h4 id=\"简写\"><a href=\"#简写\" class=\"headerlink\" title=\"简写\"></a>简写</h4><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">soup.find_all(<span class=\"string\">\"a\"</span>)</div><div class=\"line\"><span class=\"function\"><span class=\"title\">soup</span><span class=\"params\">(<span class=\"string\">\"a\"</span>)</span></span></div></pre></td></tr></table></figure>\n<figure class=\"highlight sqf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">soup.title.find_all(<span class=\"built_in\">text</span>=<span class=\"literal\">True</span>)</div><div class=\"line\">soup.title(<span class=\"built_in\">text</span>=<span class=\"literal\">True</span>)</div></pre></td></tr></table></figure>\n<h3 id=\"find\"><a href=\"#find\" class=\"headerlink\" title=\"find()\"></a>find()</h3><p>只返回一个结果</p>\n<h3 id=\"find-parents-和find-parent\"><a href=\"#find-parents-和find-parent\" class=\"headerlink\" title=\"find_parents()和find_parent()\"></a><code>find_parents()</code>和<code>find_parent()</code></h3><h3 id=\"find-next-siblings-和find-next-sibling\"><a href=\"#find-next-siblings-和find-next-sibling\" class=\"headerlink\" title=\"find_next_siblings()和find_next_sibling()`\"></a><code>find_next_siblings()和</code>find_next_sibling()`</h3><h3 id=\"find-all-next-和find-next\"><a href=\"#find-all-next-和find-next\" class=\"headerlink\" title=\"find_all_next()和find_next()\"></a><code>find_all_next()</code>和<code>find_next()</code></h3><h3 id=\"find-all-previous-和find-previous\"><a href=\"#find-all-previous-和find-previous\" class=\"headerlink\" title=\"find_all_previous()和find_previous()\"></a><code>find_all_previous()</code>和<code>find_previous()</code></h3><h3 id=\"CSS选择器\"><a href=\"#CSS选择器\" class=\"headerlink\" title=\"CSS选择器\"></a>CSS选择器</h3><p>在Tag或BeautifulSoup对象的<code>.select()</code>方法中传入字符串参数,即可使用CSS选择器的语法找到tag:</p>\n","excerpt":"","more":"<h2 id=\"对象的种类\"><a href=\"#对象的种类\" class=\"headerlink\" title=\"对象的种类\"></a>对象的种类</h2><p>BeautifulSoup会将HTML文档抓换成一个树形结构, 每个节点都是Python对象，所有对象可以分为4类：<code>Tag</code>,<code>NavigableString</code>,<code>BeautifulSoup</code>,<code>Comment</code>。</p>\n<h3 id=\"Tag\"><a href=\"#Tag\" class=\"headerlink\" title=\"Tag\"></a>Tag</h3><p><code>Tag</code>与XML或HTML中的tag相同：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">soup = BeautifulSoup(&apos;&lt;b class=&quot;boldest&quot;&gt;Extremely bold&lt;/b&gt;&apos;)</div><div class=\"line\">tag = soup.b</div><div class=\"line\">print(type(tag))</div><div class=\"line\">print(tag)</div><div class=\"line\"></div><div class=\"line\">--&lt;class &apos;bs4.element.Tag&apos;&gt;</div><div class=\"line\">--&lt;b class=&quot;boldest&quot;&gt;Extremely bold&lt;/b&gt;</div></pre></td></tr></table></figure>\n<h4 id=\"name\"><a href=\"#name\" class=\"headerlink\" title=\"name\"></a>name</h4><p>每一个Tag都有自己的name，可以通过<code>.name</code>。改变tag的name，将会影响通过当前BS对象生成的HTML文档</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">soup = BeautifulSoup(&apos;&lt;b class=&quot;boldest&quot;&gt;Extremely bold&lt;/b&gt;&apos;,&quot;html.parser&quot;)</div><div class=\"line\">tag = soup.b</div><div class=\"line\">print(tag)</div><div class=\"line\">print(tag.name)</div><div class=\"line\">tag.name=&quot;blockquote&quot;</div><div class=\"line\">print(tag)</div><div class=\"line\"></div><div class=\"line\">---&lt;b class=&quot;boldest&quot;&gt;Extremely bold&lt;/b&gt;</div><div class=\"line\">---b</div><div class=\"line\">---&lt;blockquote class=&quot;boldest&quot;&gt;Extremely bold&lt;/blockquote&gt;</div></pre></td></tr></table></figure>\n<h4 id=\"attributes\"><a href=\"#attributes\" class=\"headerlink\" title=\"attributes\"></a>attributes</h4><p>一个tag可能有多个属性</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">soup = BeautifulSoup(&apos;&lt;b class=&quot;boldest&quot;&gt;Extremely bold&lt;/b&gt;&apos;,&quot;html.parser&quot;)</div><div class=\"line\">tag = soup.b</div><div class=\"line\">print(tag[&apos;class&apos;])</div><div class=\"line\">print(tag.attrs)</div><div class=\"line\"></div><div class=\"line\">---[&apos;boldest&apos;]</div><div class=\"line\">---&#123;&apos;class&apos;: [&apos;boldest&apos;]&#125;</div></pre></td></tr></table></figure>\n<p>tag的属性可以被添加，删除或修改</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">soup = BeautifulSoup('&lt;b class=\"boldest\"&gt;Extremely bold&lt;/b&gt;',\"html.parser\")</div><div class=\"line\">tag = soup.b</div><div class=\"line\">#更改属性</div><div class=\"line\">tag['class']=\"verybold\"</div><div class=\"line\">tag['id']=1</div><div class=\"line\">print(tag)</div><div class=\"line\"></div><div class=\"line\">#删除属性</div><div class=\"line\">del tag['class']</div><div class=\"line\">print(tag)</div><div class=\"line\">print(tag.get('class'))</div><div class=\"line\"></div><div class=\"line\">---&lt;b class=\"verybold\" id=\"1\"&gt;Extremely bold&lt;/b&gt;</div><div class=\"line\">---&lt;b id=\"1\"&gt;Extremely bold&lt;/b&gt;</div><div class=\"line\">---</div></pre></td></tr></table></figure>\n<h5 id=\"多值属性\"><a href=\"#多值属性\" class=\"headerlink\" title=\"多值属性\"></a>多值属性</h5><p>多值属性即为可包含多个值的属性，最常见的即为<code>class</code><br><code>xml</code>中没有多值属性</p>\n<p>多值属性的返回类型是list</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">css_soup = BeautifulSoup(<span class=\"string\">'&lt;p class=\"body strikeout\"&gt;&lt;/p&gt;'</span>,<span class=\"string\">\"html.parser\"</span>)</div><div class=\"line\">print(css_soup.p[<span class=\"string\">'class'</span>])</div><div class=\"line\"></div><div class=\"line\">---[<span class=\"string\">'body'</span>, <span class=\"string\">'strikeout'</span>]</div></pre></td></tr></table></figure>\n<p>若某个属性看起来像多值属性，但是在任何版本HTML中都没有被定义为多值属性，那么BS会将这个属性作为字符串返回</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">id_soup = BeautifulSoup(<span class=\"string\">'&lt;p id=\"my id\"&gt;&lt;/p&gt;'</span>,<span class=\"string\">\"html.parser\"</span>)</div><div class=\"line\">print(id_soup.p[<span class=\"string\">'id'</span>])</div><div class=\"line\"></div><div class=\"line\">---my id</div></pre></td></tr></table></figure>\n<h3 id=\"NavigableString\"><a href=\"#NavigableString\" class=\"headerlink\" title=\"NavigableString\"></a>NavigableString</h3><p><code>NavigableString</code>不支持<code>.content</code>,<code>.string</code>,<code>find()</code>方法。</p>\n<p>如果想在Beautiful Soup之外使用<code>NavigableString</code>对象,需要调用<code>unicode()</code>方法,将该对象转换成普通的Unicode字符串,否则就算Beautiful Soup已方法已经执行结束,该对象的输出也会带有对象的引用地址.这样会浪费内存.</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">soup = BeautifulSoup('&lt;b class=\"boldest\"&gt;Extremely bold&lt;/b&gt;',\"html.parser\")</div><div class=\"line\">tag = soup.b</div><div class=\"line\">print(tag.string)</div><div class=\"line\">print(type(tag.string))</div><div class=\"line\">tag.string.replace_with(\"No long bold\")</div><div class=\"line\">print(tag)</div><div class=\"line\"></div><div class=\"line\">---Extremely bold</div><div class=\"line\">---&lt;class 'bs4.element.NavigableString'&gt;</div><div class=\"line\">---&lt;b class=\"boldest\"&gt;No long bold&lt;/b&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"BeautifulSoup\"><a href=\"#BeautifulSoup\" class=\"headerlink\" title=\"BeautifulSoup\"></a>BeautifulSoup</h2><p><code>BeautifulSoup</code>对象表示的是一个文档的全部内容.大部分时候,可以把它当作 Tag 对象,它支持 遍历文档树 和 搜索文档树 中描述的大部分的方法.</p>\n<p><code>BeautifuSoup</code>没有name和attribute属性。但有一个值为<code>[document]</code>的特殊属性<code>.name</code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">soup = BeautifulSoup(<span class=\"string\">'&lt;b class=\"boldest\"&gt;Extremely bold&lt;/b&gt;'</span>,<span class=\"string\">\"html.parser\"</span>)</div><div class=\"line\">print(soup.name)</div><div class=\"line\"></div><div class=\"line\">---[document]</div></pre></td></tr></table></figure>\n<h3 id=\"Comment\"><a href=\"#Comment\" class=\"headerlink\" title=\"Comment\"></a>Comment</h3><h2 id=\"遍历文档树\"><a href=\"#遍历文档树\" class=\"headerlink\" title=\"遍历文档树\"></a>遍历文档树</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">html_doc = \"\"\"</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>The Dormouse's story<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"title\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">b</span>&gt;</span>The Dormouse's story<span class=\"tag\">&lt;/<span class=\"name\">b</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"story\"</span>&gt;</span>Once upon a time there were three little sisters; and their names were</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://example.com/elsie\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"sister\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"link1\"</span>&gt;</span>Elsie<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>,</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://example.com/lacie\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"sister\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"link2\"</span>&gt;</span>Lacie<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> and</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://example.com/tillie\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"sister\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"link3\"</span>&gt;</span>Tillie<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>;</div><div class=\"line\">and they lived at the bottom of a well.<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"story\"</span>&gt;</span>...<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">\"\"\"</div></pre></td></tr></table></figure>\n<h3 id=\"content和-children\"><a href=\"#content和-children\" class=\"headerlink\" title=\".content和.children\"></a><code>.content</code>和<code>.children</code></h3><p>tag的<code>.contents</code>属性可以将tag的子节点以列表的方式输出:<br>通过tag的<code>.children</code>生成器,可以对tag的子节点进行循环:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">print(soup.title.contents)</div><div class=\"line\">print(soup.title.contents[<span class=\"number\">0</span>])</div><div class=\"line\"></div><div class=\"line\">---[<span class=\"string\">\"The Dormouse's story\"</span>]</div><div class=\"line\">---The Dormouse<span class=\"string\">'s story</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> soup.head.children:</div><div class=\"line\">    print(i)</div><div class=\"line\"></div><div class=\"line\">---&lt;title&gt;The Dormouse<span class=\"string\">'s story&lt;/title&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"descendants\"><a href=\"#descendants\" class=\"headerlink\" title=\".descendants\"></a><code>.descendants</code></h3><p><code>.descendants</code>属性可以对所有tag的子孙节点进行递归循环</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">print(soup.head.contents)</div><div class=\"line\">for child in soup.head.descendants:</div><div class=\"line\">    print(child)</div><div class=\"line\"></div><div class=\"line\">print(len(list(soup.children)))</div><div class=\"line\">print(len(list(soup.descendants)))</div><div class=\"line\"></div><div class=\"line\">---[&lt;title&gt;The Dormouse's story&lt;/title&gt;]</div><div class=\"line\">---&lt;title&gt;The Dormouse's story&lt;/title&gt;</div><div class=\"line\">---The Dormouse's story</div><div class=\"line\">---2</div><div class=\"line\">---25</div></pre></td></tr></table></figure>\n<h3 id=\"string\"><a href=\"#string\" class=\"headerlink\" title=\".string\"></a><code>.string</code></h3><p>如果tag只有一个<code>NavigableString</code>类型子节点,那么这个tag可以使用<code>.string</code>得到子节点</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">print(soup.head.string)</div><div class=\"line\"></div><div class=\"line\">---The Dormouse<span class=\"string\">'s story</span></div></pre></td></tr></table></figure>\n<h3 id=\"strings和stripped-strings\"><a href=\"#strings和stripped-strings\" class=\"headerlink\" title=\".strings和stripped_strings\"></a><code>.strings</code>和<code>stripped_strings</code></h3><p>如果tag中有多个字符串，可以使用<code>.strings</code>循环获取<br>使用<code>.stripped_strings</code>可以去除多余空白内容：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> string <span class=\"keyword\">in</span> soup.stripped_strings:</div><div class=\"line\">    print(repr(string))</div></pre></td></tr></table></figure>\n<h3 id=\"parent和-parents\"><a href=\"#parent和-parents\" class=\"headerlink\" title=\".parent和.parents\"></a><code>.parent</code>和<code>.parents</code></h3><p>通过<code>.parent</code>属性来获取某个元素的父节点<br>通过元素的<code>.parents</code>属性可以递归得到元素的所有父辈节点。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> parent <span class=\"keyword\">in</span> soup.a.parents:</div><div class=\"line\">    <span class=\"keyword\">if</span> parent <span class=\"keyword\">is</span> <span class=\"keyword\">None</span>:</div><div class=\"line\">        print(parent)</div><div class=\"line\">    <span class=\"keyword\">else</span>:</div><div class=\"line\">        print(parent.name)</div><div class=\"line\"></div><div class=\"line\">---p</div><div class=\"line\">---html</div><div class=\"line\">---[document]</div></pre></td></tr></table></figure>\n<h3 id=\"兄弟节点\"><a href=\"#兄弟节点\" class=\"headerlink\" title=\"兄弟节点\"></a>兄弟节点</h3><h4 id=\"next-sibling和-previous-sibling\"><a href=\"#next-sibling和-previous-sibling\" class=\"headerlink\" title=\".next_sibling和.previous_sibling\"></a><code>.next_sibling</code>和<code>.previous_sibling</code></h4><p>使用<code>。next_sibling</code>和<code>.previous_sibling</code>属性来查询兄弟节点</p>\n<p>实际文档中的tag的 .next_sibling 和 .previous_sibling 属性通常是字符串或空白。因为中间可能会隔着一些字符以及标点。</p>\n<h4 id=\"next-siblings和-previous-siblings\"><a href=\"#next-siblings和-previous-siblings\" class=\"headerlink\" title=\".next_siblings和.previous_siblings\"></a><code>.next_siblings</code>和<code>.previous_siblings</code></h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">for sibling in soup.a.next_siblings:</div><div class=\"line\">    print(repr(sibling))</div><div class=\"line\"></div><div class=\"line\">---&apos;,\\n&apos;</div><div class=\"line\">---&lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;</div><div class=\"line\">---&apos; and\\n&apos;</div><div class=\"line\">---&lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;</div><div class=\"line\">&apos;;\\nand they lived at the bottom of a well.&apos;</div></pre></td></tr></table></figure>\n<h3 id=\"重现解析过程\"><a href=\"#重现解析过程\" class=\"headerlink\" title=\"重现解析过程\"></a>重现解析过程</h3><h4 id=\"next-element和-previous-element\"><a href=\"#next-element和-previous-element\" class=\"headerlink\" title=\".next_element和.previous_element\"></a><code>.next_element</code>和<code>.previous_element</code></h4><p><code>next_element</code>属性指向解析过程中下一个被解析的对象(字符串或tag),结果可能与<code>.next_sibling</code>相同,但通常是不一样的.</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">last_a_tag=soup.find(\"a\",id=\"link3\")</div><div class=\"line\">print(last_a_tag)</div><div class=\"line\">print(last_a_tag.next_sibling)</div><div class=\"line\">print(last_a_tag.next_element)</div><div class=\"line\"></div><div class=\"line\">---&lt;a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\"&gt;Tillie&lt;/a&gt;</div><div class=\"line\">---;</div><div class=\"line\">---and they lived at the bottom of a well.</div><div class=\"line\">---Tillie</div></pre></td></tr></table></figure>\n<h4 id=\"next-elements和-previous-elements\"><a href=\"#next-elements和-previous-elements\" class=\"headerlink\" title=\".next_elements和.previous_elements\"></a><code>.next_elements</code>和<code>.previous_elements</code></h4><h2 id=\"搜索文档树\"><a href=\"#搜索文档树\" class=\"headerlink\" title=\"搜索文档树\"></a>搜索文档树</h2><h3 id=\"过滤器\"><a href=\"#过滤器\" class=\"headerlink\" title=\"过滤器\"></a>过滤器</h3><h4 id=\"字符串\"><a href=\"#字符串\" class=\"headerlink\" title=\"字符串\"></a>字符串</h4><h4 id=\"正则表达式\"><a href=\"#正则表达式\" class=\"headerlink\" title=\"正则表达式\"></a>正则表达式</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> tag <span class=\"keyword\">in</span> soup.find_all(re.compile(<span class=\"string\">\"^b\"</span>)):</div><div class=\"line\">    print(tag.name)</div></pre></td></tr></table></figure>\n<h4 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h4><p>如果传入列表参数,Beautiful Soup会将与列表中任一元素匹配的内容返回.</p>\n<h4 id=\"True\"><a href=\"#True\" class=\"headerlink\" title=\"True\"></a>True</h4><p>True可以匹配任何值,但是不会返回字符串节点</p>\n<h4 id=\"方法\"><a href=\"#方法\" class=\"headerlink\" title=\"方法\"></a>方法</h4><p>如果没有合适过滤器,那么还可以定义一个方法,方法只接受一个元素参数,如果这个方法返回True表示当前元素匹配并且被找到,如果不是则反回False。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">def has_class_but_no_id(tag):</div><div class=\"line\">    return tag.has_attr(&apos;class&apos;) and not tag.has_attr(&apos;id&apos;)</div></pre></td></tr></table></figure>\n<h3 id=\"find-all\"><a href=\"#find-all\" class=\"headerlink\" title=\"find_all()\"></a>find_all()</h3><h4 id=\"name参数\"><a href=\"#name参数\" class=\"headerlink\" title=\"name参数\"></a>name参数</h4><h4 id=\"keyword参数\"><a href=\"#keyword参数\" class=\"headerlink\" title=\"keyword参数\"></a>keyword参数</h4><p><code>soup.find_all(id=&#39;link2&#39;)</code></p>\n<h4 id=\"按CSS搜索\"><a href=\"#按CSS搜索\" class=\"headerlink\" title=\"按CSS搜索\"></a>按CSS搜索</h4><p>因为<code>class</code>是python保留字，所以用<code>class_</code><br>例：<br><code>soup.find_all(&quot;a&quot;,class_=&quot;sister&quot;)</code></p>\n<p><code>class_</code>参数同样接受不同类型的过滤器 ,字符串,正则表达式,方法或 True :</p>\n<p>tag的<code>class</code>属性是 多值属性 .按照CSS类名搜索tag时,可以分别搜索tag中的每个CSS类名:</p>\n<h4 id=\"text参数\"><a href=\"#text参数\" class=\"headerlink\" title=\"text参数\"></a>text参数</h4><p>通过<code>text</code>参数可以搜搜文档中的字符串内容.</p>\n<h4 id=\"limit参数\"><a href=\"#limit参数\" class=\"headerlink\" title=\"limit参数\"></a>limit参数</h4><p><code>limit</code>参数限制返回结果的数量</p>\n<h4 id=\"recursive参数\"><a href=\"#recursive参数\" class=\"headerlink\" title=\"recursive参数\"></a>recursive参数</h4><p>调用tag的<code>find_all()</code>方法时,Beautiful Soup会检索当前tag的所有子孙节点,如果只想搜索tag的直接子节点,可以使用参数 <code>recursive=False</code>.</p>\n<h4 id=\"简写\"><a href=\"#简写\" class=\"headerlink\" title=\"简写\"></a>简写</h4><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">soup.find_all(<span class=\"string\">\"a\"</span>)</div><div class=\"line\"><span class=\"function\"><span class=\"title\">soup</span><span class=\"params\">(<span class=\"string\">\"a\"</span>)</span></span></div></pre></td></tr></table></figure>\n<figure class=\"highlight sqf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">soup.title.find_all(<span class=\"built_in\">text</span>=<span class=\"literal\">True</span>)</div><div class=\"line\">soup.title(<span class=\"built_in\">text</span>=<span class=\"literal\">True</span>)</div></pre></td></tr></table></figure>\n<h3 id=\"find\"><a href=\"#find\" class=\"headerlink\" title=\"find()\"></a>find()</h3><p>只返回一个结果</p>\n<h3 id=\"find-parents-和find-parent\"><a href=\"#find-parents-和find-parent\" class=\"headerlink\" title=\"find_parents()和find_parent()\"></a><code>find_parents()</code>和<code>find_parent()</code></h3><h3 id=\"find-next-siblings-和find-next-sibling\"><a href=\"#find-next-siblings-和find-next-sibling\" class=\"headerlink\" title=\"find_next_siblings()和find_next_sibling()`\"></a><code>find_next_siblings()和</code>find_next_sibling()`</h3><h3 id=\"find-all-next-和find-next\"><a href=\"#find-all-next-和find-next\" class=\"headerlink\" title=\"find_all_next()和find_next()\"></a><code>find_all_next()</code>和<code>find_next()</code></h3><h3 id=\"find-all-previous-和find-previous\"><a href=\"#find-all-previous-和find-previous\" class=\"headerlink\" title=\"find_all_previous()和find_previous()\"></a><code>find_all_previous()</code>和<code>find_previous()</code></h3><h3 id=\"CSS选择器\"><a href=\"#CSS选择器\" class=\"headerlink\" title=\"CSS选择器\"></a>CSS选择器</h3><p>在Tag或BeautifulSoup对象的<code>.select()</code>方法中传入字符串参数,即可使用CSS选择器的语法找到tag:</p>\n"},{"author":"ivyxjc","date":"2016-03-30T16:00:00.000Z","title":"BeautifulSoup4入门","keywords":null,"description":null,"_content":"\n## creating a project\n\nrun `scrapy startproject tutorial`\n\n```\n---scrapy.cfg\n---tutorial/\n-------__init__.py\n-------items.py\n-------pipelines.py\n-------settring.py\n-------spiders/\n-----------__init__.py\n```\n\n## items.py\n\n`Items` are containers that will be loaded with the scraped data;like simple python dicts.\n\n\n```python\nclass DmozItem(scrapy.Item):\n    title = scrapy.Field()\n    link = scrapy.Field()\n    desc = scrapy.Field()\n```\n\n## 第一个spider\n\n四个步骤：\n 1.创建一个Scrapy项目\n 2.定义Item容器\n 3.编写爬虫\n 4.存储内容\n\n\n\n创建一个Spider，必须继承scrapy.Spider类。且自定义一些属性：\n 1.`name`:用于区别Spider，必须是唯一的。\n 2.`start_urls`:\n 3.`parse()`:个初始URL完成下载后生成的`Response` 对象将会作为唯一的参数传递给该函数。 该方法负责解析返回的数据(response data)，提取数据(生成item)以及生成需要进一步处理的URL的`Request`对象。\n\n\n","source":"_posts/python/Spider/基础知识/2016-03-31-scrapy.md","raw":"---\nauthor: ivyxjc\ndate: 2016-03-31\ntitle: BeautifulSoup4入门\ncategory: Python\ntags: [python,spider,bs4]\nkeywords:\ndescription:\n---\n\n## creating a project\n\nrun `scrapy startproject tutorial`\n\n```\n---scrapy.cfg\n---tutorial/\n-------__init__.py\n-------items.py\n-------pipelines.py\n-------settring.py\n-------spiders/\n-----------__init__.py\n```\n\n## items.py\n\n`Items` are containers that will be loaded with the scraped data;like simple python dicts.\n\n\n```python\nclass DmozItem(scrapy.Item):\n    title = scrapy.Field()\n    link = scrapy.Field()\n    desc = scrapy.Field()\n```\n\n## 第一个spider\n\n四个步骤：\n 1.创建一个Scrapy项目\n 2.定义Item容器\n 3.编写爬虫\n 4.存储内容\n\n\n\n创建一个Spider，必须继承scrapy.Spider类。且自定义一些属性：\n 1.`name`:用于区别Spider，必须是唯一的。\n 2.`start_urls`:\n 3.`parse()`:个初始URL完成下载后生成的`Response` 对象将会作为唯一的参数传递给该函数。 该方法负责解析返回的数据(response data)，提取数据(生成item)以及生成需要进一步处理的URL的`Request`对象。\n\n\n","slug":"python/Spider/基础知识/2016-03-31-scrapy","published":1,"updated":"2016-10-13T06:34:38.585Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f012i0057cwjrec0y1jvz","content":"<h2 id=\"creating-a-project\"><a href=\"#creating-a-project\" class=\"headerlink\" title=\"creating a project\"></a>creating a project</h2><p>run <code>scrapy startproject tutorial</code></p>\n<figure class=\"highlight haml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">-<span class=\"ruby\">--scrapy.cfg</span></div><div class=\"line\">-<span class=\"ruby\">--tutorial/</span></div><div class=\"line\">-<span class=\"ruby\">------__init_<span class=\"number\">_</span>.py</span></div><div class=\"line\">-<span class=\"ruby\">------items.py</span></div><div class=\"line\">-<span class=\"ruby\">------pipelines.py</span></div><div class=\"line\">-<span class=\"ruby\">------settring.py</span></div><div class=\"line\">-<span class=\"ruby\">------spiders/</span></div><div class=\"line\">-<span class=\"ruby\">----------__init_<span class=\"number\">_</span>.py</span></div></pre></td></tr></table></figure>\n<h2 id=\"items-py\"><a href=\"#items-py\" class=\"headerlink\" title=\"items.py\"></a>items.py</h2><p><code>Items</code> are containers that will be loaded with the scraped data;like simple python dicts.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DmozItem</span><span class=\"params\">(scrapy.Item)</span>:</span></div><div class=\"line\">    title = scrapy.Field()</div><div class=\"line\">    link = scrapy.Field()</div><div class=\"line\">    desc = scrapy.Field()</div></pre></td></tr></table></figure>\n<h2 id=\"第一个spider\"><a href=\"#第一个spider\" class=\"headerlink\" title=\"第一个spider\"></a>第一个spider</h2><p>四个步骤：<br> 1.创建一个Scrapy项目<br> 2.定义Item容器<br> 3.编写爬虫<br> 4.存储内容</p>\n<p>创建一个Spider，必须继承scrapy.Spider类。且自定义一些属性：<br> 1.<code>name</code>:用于区别Spider，必须是唯一的。<br> 2.<code>start_urls</code>:<br> 3.<code>parse()</code>:个初始URL完成下载后生成的<code>Response</code> 对象将会作为唯一的参数传递给该函数。 该方法负责解析返回的数据(response data)，提取数据(生成item)以及生成需要进一步处理的URL的<code>Request</code>对象。</p>\n","excerpt":"","more":"<h2 id=\"creating-a-project\"><a href=\"#creating-a-project\" class=\"headerlink\" title=\"creating a project\"></a>creating a project</h2><p>run <code>scrapy startproject tutorial</code></p>\n<figure class=\"highlight haml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">-<span class=\"ruby\">--scrapy.cfg</div><div class=\"line\"></span>-<span class=\"ruby\">--tutorial/</div><div class=\"line\"></span>-<span class=\"ruby\">------__init_<span class=\"number\">_</span>.py</div><div class=\"line\"></span>-<span class=\"ruby\">------items.py</div><div class=\"line\"></span>-<span class=\"ruby\">------pipelines.py</div><div class=\"line\"></span>-<span class=\"ruby\">------settring.py</div><div class=\"line\"></span>-<span class=\"ruby\">------spiders/</div><div class=\"line\"></span>-<span class=\"ruby\">----------__init_<span class=\"number\">_</span>.py</span></div></pre></td></tr></table></figure>\n<h2 id=\"items-py\"><a href=\"#items-py\" class=\"headerlink\" title=\"items.py\"></a>items.py</h2><p><code>Items</code> are containers that will be loaded with the scraped data;like simple python dicts.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DmozItem</span><span class=\"params\">(scrapy.Item)</span>:</span></div><div class=\"line\">    title = scrapy.Field()</div><div class=\"line\">    link = scrapy.Field()</div><div class=\"line\">    desc = scrapy.Field()</div></pre></td></tr></table></figure>\n<h2 id=\"第一个spider\"><a href=\"#第一个spider\" class=\"headerlink\" title=\"第一个spider\"></a>第一个spider</h2><p>四个步骤：<br> 1.创建一个Scrapy项目<br> 2.定义Item容器<br> 3.编写爬虫<br> 4.存储内容</p>\n<p>创建一个Spider，必须继承scrapy.Spider类。且自定义一些属性：<br> 1.<code>name</code>:用于区别Spider，必须是唯一的。<br> 2.<code>start_urls</code>:<br> 3.<code>parse()</code>:个初始URL完成下载后生成的<code>Response</code> 对象将会作为唯一的参数传递给该函数。 该方法负责解析返回的数据(response data)，提取数据(生成item)以及生成需要进一步处理的URL的<code>Request</code>对象。</p>\n"},{"author":"ivyxjc","date":"2016-04-07T16:00:00.000Z","title":"http.cookiejar 处理cookie","keywords":null,"description":null,"_content":"\n","source":"_posts/python/Spider/基础知识/2016-04-08-cookiejar.md","raw":"---\nauthor: ivyxjc\ndate: 2016-04-08\ntitle: http.cookiejar 处理cookie\ncategory: Python\ntags: [python,cookiejar,cookies]\nkeywords:\ndescription:\n---\n\n","slug":"python/Spider/基础知识/2016-04-08-cookiejar","published":1,"updated":"2016-10-13T06:34:38.588Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f012x006mcwjr959vsxd5","content":"","excerpt":"","more":""},{"author":"ivyxjc","date":"2016-03-13T16:00:00.000Z","title":"CriminalIntent程序中Fragment相关内容","keywords":null,"description":null,"_content":"\n## Activity中托管UI fragment有两种方式：\n1. 添加fragment到acitivity中\n2. 在activity代码中添加fragment\n\n第一种方法即将fragment添加到acitivity的布局中，这样会使得fragment视图和activity视图绑定。\n\n第二种方法可以在运行时控制fragment，可以决定何时将fragment添加到activity中，也可以移除当前fragment，用其它fragment代替当前fragment...\n\n为了能够灵活地设计UI，所以常用第二种方式来添加fragment。\n\n### 详细步骤\n\n#### 托管UI fragment\n1. 需要在activity视图层级结构中为fragment试图安排位置。\n\n#### 创建UI fragment\n1. 通过定义布局文件中的组件,组装界面\n2. 创建fragment类并设置试图为定义的布局\n3. 通过代码的方式,连接布局文件中生成的组件\n\n`Fragment`类要实现两个方法--`onCreate()`和`onCreateView()`方法。`onCreateView()`方法用来生成fragment视图的布局。\n\n```java\n@Nullable\n@Override\npublic View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n    View v=inflater.inflate(R.layout.fragment_crime,container,false);\n    return v;\n}\n```\n\n`onCreateView()`方法也是生成其它组件的地方。\n\n#### 代码\n\n1. 设置容器\n\n```xml\nactivity_crime.xml\n<FrameLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:id=\"@+id/fragment_container\"/>\n```\n\n2. 编写fragment布局文件\n\n```xml\nfragment_crime.xml\n<LinearLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n\n    <EditText\n        android:id=\"@+id/crime_title_edit_text\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:hint=\"@string/crime_title_hint\"/>\n</LinearLayout>\n```\n\n3.使用代码添加fragment\n\n```java\nactivity_main.java\n\nFragmentManager fm=getSupportFragmentManager();\n        Fragment fragment=fm.findFragmentById(R.id.fragment_container);\n\n        if(fragment==null){\n            fragment=new FragmentCrime();\n            fm.beginTransaction()\n                    .add(R.id.fragment_container,fragment)\n                    .commit();\n        }\n```\n\n#### 添加UI fragment到FragmentManager\n\nFragmentManager主要处理：\n1. fragment队列\n2. fragment事务的回退栈\n\n\n\n## Fragment与Activity数据传送\n\nFragment传送数据到Activity\n\n```java\nIntent i=new Intent(getActivity(),CrimeActivity.class);\ni.putExtra(CrimeFragment.EXTRA_CRIME_ID,c.getId());\nstartActivity(i);\n```\n\nActivity中接受数据\n\n```java\n@Override\npublic void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    UUID crimeId=(UUID)getActivity().getIntent()\n            .getSerializableExtra(EXTRA_CRIME_ID);\n\n    mCrime=CrimeLab.get(getActivity()).getCrime(crimeId);\n}\n```\n","source":"_posts/android/开发实战/AndroidBigNerdRanceGuide/CriminalIntent开发/2016-03-14-CriminalIntent-Fragment.md","raw":"---\nauthor: ivyxjc\ndate: 2016-03-14\ntitle: CriminalIntent程序中Fragment相关内容\ncategory: Android\ntags: [android,android_UI]\nkeywords:\ndescription:\n---\n\n## Activity中托管UI fragment有两种方式：\n1. 添加fragment到acitivity中\n2. 在activity代码中添加fragment\n\n第一种方法即将fragment添加到acitivity的布局中，这样会使得fragment视图和activity视图绑定。\n\n第二种方法可以在运行时控制fragment，可以决定何时将fragment添加到activity中，也可以移除当前fragment，用其它fragment代替当前fragment...\n\n为了能够灵活地设计UI，所以常用第二种方式来添加fragment。\n\n### 详细步骤\n\n#### 托管UI fragment\n1. 需要在activity视图层级结构中为fragment试图安排位置。\n\n#### 创建UI fragment\n1. 通过定义布局文件中的组件,组装界面\n2. 创建fragment类并设置试图为定义的布局\n3. 通过代码的方式,连接布局文件中生成的组件\n\n`Fragment`类要实现两个方法--`onCreate()`和`onCreateView()`方法。`onCreateView()`方法用来生成fragment视图的布局。\n\n```java\n@Nullable\n@Override\npublic View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n    View v=inflater.inflate(R.layout.fragment_crime,container,false);\n    return v;\n}\n```\n\n`onCreateView()`方法也是生成其它组件的地方。\n\n#### 代码\n\n1. 设置容器\n\n```xml\nactivity_crime.xml\n<FrameLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:id=\"@+id/fragment_container\"/>\n```\n\n2. 编写fragment布局文件\n\n```xml\nfragment_crime.xml\n<LinearLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n\n    <EditText\n        android:id=\"@+id/crime_title_edit_text\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:hint=\"@string/crime_title_hint\"/>\n</LinearLayout>\n```\n\n3.使用代码添加fragment\n\n```java\nactivity_main.java\n\nFragmentManager fm=getSupportFragmentManager();\n        Fragment fragment=fm.findFragmentById(R.id.fragment_container);\n\n        if(fragment==null){\n            fragment=new FragmentCrime();\n            fm.beginTransaction()\n                    .add(R.id.fragment_container,fragment)\n                    .commit();\n        }\n```\n\n#### 添加UI fragment到FragmentManager\n\nFragmentManager主要处理：\n1. fragment队列\n2. fragment事务的回退栈\n\n\n\n## Fragment与Activity数据传送\n\nFragment传送数据到Activity\n\n```java\nIntent i=new Intent(getActivity(),CrimeActivity.class);\ni.putExtra(CrimeFragment.EXTRA_CRIME_ID,c.getId());\nstartActivity(i);\n```\n\nActivity中接受数据\n\n```java\n@Override\npublic void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    UUID crimeId=(UUID)getActivity().getIntent()\n            .getSerializableExtra(EXTRA_CRIME_ID);\n\n    mCrime=CrimeLab.get(getActivity()).getCrime(crimeId);\n}\n```\n","slug":"android/开发实战/AndroidBigNerdRanceGuide/CriminalIntent开发/2016-03-14-CriminalIntent-Fragment","published":1,"updated":"2016-10-13T06:34:38.488Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f0131006tcwjr9ugibd3d","content":"<h2 id=\"Activity中托管UI-fragment有两种方式：\"><a href=\"#Activity中托管UI-fragment有两种方式：\" class=\"headerlink\" title=\"Activity中托管UI fragment有两种方式：\"></a>Activity中托管UI fragment有两种方式：</h2><ol>\n<li>添加fragment到acitivity中</li>\n<li>在activity代码中添加fragment</li>\n</ol>\n<p>第一种方法即将fragment添加到acitivity的布局中，这样会使得fragment视图和activity视图绑定。</p>\n<p>第二种方法可以在运行时控制fragment，可以决定何时将fragment添加到activity中，也可以移除当前fragment，用其它fragment代替当前fragment…</p>\n<p>为了能够灵活地设计UI，所以常用第二种方式来添加fragment。</p>\n<h3 id=\"详细步骤\"><a href=\"#详细步骤\" class=\"headerlink\" title=\"详细步骤\"></a>详细步骤</h3><h4 id=\"托管UI-fragment\"><a href=\"#托管UI-fragment\" class=\"headerlink\" title=\"托管UI fragment\"></a>托管UI fragment</h4><ol>\n<li>需要在activity视图层级结构中为fragment试图安排位置。</li>\n</ol>\n<h4 id=\"创建UI-fragment\"><a href=\"#创建UI-fragment\" class=\"headerlink\" title=\"创建UI fragment\"></a>创建UI fragment</h4><ol>\n<li>通过定义布局文件中的组件,组装界面</li>\n<li>创建fragment类并设置试图为定义的布局</li>\n<li>通过代码的方式,连接布局文件中生成的组件</li>\n</ol>\n<p><code>Fragment</code>类要实现两个方法–<code>onCreate()</code>和<code>onCreateView()</code>方法。<code>onCreateView()</code>方法用来生成fragment视图的布局。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Nullable</span></div><div class=\"line\"><span class=\"meta\">@Override</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> View <span class=\"title\">onCreateView</span><span class=\"params\">(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">    View v=inflater.inflate(R.layout.fragment_crime,container,<span class=\"keyword\">false</span>);</div><div class=\"line\">    <span class=\"keyword\">return</span> v;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><code>onCreateView()</code>方法也是生成其它组件的地方。</p>\n<h4 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h4><ol>\n<li>设置容器</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">activity_crime.xml</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">FrameLayout</span></span></div><div class=\"line\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">            <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/fragment_container\"</span>/&gt;</div></pre></td></tr></table></figure>\n<ol>\n<li>编写fragment布局文件</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">fragment_crime.xml</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span></span></div><div class=\"line\">    <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span>&gt;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">EditText</span></span></div><div class=\"line\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/crime_title_edit_text\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">        <span class=\"attr\">android:hint</span>=<span class=\"string\">\"@string/crime_title_hint\"</span>/&gt;</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>3.使用代码添加fragment</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">activity_main.java</div><div class=\"line\"></div><div class=\"line\">FragmentManager fm=getSupportFragmentManager();</div><div class=\"line\">        Fragment fragment=fm.findFragmentById(R.id.fragment_container);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span>(fragment==<span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">            fragment=<span class=\"keyword\">new</span> FragmentCrime();</div><div class=\"line\">            fm.beginTransaction()</div><div class=\"line\">                    .add(R.id.fragment_container,fragment)</div><div class=\"line\">                    .commit();</div><div class=\"line\">        &#125;</div></pre></td></tr></table></figure>\n<h4 id=\"添加UI-fragment到FragmentManager\"><a href=\"#添加UI-fragment到FragmentManager\" class=\"headerlink\" title=\"添加UI fragment到FragmentManager\"></a>添加UI fragment到FragmentManager</h4><p>FragmentManager主要处理：</p>\n<ol>\n<li>fragment队列</li>\n<li>fragment事务的回退栈</li>\n</ol>\n<h2 id=\"Fragment与Activity数据传送\"><a href=\"#Fragment与Activity数据传送\" class=\"headerlink\" title=\"Fragment与Activity数据传送\"></a>Fragment与Activity数据传送</h2><p>Fragment传送数据到Activity</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Intent i=<span class=\"keyword\">new</span> Intent(getActivity(),CrimeActivity.class);</div><div class=\"line\">i.putExtra(CrimeFragment.EXTRA_CRIME_ID,c.getId());</div><div class=\"line\">startActivity(i);</div></pre></td></tr></table></figure>\n<p>Activity中接受数据</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Override</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">    UUID crimeId=(UUID)getActivity().getIntent()</div><div class=\"line\">            .getSerializableExtra(EXTRA_CRIME_ID);</div><div class=\"line\"></div><div class=\"line\">    mCrime=CrimeLab.get(getActivity()).getCrime(crimeId);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h2 id=\"Activity中托管UI-fragment有两种方式：\"><a href=\"#Activity中托管UI-fragment有两种方式：\" class=\"headerlink\" title=\"Activity中托管UI fragment有两种方式：\"></a>Activity中托管UI fragment有两种方式：</h2><ol>\n<li>添加fragment到acitivity中</li>\n<li>在activity代码中添加fragment</li>\n</ol>\n<p>第一种方法即将fragment添加到acitivity的布局中，这样会使得fragment视图和activity视图绑定。</p>\n<p>第二种方法可以在运行时控制fragment，可以决定何时将fragment添加到activity中，也可以移除当前fragment，用其它fragment代替当前fragment…</p>\n<p>为了能够灵活地设计UI，所以常用第二种方式来添加fragment。</p>\n<h3 id=\"详细步骤\"><a href=\"#详细步骤\" class=\"headerlink\" title=\"详细步骤\"></a>详细步骤</h3><h4 id=\"托管UI-fragment\"><a href=\"#托管UI-fragment\" class=\"headerlink\" title=\"托管UI fragment\"></a>托管UI fragment</h4><ol>\n<li>需要在activity视图层级结构中为fragment试图安排位置。</li>\n</ol>\n<h4 id=\"创建UI-fragment\"><a href=\"#创建UI-fragment\" class=\"headerlink\" title=\"创建UI fragment\"></a>创建UI fragment</h4><ol>\n<li>通过定义布局文件中的组件,组装界面</li>\n<li>创建fragment类并设置试图为定义的布局</li>\n<li>通过代码的方式,连接布局文件中生成的组件</li>\n</ol>\n<p><code>Fragment</code>类要实现两个方法–<code>onCreate()</code>和<code>onCreateView()</code>方法。<code>onCreateView()</code>方法用来生成fragment视图的布局。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Nullable</span></div><div class=\"line\"><span class=\"meta\">@Override</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> View <span class=\"title\">onCreateView</span><span class=\"params\">(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">    View v=inflater.inflate(R.layout.fragment_crime,container,<span class=\"keyword\">false</span>);</div><div class=\"line\">    <span class=\"keyword\">return</span> v;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><code>onCreateView()</code>方法也是生成其它组件的地方。</p>\n<h4 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h4><ol>\n<li>设置容器</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">activity_crime.xml</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">FrameLayout</span></div><div class=\"line\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">            <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/fragment_container\"</span>/&gt;</span></div></pre></td></tr></table></figure>\n<ol>\n<li>编写fragment布局文件</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">fragment_crime.xml</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span></div><div class=\"line\">    <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">EditText</span></div><div class=\"line\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/crime_title_edit_text\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">        <span class=\"attr\">android:hint</span>=<span class=\"string\">\"@string/crime_title_hint\"</span>/&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>3.使用代码添加fragment</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">activity_main.java</div><div class=\"line\"></div><div class=\"line\">FragmentManager fm=getSupportFragmentManager();</div><div class=\"line\">        Fragment fragment=fm.findFragmentById(R.id.fragment_container);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span>(fragment==<span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">            fragment=<span class=\"keyword\">new</span> FragmentCrime();</div><div class=\"line\">            fm.beginTransaction()</div><div class=\"line\">                    .add(R.id.fragment_container,fragment)</div><div class=\"line\">                    .commit();</div><div class=\"line\">        &#125;</div></pre></td></tr></table></figure>\n<h4 id=\"添加UI-fragment到FragmentManager\"><a href=\"#添加UI-fragment到FragmentManager\" class=\"headerlink\" title=\"添加UI fragment到FragmentManager\"></a>添加UI fragment到FragmentManager</h4><p>FragmentManager主要处理：</p>\n<ol>\n<li>fragment队列</li>\n<li>fragment事务的回退栈</li>\n</ol>\n<h2 id=\"Fragment与Activity数据传送\"><a href=\"#Fragment与Activity数据传送\" class=\"headerlink\" title=\"Fragment与Activity数据传送\"></a>Fragment与Activity数据传送</h2><p>Fragment传送数据到Activity</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Intent i=<span class=\"keyword\">new</span> Intent(getActivity(),CrimeActivity.class);</div><div class=\"line\">i.putExtra(CrimeFragment.EXTRA_CRIME_ID,c.getId());</div><div class=\"line\">startActivity(i);</div></pre></td></tr></table></figure>\n<p>Activity中接受数据</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Override</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">    UUID crimeId=(UUID)getActivity().getIntent()</div><div class=\"line\">            .getSerializableExtra(EXTRA_CRIME_ID);</div><div class=\"line\"></div><div class=\"line\">    mCrime=CrimeLab.get(getActivity()).getCrime(crimeId);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"},{"author":"ivyxjc","date":"2016-03-16T16:00:00.000Z","title":"CriminalIntent程序中Fragment相关内容","keywords":null,"description":null,"_content":"\n## 实现DialogFragment方法\n1. 创建DialogPickerFragment类\n2. 创建AlertDialog\n3. 通过FragmentManager在屏幕上显示对话框\n\n\n\n##　创建DialogFrgment\n\n在屏幕上显示DialogFrgment时,托管Activity的FragmentManager会调用以下方法:\n\n`  public Dialog onCreateDialog(Bundle savedInstanceState)`\n\n1.2.\n\n\n ```java\npublic class FragmentDataPicker extends DialogFragment {\n    @Override\n    public Dialog onCreateDialog(Bundle savedInstanceState) {\n        return new AlertDialog.Builder(getActivity())\n                .setTitle(R.string.date_picker_title)\n                .setPositiveButton(android.R.string.ok,null)\n                .create();\n    }\n}\n```\n\n3.\n\n```java\nmDateButton.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                FragmentManager fm=getActivity()\n                        .getSupportFragmentManager();\n\n                FragmentDataPicker dialog=new FragmentDataPicker();\n                dialog.show(fm,DIALOG_DATE);\n            }\n        });\n```\n\nandroid有三种用于对话框的按钮：positive按钮，negative按钮和neutral按钮。\n\n### 设置对话框的显示内容\n\n```java\nView v=getActivity().getLayoutInflater()\n                .inflate(R.layout.dialog_date,null);\n\nreturn new AlertDialog.Builder(getActivity())\n      .setView(v)\n          .setTitle(R.string.date_picker_title)\n          .setPositiveButton(android.R.string.ok,null)\n          .create();\n```\n","source":"_posts/android/开发实战/AndroidBigNerdRanceGuide/CriminalIntent开发/2016-03-17-Diaglog.md","raw":"---\nauthor: ivyxjc\ndate: 2016-03-17\ntitle: CriminalIntent程序中Fragment相关内容\ncategory: Android\ntags: [android,android_control]\nkeywords:\ndescription:\n---\n\n## 实现DialogFragment方法\n1. 创建DialogPickerFragment类\n2. 创建AlertDialog\n3. 通过FragmentManager在屏幕上显示对话框\n\n\n\n##　创建DialogFrgment\n\n在屏幕上显示DialogFrgment时,托管Activity的FragmentManager会调用以下方法:\n\n`  public Dialog onCreateDialog(Bundle savedInstanceState)`\n\n1.2.\n\n\n ```java\npublic class FragmentDataPicker extends DialogFragment {\n    @Override\n    public Dialog onCreateDialog(Bundle savedInstanceState) {\n        return new AlertDialog.Builder(getActivity())\n                .setTitle(R.string.date_picker_title)\n                .setPositiveButton(android.R.string.ok,null)\n                .create();\n    }\n}\n```\n\n3.\n\n```java\nmDateButton.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                FragmentManager fm=getActivity()\n                        .getSupportFragmentManager();\n\n                FragmentDataPicker dialog=new FragmentDataPicker();\n                dialog.show(fm,DIALOG_DATE);\n            }\n        });\n```\n\nandroid有三种用于对话框的按钮：positive按钮，negative按钮和neutral按钮。\n\n### 设置对话框的显示内容\n\n```java\nView v=getActivity().getLayoutInflater()\n                .inflate(R.layout.dialog_date,null);\n\nreturn new AlertDialog.Builder(getActivity())\n      .setView(v)\n          .setTitle(R.string.date_picker_title)\n          .setPositiveButton(android.R.string.ok,null)\n          .create();\n```\n","slug":"android/开发实战/AndroidBigNerdRanceGuide/CriminalIntent开发/2016-03-17-Diaglog","published":1,"updated":"2016-10-13T06:34:38.490Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f0132006ucwjredfahuyn","content":"<h2 id=\"实现DialogFragment方法\"><a href=\"#实现DialogFragment方法\" class=\"headerlink\" title=\"实现DialogFragment方法\"></a>实现DialogFragment方法</h2><ol>\n<li>创建DialogPickerFragment类</li>\n<li>创建AlertDialog</li>\n<li>通过FragmentManager在屏幕上显示对话框</li>\n</ol>\n<p>##　创建DialogFrgment</p>\n<p>在屏幕上显示DialogFrgment时,托管Activity的FragmentManager会调用以下方法:</p>\n<p><code>public Dialog onCreateDialog(Bundle savedInstanceState)</code></p>\n<p>1.2.</p>\n <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FragmentDataPicker</span> <span class=\"keyword\">extends</span> <span class=\"title\">DialogFragment</span> </span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Dialog <span class=\"title\">onCreateDialog</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> AlertDialog.Builder(getActivity())</div><div class=\"line\">                .setTitle(R.string.date_picker_title)</div><div class=\"line\">                .setPositiveButton(android.R.string.ok,<span class=\"keyword\">null</span>)</div><div class=\"line\">                .create();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>3.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">mDateButton.setOnClickListener(<span class=\"keyword\">new</span> View.OnClickListener() &#123;</div><div class=\"line\">            <span class=\"meta\">@Override</span></div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span> </span>&#123;</div><div class=\"line\">                FragmentManager fm=getActivity()</div><div class=\"line\">                        .getSupportFragmentManager();</div><div class=\"line\"></div><div class=\"line\">                FragmentDataPicker dialog=<span class=\"keyword\">new</span> FragmentDataPicker();</div><div class=\"line\">                dialog.show(fm,DIALOG_DATE);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;);</div></pre></td></tr></table></figure>\n<p>android有三种用于对话框的按钮：positive按钮，negative按钮和neutral按钮。</p>\n<h3 id=\"设置对话框的显示内容\"><a href=\"#设置对话框的显示内容\" class=\"headerlink\" title=\"设置对话框的显示内容\"></a>设置对话框的显示内容</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">View v=getActivity().getLayoutInflater()</div><div class=\"line\">                .inflate(R.layout.dialog_date,<span class=\"keyword\">null</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">return</span> <span class=\"keyword\">new</span> AlertDialog.Builder(getActivity())</div><div class=\"line\">      .setView(v)</div><div class=\"line\">          .setTitle(R.string.date_picker_title)</div><div class=\"line\">          .setPositiveButton(android.R.string.ok,<span class=\"keyword\">null</span>)</div><div class=\"line\">          .create();</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h2 id=\"实现DialogFragment方法\"><a href=\"#实现DialogFragment方法\" class=\"headerlink\" title=\"实现DialogFragment方法\"></a>实现DialogFragment方法</h2><ol>\n<li>创建DialogPickerFragment类</li>\n<li>创建AlertDialog</li>\n<li>通过FragmentManager在屏幕上显示对话框</li>\n</ol>\n<p>##　创建DialogFrgment</p>\n<p>在屏幕上显示DialogFrgment时,托管Activity的FragmentManager会调用以下方法:</p>\n<p><code>public Dialog onCreateDialog(Bundle savedInstanceState)</code></p>\n<p>1.2.</p>\n <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FragmentDataPicker</span> <span class=\"keyword\">extends</span> <span class=\"title\">DialogFragment</span> </span>&#123;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Dialog <span class=\"title\">onCreateDialog</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> AlertDialog.Builder(getActivity())</div><div class=\"line\">                .setTitle(R.string.date_picker_title)</div><div class=\"line\">                .setPositiveButton(android.R.string.ok,<span class=\"keyword\">null</span>)</div><div class=\"line\">                .create();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>3.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">mDateButton.setOnClickListener(<span class=\"keyword\">new</span> View.OnClickListener() &#123;</div><div class=\"line\">            <span class=\"meta\">@Override</span></div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span> </span>&#123;</div><div class=\"line\">                FragmentManager fm=getActivity()</div><div class=\"line\">                        .getSupportFragmentManager();</div><div class=\"line\"></div><div class=\"line\">                FragmentDataPicker dialog=<span class=\"keyword\">new</span> FragmentDataPicker();</div><div class=\"line\">                dialog.show(fm,DIALOG_DATE);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;);</div></pre></td></tr></table></figure>\n<p>android有三种用于对话框的按钮：positive按钮，negative按钮和neutral按钮。</p>\n<h3 id=\"设置对话框的显示内容\"><a href=\"#设置对话框的显示内容\" class=\"headerlink\" title=\"设置对话框的显示内容\"></a>设置对话框的显示内容</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">View v=getActivity().getLayoutInflater()</div><div class=\"line\">                .inflate(R.layout.dialog_date,<span class=\"keyword\">null</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">return</span> <span class=\"keyword\">new</span> AlertDialog.Builder(getActivity())</div><div class=\"line\">      .setView(v)</div><div class=\"line\">          .setTitle(R.string.date_picker_title)</div><div class=\"line\">          .setPositiveButton(android.R.string.ok,<span class=\"keyword\">null</span>)</div><div class=\"line\">          .create();</div></pre></td></tr></table></figure>\n"},{"author":"ivyxjc","date":"2016-07-05T16:00:00.000Z","title":"CriminalIntent程序中Fragment，Activity通信","keywords":null,"description":"使用Intent在Fragment, Activity中进行通信.","_content":"\n## 最简单的应用\n\n```java\nIntent intent=new Intent(getActivity(), ActivityCrimeBase.class);\nstartActivity(intent);\n```\n\n## 使用extra添加信息\n\n### 附加extra信息\n\n```java\nintent.putExtra(FragmentCrime.EXTRA_CRIME_ID,c.getId());\n```\n\n### 获取extra信息\n\n```java\n\nFragmentCrime.java\n\npublic static final String EXTRA_CRIME_ID=\"com.jc.criminalIntent2.crime_id\";\n....\n....\nUUID crimeId=(UUID)getActivity()\n                .getIntent()\n                .getSerializableExtra(EXTRA_CRIME_ID);\n```\n\n此方法会破坏fragment的封装性，因为这时fragment总是需要由某个具体的activity托管。\n\n为了解决这一问题，可以就爱你个`mCrimeId`存放在fragment的arguments bundle中。\n\n\n```java\n\nActivityCrime.java\npublic class ActivityCrime extends ActivitySetFragmentBase {\n\n    @Override\n    protected Fragment createFragment() {\n        UUID crimeId=(UUID)getIntent()\n                .getSerializableExtra(FragmentCrime.EXTRA_CRIME_ID);\n\n        return FragmentCrime.newInstance(crimeId);\n    }\n}\n\nFragmentCrime.java\n\npublic void onCreate(@Nullable Bundle savedInstanceState) {\n     super.onCreate(savedInstanceState);\n     UUID crimeId=(UUID)getArguments()\n             .getSerializable(EXTRA_CRIME_ID);\n     mCrime=CrimeLab.get(getActivity()).getCrime(crimeId);\n }\n\n\n public static FragmentCrime newInstance(UUID crimeId){\n\n     Bundle args=new Bundle();\n     args.putSerializable(EXTRA_CRIME_ID,crimeId);\n     FragmentCrime fragment=new FragmentCrime();\n     fragment.setArguments(args);\n     return fragment;\n }\n\n```\n","source":"_posts/android/开发实战/AndroidBigNerdRanceGuide/CriminalIntent开发/2016-07-06-CriminalIntent-Intent.md","raw":"---\nauthor: ivyxjc\ndate: 2016-07-06\ntitle: CriminalIntent程序中Fragment，Activity通信\ncategory: Android\ntags: [android,android_adapter]\nkeywords:\ndescription: 使用Intent在Fragment, Activity中进行通信.\n---\n\n## 最简单的应用\n\n```java\nIntent intent=new Intent(getActivity(), ActivityCrimeBase.class);\nstartActivity(intent);\n```\n\n## 使用extra添加信息\n\n### 附加extra信息\n\n```java\nintent.putExtra(FragmentCrime.EXTRA_CRIME_ID,c.getId());\n```\n\n### 获取extra信息\n\n```java\n\nFragmentCrime.java\n\npublic static final String EXTRA_CRIME_ID=\"com.jc.criminalIntent2.crime_id\";\n....\n....\nUUID crimeId=(UUID)getActivity()\n                .getIntent()\n                .getSerializableExtra(EXTRA_CRIME_ID);\n```\n\n此方法会破坏fragment的封装性，因为这时fragment总是需要由某个具体的activity托管。\n\n为了解决这一问题，可以就爱你个`mCrimeId`存放在fragment的arguments bundle中。\n\n\n```java\n\nActivityCrime.java\npublic class ActivityCrime extends ActivitySetFragmentBase {\n\n    @Override\n    protected Fragment createFragment() {\n        UUID crimeId=(UUID)getIntent()\n                .getSerializableExtra(FragmentCrime.EXTRA_CRIME_ID);\n\n        return FragmentCrime.newInstance(crimeId);\n    }\n}\n\nFragmentCrime.java\n\npublic void onCreate(@Nullable Bundle savedInstanceState) {\n     super.onCreate(savedInstanceState);\n     UUID crimeId=(UUID)getArguments()\n             .getSerializable(EXTRA_CRIME_ID);\n     mCrime=CrimeLab.get(getActivity()).getCrime(crimeId);\n }\n\n\n public static FragmentCrime newInstance(UUID crimeId){\n\n     Bundle args=new Bundle();\n     args.putSerializable(EXTRA_CRIME_ID,crimeId);\n     FragmentCrime fragment=new FragmentCrime();\n     fragment.setArguments(args);\n     return fragment;\n }\n\n```\n","slug":"android/开发实战/AndroidBigNerdRanceGuide/CriminalIntent开发/2016-07-06-CriminalIntent-Intent","published":1,"updated":"2016-10-13T07:00:07.999Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f0133006wcwjrfoxjdh8c","content":"<h2 id=\"最简单的应用\"><a href=\"#最简单的应用\" class=\"headerlink\" title=\"最简单的应用\"></a>最简单的应用</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Intent intent=<span class=\"keyword\">new</span> Intent(getActivity(), ActivityCrimeBase.class);</div><div class=\"line\">startActivity(intent);</div></pre></td></tr></table></figure>\n<h2 id=\"使用extra添加信息\"><a href=\"#使用extra添加信息\" class=\"headerlink\" title=\"使用extra添加信息\"></a>使用extra添加信息</h2><h3 id=\"附加extra信息\"><a href=\"#附加extra信息\" class=\"headerlink\" title=\"附加extra信息\"></a>附加extra信息</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">intent.putExtra(FragmentCrime.EXTRA_CRIME_ID,c.getId());</div></pre></td></tr></table></figure>\n<h3 id=\"获取extra信息\"><a href=\"#获取extra信息\" class=\"headerlink\" title=\"获取extra信息\"></a>获取extra信息</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">FragmentCrime.java</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String EXTRA_CRIME_ID=<span class=\"string\">\"com.jc.criminalIntent2.crime_id\"</span>;</div><div class=\"line\">....</div><div class=\"line\">....</div><div class=\"line\">UUID crimeId=(UUID)getActivity()</div><div class=\"line\">                .getIntent()</div><div class=\"line\">                .getSerializableExtra(EXTRA_CRIME_ID);</div></pre></td></tr></table></figure>\n<p>此方法会破坏fragment的封装性，因为这时fragment总是需要由某个具体的activity托管。</p>\n<p>为了解决这一问题，可以就爱你个<code>mCrimeId</code>存放在fragment的arguments bundle中。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">ActivityCrime.java</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ActivityCrime</span> <span class=\"keyword\">extends</span> <span class=\"title\">ActivitySetFragmentBase</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> Fragment <span class=\"title\">createFragment</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        UUID crimeId=(UUID)getIntent()</div><div class=\"line\">                .getSerializableExtra(FragmentCrime.EXTRA_CRIME_ID);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">return</span> FragmentCrime.newInstance(crimeId);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">FragmentCrime.<span class=\"function\">java</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(@Nullable Bundle savedInstanceState)</span> &#123;</div><div class=\"line\">     <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">     UUID crimeId=(UUID)getArguments()</div><div class=\"line\">             .getSerializable(EXTRA_CRIME_ID);</div><div class=\"line\">     mCrime=CrimeLab.get(getActivity()).getCrime(crimeId);</div><div class=\"line\"> &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> FragmentCrime <span class=\"title\">newInstance</span><span class=\"params\">(UUID crimeId)</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">     Bundle args=<span class=\"keyword\">new</span> Bundle();</div><div class=\"line\">     args.putSerializable(EXTRA_CRIME_ID,crimeId);</div><div class=\"line\">     FragmentCrime fragment=<span class=\"keyword\">new</span> FragmentCrime();</div><div class=\"line\">     fragment.setArguments(args);</div><div class=\"line\">     <span class=\"keyword\">return</span> fragment;</div><div class=\"line\"> &#125;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h2 id=\"最简单的应用\"><a href=\"#最简单的应用\" class=\"headerlink\" title=\"最简单的应用\"></a>最简单的应用</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Intent intent=<span class=\"keyword\">new</span> Intent(getActivity(), ActivityCrimeBase.class);</div><div class=\"line\">startActivity(intent);</div></pre></td></tr></table></figure>\n<h2 id=\"使用extra添加信息\"><a href=\"#使用extra添加信息\" class=\"headerlink\" title=\"使用extra添加信息\"></a>使用extra添加信息</h2><h3 id=\"附加extra信息\"><a href=\"#附加extra信息\" class=\"headerlink\" title=\"附加extra信息\"></a>附加extra信息</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">intent.putExtra(FragmentCrime.EXTRA_CRIME_ID,c.getId());</div></pre></td></tr></table></figure>\n<h3 id=\"获取extra信息\"><a href=\"#获取extra信息\" class=\"headerlink\" title=\"获取extra信息\"></a>获取extra信息</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">FragmentCrime.java</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String EXTRA_CRIME_ID=<span class=\"string\">\"com.jc.criminalIntent2.crime_id\"</span>;</div><div class=\"line\">....</div><div class=\"line\">....</div><div class=\"line\">UUID crimeId=(UUID)getActivity()</div><div class=\"line\">                .getIntent()</div><div class=\"line\">                .getSerializableExtra(EXTRA_CRIME_ID);</div></pre></td></tr></table></figure>\n<p>此方法会破坏fragment的封装性，因为这时fragment总是需要由某个具体的activity托管。</p>\n<p>为了解决这一问题，可以就爱你个<code>mCrimeId</code>存放在fragment的arguments bundle中。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">ActivityCrime.java</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ActivityCrime</span> <span class=\"keyword\">extends</span> <span class=\"title\">ActivitySetFragmentBase</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> Fragment <span class=\"title\">createFragment</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        UUID crimeId=(UUID)getIntent()</div><div class=\"line\">                .getSerializableExtra(FragmentCrime.EXTRA_CRIME_ID);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">return</span> FragmentCrime.newInstance(crimeId);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">FragmentCrime.<span class=\"function\">java</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(@Nullable Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">     <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">     UUID crimeId=(UUID)getArguments()</div><div class=\"line\">             .getSerializable(EXTRA_CRIME_ID);</div><div class=\"line\">     mCrime=CrimeLab.get(getActivity()).getCrime(crimeId);</div><div class=\"line\"> &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> FragmentCrime <span class=\"title\">newInstance</span><span class=\"params\">(UUID crimeId)</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">     Bundle args=<span class=\"keyword\">new</span> Bundle();</div><div class=\"line\">     args.putSerializable(EXTRA_CRIME_ID,crimeId);</div><div class=\"line\">     FragmentCrime fragment=<span class=\"keyword\">new</span> FragmentCrime();</div><div class=\"line\">     fragment.setArguments(args);</div><div class=\"line\">     <span class=\"keyword\">return</span> fragment;</div><div class=\"line\"> &#125;</div></pre></td></tr></table></figure>\n"},{"author":"ivyxjc","date":"2016-07-05T16:00:00.000Z","title":"CriminalIntent程序中ListFragment相关内容","keywords":null,"description":null,"_content":"\n## 定制adapter\n\nadapter负责：\n1. 创建必要的视图对象\n2. 用模型层数据填充视图对性爱那个\n3. 将准备好的视图对象返回给ListView\n\n\n```java\n...\n内部类\nprivate class CrimeAdapter extends ArrayAdapter<Crime>{\n        public CrimeAdapter(ArrayList<Crime> crimes){\n            super(getActivity(),0,crimes);\n        }\n\n        @Override\n        public View getView(int position, View convertView, ViewGroup parent) {\n            if(convertView==null){\n                convertView=getActivity()\n                        .getLayoutInflater()\n                        .inflate(R.layout.list_item_crime,null);\n            }\n\n            Crime c=(Crime)(getListAdapter()).getItem(position);\n\n            TextView titleTextView=(TextView)convertView.findViewById(R.id.list_item_crime_title_TextView);\n            TextView dateTextView=(TextView)convertView.findViewById(R.id.list_item_crime_date_TextView);\n            CheckBox solvedCheckBox=(CheckBox)convertView.findViewById(R.id.list_item_crime_isSolved_CheckBox);\n\n            solvedCheckBox.setChecked(c.isSolved());\n            return convertView;\n        }\n    }\n\n...\n```\n注： 由于CheckBox默认是可聚焦的，也就是点击列表向会被解读为切换CheckBox的状态，因而无法触发`onListItemClick()`方法。解决方法：\n\n```xml\n<CheckBox\n        android:id=\"@+id/list_item_crime_isSolved_CheckBox\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_alignParentRight=\"true\"\n        android:gravity=\"center\"\n    android:focusable=\"false\"/>\n```\n","source":"_posts/android/开发实战/AndroidBigNerdRanceGuide/CriminalIntent开发/2016-07-06-CriminalIntent-ListFragment.md","raw":"---\nauthor: ivyxjc\ndate: 2016-07-06\ntitle: CriminalIntent程序中ListFragment相关内容\ncategory: Android\ntags: [android,android_adapter]\nkeywords:\ndescription:\n---\n\n## 定制adapter\n\nadapter负责：\n1. 创建必要的视图对象\n2. 用模型层数据填充视图对性爱那个\n3. 将准备好的视图对象返回给ListView\n\n\n```java\n...\n内部类\nprivate class CrimeAdapter extends ArrayAdapter<Crime>{\n        public CrimeAdapter(ArrayList<Crime> crimes){\n            super(getActivity(),0,crimes);\n        }\n\n        @Override\n        public View getView(int position, View convertView, ViewGroup parent) {\n            if(convertView==null){\n                convertView=getActivity()\n                        .getLayoutInflater()\n                        .inflate(R.layout.list_item_crime,null);\n            }\n\n            Crime c=(Crime)(getListAdapter()).getItem(position);\n\n            TextView titleTextView=(TextView)convertView.findViewById(R.id.list_item_crime_title_TextView);\n            TextView dateTextView=(TextView)convertView.findViewById(R.id.list_item_crime_date_TextView);\n            CheckBox solvedCheckBox=(CheckBox)convertView.findViewById(R.id.list_item_crime_isSolved_CheckBox);\n\n            solvedCheckBox.setChecked(c.isSolved());\n            return convertView;\n        }\n    }\n\n...\n```\n注： 由于CheckBox默认是可聚焦的，也就是点击列表向会被解读为切换CheckBox的状态，因而无法触发`onListItemClick()`方法。解决方法：\n\n```xml\n<CheckBox\n        android:id=\"@+id/list_item_crime_isSolved_CheckBox\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_alignParentRight=\"true\"\n        android:gravity=\"center\"\n    android:focusable=\"false\"/>\n```\n","slug":"android/开发实战/AndroidBigNerdRanceGuide/CriminalIntent开发/2016-07-06-CriminalIntent-ListFragment","published":1,"updated":"2016-10-13T06:34:38.497Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f0136006zcwjrdje9j19s","content":"<h2 id=\"定制adapter\"><a href=\"#定制adapter\" class=\"headerlink\" title=\"定制adapter\"></a>定制adapter</h2><p>adapter负责：</p>\n<ol>\n<li>创建必要的视图对象</li>\n<li>用模型层数据填充视图对性爱那个</li>\n<li>将准备好的视图对象返回给ListView</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\">...</div><div class=\"line\">内部类</div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CrimeAdapter</span> <span class=\"keyword\">extends</span> <span class=\"title\">ArrayAdapter</span>&lt;<span class=\"title\">Crime</span>&gt;</span>&#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CrimeAdapter</span><span class=\"params\">(ArrayList&lt;Crime&gt; crimes)</span></span>&#123;</div><div class=\"line\">            <span class=\"keyword\">super</span>(getActivity(),<span class=\"number\">0</span>,crimes);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">@Override</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> View <span class=\"title\">getView</span><span class=\"params\">(<span class=\"keyword\">int</span> position, View convertView, ViewGroup parent)</span> </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">if</span>(convertView==<span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">                convertView=getActivity()</div><div class=\"line\">                        .getLayoutInflater()</div><div class=\"line\">                        .inflate(R.layout.list_item_crime,<span class=\"keyword\">null</span>);</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            Crime c=(Crime)(getListAdapter()).getItem(position);</div><div class=\"line\"></div><div class=\"line\">            TextView titleTextView=(TextView)convertView.findViewById(R.id.list_item_crime_title_TextView);</div><div class=\"line\">            TextView dateTextView=(TextView)convertView.findViewById(R.id.list_item_crime_date_TextView);</div><div class=\"line\">            CheckBox solvedCheckBox=(CheckBox)convertView.findViewById(R.id.list_item_crime_isSolved_CheckBox);</div><div class=\"line\"></div><div class=\"line\">            solvedCheckBox.setChecked(c.isSolved());</div><div class=\"line\">            <span class=\"keyword\">return</span> convertView;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">...</div></pre></td></tr></table></figure>\n<p>注： 由于CheckBox默认是可聚焦的，也就是点击列表向会被解读为切换CheckBox的状态，因而无法触发<code>onListItemClick()</code>方法。解决方法：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">CheckBox</span></span></div><div class=\"line\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/list_item_crime_isSolved_CheckBox\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_alignParentRight</span>=<span class=\"string\">\"true\"</span></div><div class=\"line\">        <span class=\"attr\">android:gravity</span>=<span class=\"string\">\"center\"</span></div><div class=\"line\">    <span class=\"attr\">android:focusable</span>=<span class=\"string\">\"false\"</span>/&gt;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h2 id=\"定制adapter\"><a href=\"#定制adapter\" class=\"headerlink\" title=\"定制adapter\"></a>定制adapter</h2><p>adapter负责：</p>\n<ol>\n<li>创建必要的视图对象</li>\n<li>用模型层数据填充视图对性爱那个</li>\n<li>将准备好的视图对象返回给ListView</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\">...</div><div class=\"line\">内部类</div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CrimeAdapter</span> <span class=\"keyword\">extends</span> <span class=\"title\">ArrayAdapter</span>&lt;<span class=\"title\">Crime</span>&gt;</span>&#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CrimeAdapter</span><span class=\"params\">(ArrayList&lt;Crime&gt; crimes)</span></span>&#123;</div><div class=\"line\">            <span class=\"keyword\">super</span>(getActivity(),<span class=\"number\">0</span>,crimes);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">@Override</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> View <span class=\"title\">getView</span><span class=\"params\">(<span class=\"keyword\">int</span> position, View convertView, ViewGroup parent)</span> </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">if</span>(convertView==<span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">                convertView=getActivity()</div><div class=\"line\">                        .getLayoutInflater()</div><div class=\"line\">                        .inflate(R.layout.list_item_crime,<span class=\"keyword\">null</span>);</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            Crime c=(Crime)(getListAdapter()).getItem(position);</div><div class=\"line\"></div><div class=\"line\">            TextView titleTextView=(TextView)convertView.findViewById(R.id.list_item_crime_title_TextView);</div><div class=\"line\">            TextView dateTextView=(TextView)convertView.findViewById(R.id.list_item_crime_date_TextView);</div><div class=\"line\">            CheckBox solvedCheckBox=(CheckBox)convertView.findViewById(R.id.list_item_crime_isSolved_CheckBox);</div><div class=\"line\"></div><div class=\"line\">            solvedCheckBox.setChecked(c.isSolved());</div><div class=\"line\">            <span class=\"keyword\">return</span> convertView;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">...</div></pre></td></tr></table></figure>\n<p>注： 由于CheckBox默认是可聚焦的，也就是点击列表向会被解读为切换CheckBox的状态，因而无法触发<code>onListItemClick()</code>方法。解决方法：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">CheckBox</span></div><div class=\"line\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/list_item_crime_isSolved_CheckBox\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_alignParentRight</span>=<span class=\"string\">\"true\"</span></div><div class=\"line\">        <span class=\"attr\">android:gravity</span>=<span class=\"string\">\"center\"</span></div><div class=\"line\">    <span class=\"attr\">android:focusable</span>=<span class=\"string\">\"false\"</span>/&gt;</span></div></pre></td></tr></table></figure>\n"},{"author":"ivyxjc","date":"2016-07-07T16:00:00.000Z","title":"CriminalIntent程序中ViewPager相关内容","keywords":null,"description":"FragmenPagerAdapter和FragmenStatePagerAdapter这两者的区别主要在于卸载不再需要的fragment时采取的方法不同。","_content":"\n\n## FragmenPagerAdapter和FragmenStatePagerAdapter\n\n这两者的区别主要在于卸载不再需要的fragment时采取的方法不同。\n\n使用FragmentStatePagerAdapter会销毁掉不需要的fragment。事务提交后，可以将fragment从activity的FragmentManager中彻底移除。该类名中的`state`表明在销毁fragment时，它会将`onSaveInstanceState(Bundle)`方法中的Bundle信息保存下来。用户切换回来时，保存的实例可用于回复生成新的fragment。\n\n\nFragmentPagerAdapter对于不再需要的fragment，FragmentManager选择调用事务的`detach(fragment)`方法，而非`remove(fragment)`方法，FragmentPagerAdapter只是销毁fragment的视图，但是仍将实例保留在FragmentManager中。FragmentPagerAdapter创建的fragment不会被销毁。\n\n由上可知:\n1. FragmentStatePagerAdapter更省内存，所以当有大量的fragment时，推荐使用FragmentStatePagerAdapter.\n2. 但是当用户界面只有少量fragment时，推荐FragmentPagerAdapter。\n","source":"_posts/android/开发实战/AndroidBigNerdRanceGuide/CriminalIntent开发/2016-07-08-ViewPager.md","raw":"---\nauthor: ivyxjc\ndate: 2016-07-08\ntitle: CriminalIntent程序中ViewPager相关内容\ncategory: Android\ntags: [android,android_view_pager]\nkeywords:\ndescription: FragmenPagerAdapter和FragmenStatePagerAdapter这两者的区别主要在于卸载不再需要的fragment时采取的方法不同。\n---\n\n\n## FragmenPagerAdapter和FragmenStatePagerAdapter\n\n这两者的区别主要在于卸载不再需要的fragment时采取的方法不同。\n\n使用FragmentStatePagerAdapter会销毁掉不需要的fragment。事务提交后，可以将fragment从activity的FragmentManager中彻底移除。该类名中的`state`表明在销毁fragment时，它会将`onSaveInstanceState(Bundle)`方法中的Bundle信息保存下来。用户切换回来时，保存的实例可用于回复生成新的fragment。\n\n\nFragmentPagerAdapter对于不再需要的fragment，FragmentManager选择调用事务的`detach(fragment)`方法，而非`remove(fragment)`方法，FragmentPagerAdapter只是销毁fragment的视图，但是仍将实例保留在FragmentManager中。FragmentPagerAdapter创建的fragment不会被销毁。\n\n由上可知:\n1. FragmentStatePagerAdapter更省内存，所以当有大量的fragment时，推荐使用FragmentStatePagerAdapter.\n2. 但是当用户界面只有少量fragment时，推荐FragmentPagerAdapter。\n","slug":"android/开发实战/AndroidBigNerdRanceGuide/CriminalIntent开发/2016-07-08-ViewPager","published":1,"updated":"2016-10-13T06:50:53.586Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciu8f01390073cwjr5hzwo6kp","content":"<h2 id=\"FragmenPagerAdapter和FragmenStatePagerAdapter\"><a href=\"#FragmenPagerAdapter和FragmenStatePagerAdapter\" class=\"headerlink\" title=\"FragmenPagerAdapter和FragmenStatePagerAdapter\"></a>FragmenPagerAdapter和FragmenStatePagerAdapter</h2><p>这两者的区别主要在于卸载不再需要的fragment时采取的方法不同。</p>\n<p>使用FragmentStatePagerAdapter会销毁掉不需要的fragment。事务提交后，可以将fragment从activity的FragmentManager中彻底移除。该类名中的<code>state</code>表明在销毁fragment时，它会将<code>onSaveInstanceState(Bundle)</code>方法中的Bundle信息保存下来。用户切换回来时，保存的实例可用于回复生成新的fragment。</p>\n<p>FragmentPagerAdapter对于不再需要的fragment，FragmentManager选择调用事务的<code>detach(fragment)</code>方法，而非<code>remove(fragment)</code>方法，FragmentPagerAdapter只是销毁fragment的视图，但是仍将实例保留在FragmentManager中。FragmentPagerAdapter创建的fragment不会被销毁。</p>\n<p>由上可知:</p>\n<ol>\n<li>FragmentStatePagerAdapter更省内存，所以当有大量的fragment时，推荐使用FragmentStatePagerAdapter.</li>\n<li>但是当用户界面只有少量fragment时，推荐FragmentPagerAdapter。</li>\n</ol>\n","excerpt":"","more":"<h2 id=\"FragmenPagerAdapter和FragmenStatePagerAdapter\"><a href=\"#FragmenPagerAdapter和FragmenStatePagerAdapter\" class=\"headerlink\" title=\"FragmenPagerAdapter和FragmenStatePagerAdapter\"></a>FragmenPagerAdapter和FragmenStatePagerAdapter</h2><p>这两者的区别主要在于卸载不再需要的fragment时采取的方法不同。</p>\n<p>使用FragmentStatePagerAdapter会销毁掉不需要的fragment。事务提交后，可以将fragment从activity的FragmentManager中彻底移除。该类名中的<code>state</code>表明在销毁fragment时，它会将<code>onSaveInstanceState(Bundle)</code>方法中的Bundle信息保存下来。用户切换回来时，保存的实例可用于回复生成新的fragment。</p>\n<p>FragmentPagerAdapter对于不再需要的fragment，FragmentManager选择调用事务的<code>detach(fragment)</code>方法，而非<code>remove(fragment)</code>方法，FragmentPagerAdapter只是销毁fragment的视图，但是仍将实例保留在FragmentManager中。FragmentPagerAdapter创建的fragment不会被销毁。</p>\n<p>由上可知:</p>\n<ol>\n<li>FragmentStatePagerAdapter更省内存，所以当有大量的fragment时，推荐使用FragmentStatePagerAdapter.</li>\n<li>但是当用户界面只有少量fragment时，推荐FragmentPagerAdapter。</li>\n</ol>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ciu8f00xv0001cwjrj3100yur","category_id":"ciu8f00xz0003cwjrcvzhtpua","_id":"ciu8f00yg000bcwjrtn2833vz"},{"post_id":"ciu8f00xx0002cwjrwen575kh","category_id":"ciu8f00yd0008cwjrd9n313yq","_id":"ciu8f00yi000ecwjro9rpqe85"},{"post_id":"ciu8f00y60005cwjrg45i4ezi","category_id":"ciu8f00yh000ccwjrk2l0hhxp","_id":"ciu8f00yk000icwjra5ym65vu"},{"post_id":"ciu8f00y80006cwjrs3f9u8gh","category_id":"ciu8f00yi000fcwjri9yml284","_id":"ciu8f00yo000mcwjrpbda2obt"},{"post_id":"ciu8f00yc0007cwjrvexfk9lu","category_id":"ciu8f00yi000fcwjri9yml284","_id":"ciu8f00yq000pcwjrcpgl3lt6"},{"post_id":"ciu8f00zg000zcwjr762ugxv6","category_id":"ciu8f00zd000wcwjrzwn1i40y","_id":"ciu8f00zr0014cwjr44lydhtx"},{"post_id":"ciu8f00z7000ucwjr5bz1m9in","category_id":"ciu8f00zd000wcwjrzwn1i40y","_id":"ciu8f00zx0017cwjrcmuvz0gk"},{"post_id":"ciu8f00zl0010cwjrcthh8hfd","category_id":"ciu8f00zd000wcwjrzwn1i40y","_id":"ciu8f0100001acwjr31h30j1f"},{"post_id":"ciu8f00zo0012cwjr5zwqyi6l","category_id":"ciu8f00zd000wcwjrzwn1i40y","_id":"ciu8f0101001ccwjr8dzh9ztg"},{"post_id":"ciu8f00zc000vcwjrrkqgzp7n","category_id":"ciu8f00zd000wcwjrzwn1i40y","_id":"ciu8f0103001fcwjr40besjnt"},{"post_id":"ciu8f00zr0015cwjrszxh772o","category_id":"ciu8f00yd0008cwjrd9n313yq","_id":"ciu8f0105001icwjryzjtqgkl"},{"post_id":"ciu8f00zx0018cwjrfrpa0s19","category_id":"ciu8f00yd0008cwjrd9n313yq","_id":"ciu8f0109001lcwjr95qmauij"},{"post_id":"ciu8f00ze000xcwjr4fcgqx3z","category_id":"ciu8f00zd000wcwjrzwn1i40y","_id":"ciu8f010b001pcwjr8vp0lp5k"},{"post_id":"ciu8f0100001bcwjronifxltz","category_id":"ciu8f00yd0008cwjrd9n313yq","_id":"ciu8f010d001scwjrwsymew2g"},{"post_id":"ciu8f0102001dcwjrsrnt6adn","category_id":"ciu8f00yd0008cwjrd9n313yq","_id":"ciu8f010l001vcwjr71aiwmyy"},{"post_id":"ciu8f0103001gcwjrpg82m6cn","category_id":"ciu8f00yd0008cwjrd9n313yq","_id":"ciu8f010n001ycwjrc3bpbdz2"},{"post_id":"ciu8f0106001jcwjrbtkzp4dp","category_id":"ciu8f00yd0008cwjrd9n313yq","_id":"ciu8f010p0021cwjr64qt2s5u"},{"post_id":"ciu8f0109001ncwjrabq9gyz1","category_id":"ciu8f00yd0008cwjrd9n313yq","_id":"ciu8f010r0023cwjrlydqorur"},{"post_id":"ciu8f010b001qcwjrf92drdsg","category_id":"ciu8f00yd0008cwjrd9n313yq","_id":"ciu8f010s0026cwjrulowqs08"},{"post_id":"ciu8f010e001tcwjrthp89j1v","category_id":"ciu8f00yd0008cwjrd9n313yq","_id":"ciu8f010u0029cwjrrfqtnc7x"},{"post_id":"ciu8f010m001xcwjrtpzhoo8g","category_id":"ciu8f00yd0008cwjrd9n313yq","_id":"ciu8f010z002ccwjryfa6y7k5"},{"post_id":"ciu8f010n001zcwjrirw000pm","category_id":"ciu8f00yh000ccwjrk2l0hhxp","_id":"ciu8f0110002fcwjr19lpl8xd"},{"post_id":"ciu8f010p0022cwjribyugsh7","category_id":"ciu8f00yi000fcwjri9yml284","_id":"ciu8f0110002gcwjrhtvgvjuo"},{"post_id":"ciu8f010r0024cwjrmf3uhwh5","category_id":"ciu8f00yh000ccwjrk2l0hhxp","_id":"ciu8f0110002icwjrjexeoozl"},{"post_id":"ciu8f010t0027cwjrb883kp7k","category_id":"ciu8f00yh000ccwjrk2l0hhxp","_id":"ciu8f0110002jcwjrpm5v4dac"},{"post_id":"ciu8f010u002acwjrc4l7wvz8","category_id":"ciu8f00yi000fcwjri9yml284","_id":"ciu8f0111002lcwjrhvt2tiph"},{"post_id":"ciu8f011l0040cwjr9hg96fbh","category_id":"ciu8f00zd000wcwjrzwn1i40y","_id":"ciu8f011q0044cwjri3yax260"},{"post_id":"ciu8f011o0041cwjr3qpl508e","category_id":"ciu8f00yd0008cwjrd9n313yq","_id":"ciu8f011r0046cwjrbtoxe07r"},{"post_id":"ciu8f011p0043cwjr9r6jma30","category_id":"ciu8f00yd0008cwjrd9n313yq","_id":"ciu8f011w0049cwjrr23bl8in"},{"post_id":"ciu8f011q0045cwjrpu6zvrk2","category_id":"ciu8f00yd0008cwjrd9n313yq","_id":"ciu8f011x004bcwjrv2au0bxl"},{"post_id":"ciu8f011u0047cwjrpzxpsmzc","category_id":"ciu8f00yd0008cwjrd9n313yq","_id":"ciu8f011y004ecwjrv8qtcuji"},{"post_id":"ciu8f011w004acwjr6ub4qc8x","category_id":"ciu8f00yd0008cwjrd9n313yq","_id":"ciu8f0123004gcwjrgngqsaqg"},{"post_id":"ciu8f011x004ccwjr4ridt3fd","category_id":"ciu8f00yd0008cwjrd9n313yq","_id":"ciu8f0124004kcwjrrd7vdnni"},{"post_id":"ciu8f011z004fcwjrxc8fpm6e","category_id":"ciu8f00yd0008cwjrd9n313yq","_id":"ciu8f0125004mcwjrq457f9yn"},{"post_id":"ciu8f0123004hcwjrq59fwskf","category_id":"ciu8f00yd0008cwjrd9n313yq","_id":"ciu8f0126004ocwjrnyko2yht"},{"post_id":"ciu8f0124004lcwjrv7w6hthw","category_id":"ciu8f00yd0008cwjrd9n313yq","_id":"ciu8f0128004scwjrosoc0a70"},{"post_id":"ciu8f0125004ncwjr6ab49obi","category_id":"ciu8f00yd0008cwjrd9n313yq","_id":"ciu8f012b004vcwjrhertrlt9"},{"post_id":"ciu8f0127004qcwjrmchk0byc","category_id":"ciu8f00yd0008cwjrd9n313yq","_id":"ciu8f012d004zcwjriemym06c"},{"post_id":"ciu8f0128004tcwjrvgzw7yq7","category_id":"ciu8f00yh000ccwjrk2l0hhxp","_id":"ciu8f012g0052cwjrc5b947tk"},{"post_id":"ciu8f012b004wcwjr33eext83","category_id":"ciu8f00yh000ccwjrk2l0hhxp","_id":"ciu8f012i0056cwjruf2mlv45"},{"post_id":"ciu8f012d0050cwjrqhxl7myo","category_id":"ciu8f00yh000ccwjrk2l0hhxp","_id":"ciu8f012j0059cwjrfdj2ltck"},{"post_id":"ciu8f012g0053cwjr5owxs7wr","category_id":"ciu8f00yh000ccwjrk2l0hhxp","_id":"ciu8f012k005ccwjri1zvnw4m"},{"post_id":"ciu8f012i0057cwjrec0y1jvz","category_id":"ciu8f00yh000ccwjrk2l0hhxp","_id":"ciu8f012k005ecwjr4hw14b9c"},{"post_id":"ciu8f012x006mcwjr959vsxd5","category_id":"ciu8f00yh000ccwjrk2l0hhxp","_id":"ciu8f012z006ocwjr13x4dsay"},{"post_id":"ciu8f0131006tcwjr9ugibd3d","category_id":"ciu8f00yd0008cwjrd9n313yq","_id":"ciu8f0136006xcwjrn1ysg0q9"},{"post_id":"ciu8f0132006ucwjredfahuyn","category_id":"ciu8f00yd0008cwjrd9n313yq","_id":"ciu8f01380071cwjruiiolgqz"},{"post_id":"ciu8f0133006wcwjrfoxjdh8c","category_id":"ciu8f00yd0008cwjrd9n313yq","_id":"ciu8f01390074cwjrh00ch1zi"},{"post_id":"ciu8f0136006zcwjrdje9j19s","category_id":"ciu8f00yd0008cwjrd9n313yq","_id":"ciu8f013a0076cwjr48rqhs50"},{"post_id":"ciu8f01390073cwjr5hzwo6kp","category_id":"ciu8f00yd0008cwjrd9n313yq","_id":"ciu8f013b0079cwjrlpsl8asz"}],"PostTag":[{"post_id":"ciu8f00xv0001cwjrj3100yur","tag_id":"ciu8f00y30004cwjrlhy15ylf","_id":"ciu8f00ye000acwjraazydlcf"},{"post_id":"ciu8f00xx0002cwjrwen575kh","tag_id":"ciu8f00yd0009cwjru30bqfrt","_id":"ciu8f00yj000hcwjrkjrgjnr1"},{"post_id":"ciu8f00xx0002cwjrwen575kh","tag_id":"ciu8f00yh000dcwjrp3tk17vv","_id":"ciu8f00yl000jcwjrvmytcn60"},{"post_id":"ciu8f00y60005cwjrg45i4ezi","tag_id":"ciu8f00yi000gcwjrczst11rr","_id":"ciu8f00yq000ocwjrk4kufe2t"},{"post_id":"ciu8f00y60005cwjrg45i4ezi","tag_id":"ciu8f00ym000lcwjrw8loagcb","_id":"ciu8f00yr000qcwjryhzresay"},{"post_id":"ciu8f00y80006cwjrs3f9u8gh","tag_id":"ciu8f00yo000ncwjra784ncwg","_id":"ciu8f00yu000scwjrgkmbzqph"},{"post_id":"ciu8f00yc0007cwjrvexfk9lu","tag_id":"ciu8f00yo000ncwjra784ncwg","_id":"ciu8f00yv000tcwjrtlht8v7x"},{"post_id":"ciu8f00zc000vcwjrrkqgzp7n","tag_id":"ciu8f00zf000ycwjr3axzr433","_id":"ciu8f0104001hcwjrmjeg6e5i"},{"post_id":"ciu8f00zc000vcwjrrkqgzp7n","tag_id":"ciu8f00zp0013cwjr6hi5k31y","_id":"ciu8f0108001kcwjroz2i2bbw"},{"post_id":"ciu8f00zc000vcwjrrkqgzp7n","tag_id":"ciu8f01000019cwjryjyjwfc6","_id":"ciu8f010a001ocwjrsbk7a7j6"},{"post_id":"ciu8f00ze000xcwjr4fcgqx3z","tag_id":"ciu8f0103001ecwjrh04qzk1y","_id":"ciu8f010d001rcwjrdem350k4"},{"post_id":"ciu8f00zg000zcwjr762ugxv6","tag_id":"ciu8f0109001mcwjrs9cnf995","_id":"ciu8f010l001wcwjr2hbuy4xf"},{"post_id":"ciu8f00zl0010cwjrcthh8hfd","tag_id":"ciu8f010i001ucwjrnu0zsyhd","_id":"ciu8f010t0028cwjra3w2keym"},{"post_id":"ciu8f00zl0010cwjrcthh8hfd","tag_id":"ciu8f010o0020cwjrrt7xugz0","_id":"ciu8f010z002bcwjrk6oxxrcs"},{"post_id":"ciu8f010u002acwjrc4l7wvz8","tag_id":"ciu8f00yo000ncwjra784ncwg","_id":"ciu8f0110002ecwjrya8lmlyw"},{"post_id":"ciu8f00zo0012cwjr5zwqyi6l","tag_id":"ciu8f010s0025cwjrxbjf4cz3","_id":"ciu8f0111002mcwjrbgr9g22t"},{"post_id":"ciu8f00zo0012cwjr5zwqyi6l","tag_id":"ciu8f010z002dcwjrnrj5btl3","_id":"ciu8f0112002ncwjr9zq2hcvr"},{"post_id":"ciu8f00zo0012cwjr5zwqyi6l","tag_id":"ciu8f0110002hcwjryzrpybse","_id":"ciu8f0112002pcwjraedmhnn4"},{"post_id":"ciu8f00zr0015cwjrszxh772o","tag_id":"ciu8f00yd0009cwjru30bqfrt","_id":"ciu8f0113002rcwjridk3p5kw"},{"post_id":"ciu8f00zr0015cwjrszxh772o","tag_id":"ciu8f0111002kcwjr6y6tix1g","_id":"ciu8f0113002scwjrixkp2azc"},{"post_id":"ciu8f00zr0015cwjrszxh772o","tag_id":"ciu8f0112002ocwjr6v4pzcdk","_id":"ciu8f0113002ucwjrfq1on8xw"},{"post_id":"ciu8f00zx0018cwjrfrpa0s19","tag_id":"ciu8f00yd0009cwjru30bqfrt","_id":"ciu8f0113002vcwjrkt7u7ynp"},{"post_id":"ciu8f00zx0018cwjrfrpa0s19","tag_id":"ciu8f0112002qcwjr4r24vyxc","_id":"ciu8f0114002xcwjrtvvilcwy"},{"post_id":"ciu8f0100001bcwjronifxltz","tag_id":"ciu8f00yd0009cwjru30bqfrt","_id":"ciu8f0114002ycwjrach7z0bh"},{"post_id":"ciu8f0100001bcwjronifxltz","tag_id":"ciu8f0113002tcwjrj4jt06xs","_id":"ciu8f01140030cwjr51trih3c"},{"post_id":"ciu8f0102001dcwjrsrnt6adn","tag_id":"ciu8f00yd0009cwjru30bqfrt","_id":"ciu8f01140031cwjrqlhbfihy"},{"post_id":"ciu8f0102001dcwjrsrnt6adn","tag_id":"ciu8f0114002wcwjryqmdo3xn","_id":"ciu8f01150032cwjr10s6u17m"},{"post_id":"ciu8f0103001gcwjrpg82m6cn","tag_id":"ciu8f00yd0009cwjru30bqfrt","_id":"ciu8f01150034cwjr8jonaqq1"},{"post_id":"ciu8f0103001gcwjrpg82m6cn","tag_id":"ciu8f0114002zcwjrht6vcovz","_id":"ciu8f01150035cwjryhmhih2z"},{"post_id":"ciu8f0106001jcwjrbtkzp4dp","tag_id":"ciu8f00yd0009cwjru30bqfrt","_id":"ciu8f01150037cwjrvmip3412"},{"post_id":"ciu8f0106001jcwjrbtkzp4dp","tag_id":"ciu8f01150033cwjrp4tp5s3z","_id":"ciu8f01160038cwjrrumuof7v"},{"post_id":"ciu8f0109001ncwjrabq9gyz1","tag_id":"ciu8f01150036cwjroshkee8f","_id":"ciu8f0117003bcwjr5tzt7p21"},{"post_id":"ciu8f0109001ncwjrabq9gyz1","tag_id":"ciu8f01160039cwjrv9v53761","_id":"ciu8f0117003ccwjrf3drf4mn"},{"post_id":"ciu8f010b001qcwjrf92drdsg","tag_id":"ciu8f00yd0009cwjru30bqfrt","_id":"ciu8f0117003ecwjr1wi1vzv8"},{"post_id":"ciu8f010b001qcwjrf92drdsg","tag_id":"ciu8f0116003acwjr8m3p48tz","_id":"ciu8f0117003fcwjrozqpgy48"},{"post_id":"ciu8f010e001tcwjrthp89j1v","tag_id":"ciu8f00yd0009cwjru30bqfrt","_id":"ciu8f0118003hcwjr8jgxobnq"},{"post_id":"ciu8f010e001tcwjrthp89j1v","tag_id":"ciu8f0117003dcwjrt4kcl803","_id":"ciu8f0118003icwjr77kf2zi6"},{"post_id":"ciu8f010m001xcwjrtpzhoo8g","tag_id":"ciu8f00yd0009cwjru30bqfrt","_id":"ciu8f0119003kcwjrf19n26xc"},{"post_id":"ciu8f010m001xcwjrtpzhoo8g","tag_id":"ciu8f0118003gcwjr2h64ml4x","_id":"ciu8f0119003lcwjr3p553iay"},{"post_id":"ciu8f010n001zcwjrirw000pm","tag_id":"ciu8f00ym000lcwjrw8loagcb","_id":"ciu8f011a003ncwjrv8hhr8w2"},{"post_id":"ciu8f010n001zcwjrirw000pm","tag_id":"ciu8f0118003jcwjrl2tehwv0","_id":"ciu8f011a003ocwjr9kfiwiba"},{"post_id":"ciu8f010p0022cwjribyugsh7","tag_id":"ciu8f00yo000ncwjra784ncwg","_id":"ciu8f011b003rcwjrxw6jc0qn"},{"post_id":"ciu8f010p0022cwjribyugsh7","tag_id":"ciu8f00ym000lcwjrw8loagcb","_id":"ciu8f011b003scwjrch7ecmyk"},{"post_id":"ciu8f010p0022cwjribyugsh7","tag_id":"ciu8f0119003mcwjrx2t1er6b","_id":"ciu8f011d003ucwjr3drk22k5"},{"post_id":"ciu8f010p0022cwjribyugsh7","tag_id":"ciu8f011a003pcwjrfp3eoqlb","_id":"ciu8f011d003vcwjr7o476npe"},{"post_id":"ciu8f010r0024cwjrmf3uhwh5","tag_id":"ciu8f00ym000lcwjrw8loagcb","_id":"ciu8f011e003wcwjrqm2rldzp"},{"post_id":"ciu8f010r0024cwjrmf3uhwh5","tag_id":"ciu8f011a003qcwjrytwegtfk","_id":"ciu8f011e003xcwjr49sdgqx9"},{"post_id":"ciu8f010t0027cwjrb883kp7k","tag_id":"ciu8f00ym000lcwjrw8loagcb","_id":"ciu8f011e003ycwjrrnn0e3gw"},{"post_id":"ciu8f010t0027cwjrb883kp7k","tag_id":"ciu8f011b003tcwjrevmnm1uq","_id":"ciu8f011e003zcwjrymzl3ffb"},{"post_id":"ciu8f011z004fcwjrxc8fpm6e","tag_id":"ciu8f00yd0009cwjru30bqfrt","_id":"ciu8f0124004jcwjrj16mdbzq"},{"post_id":"ciu8f011l0040cwjr9hg96fbh","tag_id":"ciu8f011p0042cwjrfog1ec1p","_id":"ciu8f0128004rcwjrc9pjzqn0"},{"post_id":"ciu8f011l0040cwjr9hg96fbh","tag_id":"ciu8f010z002dcwjrnrj5btl3","_id":"ciu8f012a004ucwjr5aehvl4d"},{"post_id":"ciu8f011l0040cwjr9hg96fbh","tag_id":"ciu8f011v0048cwjr3eglqj2b","_id":"ciu8f012c004ycwjrhioi3bs8"},{"post_id":"ciu8f011l0040cwjr9hg96fbh","tag_id":"ciu8f011y004dcwjrttzwhu0d","_id":"ciu8f012g0051cwjrexq8qins"},{"post_id":"ciu8f011l0040cwjr9hg96fbh","tag_id":"ciu8f0124004icwjr2mc1jxox","_id":"ciu8f012h0055cwjr5pof7xv2"},{"post_id":"ciu8f011o0041cwjr3qpl508e","tag_id":"ciu8f00yd0009cwjru30bqfrt","_id":"ciu8f012j0058cwjrl53meei9"},{"post_id":"ciu8f011o0041cwjr3qpl508e","tag_id":"ciu8f0127004pcwjrokmv263u","_id":"ciu8f012k005bcwjrjp1xjwds"},{"post_id":"ciu8f012d0050cwjrqhxl7myo","tag_id":"ciu8f00ym000lcwjrw8loagcb","_id":"ciu8f012k005dcwjr15922ok3"},{"post_id":"ciu8f012d0050cwjrqhxl7myo","tag_id":"ciu8f011b003tcwjrevmnm1uq","_id":"ciu8f012m005gcwjrz8m8766f"},{"post_id":"ciu8f012g0053cwjr5owxs7wr","tag_id":"ciu8f00ym000lcwjrw8loagcb","_id":"ciu8f012m005hcwjrwp3hs64b"},{"post_id":"ciu8f012g0053cwjr5owxs7wr","tag_id":"ciu8f0119003mcwjrx2t1er6b","_id":"ciu8f012n005jcwjrhstveg3d"},{"post_id":"ciu8f012g0053cwjr5owxs7wr","tag_id":"ciu8f011a003pcwjrfp3eoqlb","_id":"ciu8f012n005kcwjrop0jy5i8"},{"post_id":"ciu8f012i0057cwjrec0y1jvz","tag_id":"ciu8f00ym000lcwjrw8loagcb","_id":"ciu8f012n005mcwjrigmi5uga"},{"post_id":"ciu8f012i0057cwjrec0y1jvz","tag_id":"ciu8f0119003mcwjrx2t1er6b","_id":"ciu8f012o005ncwjrxb2kfccr"},{"post_id":"ciu8f012i0057cwjrec0y1jvz","tag_id":"ciu8f011a003pcwjrfp3eoqlb","_id":"ciu8f012o005ocwjrio4dherj"},{"post_id":"ciu8f011p0043cwjr9r6jma30","tag_id":"ciu8f00yd0009cwjru30bqfrt","_id":"ciu8f012o005qcwjrr0srlqn4"},{"post_id":"ciu8f011p0043cwjr9r6jma30","tag_id":"ciu8f012c004xcwjryma5cavx","_id":"ciu8f012o005rcwjr721313ua"},{"post_id":"ciu8f011p0043cwjr9r6jma30","tag_id":"ciu8f0127004pcwjrokmv263u","_id":"ciu8f012p005tcwjrsjqgzx4s"},{"post_id":"ciu8f011q0045cwjrpu6zvrk2","tag_id":"ciu8f00yd0009cwjru30bqfrt","_id":"ciu8f012p005ucwjrbqy96gvj"},{"post_id":"ciu8f011q0045cwjrpu6zvrk2","tag_id":"ciu8f0127004pcwjrokmv263u","_id":"ciu8f012p005wcwjr5710sa5f"},{"post_id":"ciu8f011q0045cwjrpu6zvrk2","tag_id":"ciu8f012c004xcwjryma5cavx","_id":"ciu8f012p005xcwjrdv9x2hci"},{"post_id":"ciu8f011u0047cwjrpzxpsmzc","tag_id":"ciu8f00yd0009cwjru30bqfrt","_id":"ciu8f012q005zcwjriztu97tl"},{"post_id":"ciu8f011u0047cwjrpzxpsmzc","tag_id":"ciu8f012m005icwjrgzevz4el","_id":"ciu8f012r0060cwjrbdhwwa7p"},{"post_id":"ciu8f011w004acwjr6ub4qc8x","tag_id":"ciu8f00yd0009cwjru30bqfrt","_id":"ciu8f012r0061cwjrnhd9wjnz"},{"post_id":"ciu8f011w004acwjr6ub4qc8x","tag_id":"ciu8f012n005lcwjrz1xw8i33","_id":"ciu8f012s0063cwjrwviq6jm0"},{"post_id":"ciu8f011x004ccwjr4ridt3fd","tag_id":"ciu8f00yd0009cwjru30bqfrt","_id":"ciu8f012s0064cwjrzdst3etw"},{"post_id":"ciu8f011x004ccwjr4ridt3fd","tag_id":"ciu8f012o005pcwjro1w0czjy","_id":"ciu8f012s0066cwjr9gdhgaxt"},{"post_id":"ciu8f0123004hcwjrq59fwskf","tag_id":"ciu8f00yd0009cwjru30bqfrt","_id":"ciu8f012t0067cwjriic35nlm"},{"post_id":"ciu8f0123004hcwjrq59fwskf","tag_id":"ciu8f012o005scwjr4y6msx3h","_id":"ciu8f012t0069cwjryorky9sc"},{"post_id":"ciu8f0124004lcwjrv7w6hthw","tag_id":"ciu8f00yd0009cwjru30bqfrt","_id":"ciu8f012t006acwjrr0bl5w8e"},{"post_id":"ciu8f0124004lcwjrv7w6hthw","tag_id":"ciu8f012p005vcwjrusm61ths","_id":"ciu8f012u006bcwjrr19bvl1n"},{"post_id":"ciu8f0125004ncwjr6ab49obi","tag_id":"ciu8f00yd0009cwjru30bqfrt","_id":"ciu8f012u006ccwjrtoi415pe"},{"post_id":"ciu8f0125004ncwjr6ab49obi","tag_id":"ciu8f012q005ycwjr2vll2r18","_id":"ciu8f012v006dcwjr65zl6oit"},{"post_id":"ciu8f0127004qcwjrmchk0byc","tag_id":"ciu8f00yd0009cwjru30bqfrt","_id":"ciu8f012v006ecwjr09qjeoxj"},{"post_id":"ciu8f0127004qcwjrmchk0byc","tag_id":"ciu8f012p005vcwjrusm61ths","_id":"ciu8f012v006fcwjr94t9gr8w"},{"post_id":"ciu8f0128004tcwjrvgzw7yq7","tag_id":"ciu8f00ym000lcwjrw8loagcb","_id":"ciu8f012v006gcwjr7glrr41p"},{"post_id":"ciu8f0128004tcwjrvgzw7yq7","tag_id":"ciu8f0119003mcwjrx2t1er6b","_id":"ciu8f012v006hcwjroi5mkvzp"},{"post_id":"ciu8f0128004tcwjrvgzw7yq7","tag_id":"ciu8f012s0065cwjr0kb6kiy7","_id":"ciu8f012v006icwjrqw4hqj0v"},{"post_id":"ciu8f012b004wcwjr33eext83","tag_id":"ciu8f00ym000lcwjrw8loagcb","_id":"ciu8f012w006jcwjrdpmxnb5v"},{"post_id":"ciu8f012b004wcwjr33eext83","tag_id":"ciu8f0119003mcwjrx2t1er6b","_id":"ciu8f012w006kcwjrdixxcwqm"},{"post_id":"ciu8f012b004wcwjr33eext83","tag_id":"ciu8f012s0065cwjr0kb6kiy7","_id":"ciu8f012w006lcwjrbtuqg1v2"},{"post_id":"ciu8f012x006mcwjr959vsxd5","tag_id":"ciu8f00ym000lcwjrw8loagcb","_id":"ciu8f012z006qcwjr08zxf93y"},{"post_id":"ciu8f012x006mcwjr959vsxd5","tag_id":"ciu8f012z006ncwjreggaq13x","_id":"ciu8f012z006rcwjr5aguray6"},{"post_id":"ciu8f012x006mcwjr959vsxd5","tag_id":"ciu8f012z006pcwjrldotw6hx","_id":"ciu8f0130006scwjrogpchxq3"},{"post_id":"ciu8f0131006tcwjr9ugibd3d","tag_id":"ciu8f00yd0009cwjru30bqfrt","_id":"ciu8f0133006vcwjrye1chvf0"},{"post_id":"ciu8f0131006tcwjr9ugibd3d","tag_id":"ciu8f0127004pcwjrokmv263u","_id":"ciu8f0136006ycwjrnp2o2p7r"},{"post_id":"ciu8f0132006ucwjredfahuyn","tag_id":"ciu8f00yd0009cwjru30bqfrt","_id":"ciu8f01380072cwjrnxgzrkga"},{"post_id":"ciu8f0132006ucwjredfahuyn","tag_id":"ciu8f012p005vcwjrusm61ths","_id":"ciu8f013a0075cwjrnlbst6w1"},{"post_id":"ciu8f0133006wcwjrfoxjdh8c","tag_id":"ciu8f00yd0009cwjru30bqfrt","_id":"ciu8f013a0078cwjrbvxs9ano"},{"post_id":"ciu8f0133006wcwjrfoxjdh8c","tag_id":"ciu8f01380070cwjrf6ufnh82","_id":"ciu8f013b007acwjrw5gylmu8"},{"post_id":"ciu8f0136006zcwjrdje9j19s","tag_id":"ciu8f00yd0009cwjru30bqfrt","_id":"ciu8f013b007ccwjrxca09e3w"},{"post_id":"ciu8f0136006zcwjrdje9j19s","tag_id":"ciu8f01380070cwjrf6ufnh82","_id":"ciu8f013b007dcwjrwukh08j8"},{"post_id":"ciu8f01390073cwjr5hzwo6kp","tag_id":"ciu8f00yd0009cwjru30bqfrt","_id":"ciu8f013c007ecwjrtqj94nw7"},{"post_id":"ciu8f01390073cwjr5hzwo6kp","tag_id":"ciu8f013b007bcwjrev6gcqaq","_id":"ciu8f013c007fcwjryminf4t1"}],"Tag":[{"name":"linux","_id":"ciu8f00y30004cwjrlhy15ylf"},{"name":"android","_id":"ciu8f00yd0009cwjru30bqfrt"},{"name":"java","_id":"ciu8f00yh000dcwjrp3tk17vv"},{"name":"python3","_id":"ciu8f00yi000gcwjrczst11rr"},{"name":"python","_id":"ciu8f00ym000lcwjrw8loagcb"},{"name":"faq","_id":"ciu8f00yo000ncwjra784ncwg"},{"name":"quicksort","_id":"ciu8f00zf000ycwjr3axzr433"},{"name":"sort","_id":"ciu8f00zp0013cwjr6hi5k31y"},{"name":"bit manipulation","_id":"ciu8f01000019cwjryjyjwfc6"},{"name":"recursion","_id":"ciu8f0103001ecwjrh04qzk1y"},{"name":"math","_id":"ciu8f0109001mcwjrs9cnf995"},{"name":"array","_id":"ciu8f010i001ucwjrnu0zsyhd"},{"name":"twoPointer","_id":"ciu8f010o0020cwjrrt7xugz0"},{"name":"todo","_id":"ciu8f010s0025cwjrxbjf4cz3"},{"name":"onlinejudge","_id":"ciu8f010z002dcwjrnrj5btl3"},{"name":"binarysearch","_id":"ciu8f0110002hcwjryzrpybse"},{"name":"UI","_id":"ciu8f0111002kcwjr6y6tix1g"},{"name":"RecyclerView","_id":"ciu8f0112002ocwjr6v4pzcdk"},{"name":"android_adb","_id":"ciu8f0112002qcwjr4r24vyxc"},{"name":"android_lifecycle","_id":"ciu8f0113002tcwjrj4jt06xs"},{"name":"android_broadcast","_id":"ciu8f0114002wcwjryqmdo3xn"},{"name":"android_service","_id":"ciu8f0114002zcwjrht6vcovz"},{"name":"android_notification","_id":"ciu8f01150033cwjrp4tp5s3z"},{"name":"android_async","_id":"ciu8f01150036cwjroshkee8f"},{"name":"android_thread","_id":"ciu8f01160039cwjrv9v53761"},{"name":"data_persistence","_id":"ciu8f0116003acwjr8m3p48tz"},{"name":"android_data","_id":"ciu8f0117003dcwjrt4kcl803"},{"name":"volley","_id":"ciu8f0118003gcwjr2h64ml4x"},{"name":"matplotlib","_id":"ciu8f0118003jcwjrl2tehwv0"},{"name":"spider","_id":"ciu8f0119003mcwjrx2t1er6b"},{"name":"bs4","_id":"ciu8f011a003pcwjrfp3eoqlb"},{"name":"numpy","_id":"ciu8f011a003qcwjrytwegtfk"},{"name":"regex","_id":"ciu8f011b003tcwjrevmnm1uq"},{"name":"格式化输出","_id":"ciu8f011p0042cwjrfog1ec1p"},{"name":"io","_id":"ciu8f011v0048cwjr3eglqj2b"},{"name":"线段树","_id":"ciu8f011y004dcwjrttzwhu0d"},{"name":"区间查询","_id":"ciu8f0124004icwjr2mc1jxox"},{"name":"android_UI","_id":"ciu8f0127004pcwjrokmv263u"},{"name":"android_fragment","_id":"ciu8f012c004xcwjryma5cavx"},{"name":"android_layout","_id":"ciu8f012m005icwjrgzevz4el"},{"name":"android_data_persistence","_id":"ciu8f012n005lcwjrz1xw8i33"},{"name":"android_test","_id":"ciu8f012o005pcwjro1w0czjy"},{"name":"android_project","_id":"ciu8f012o005scwjr4y6msx3h"},{"name":"android_control","_id":"ciu8f012p005vcwjrusm61ths"},{"name":"android_bar","_id":"ciu8f012q005ycwjr2vll2r18"},{"name":"pythonspider","_id":"ciu8f012s0065cwjr0kb6kiy7"},{"name":"cookiejar","_id":"ciu8f012z006ncwjreggaq13x"},{"name":"cookies","_id":"ciu8f012z006pcwjrldotw6hx"},{"name":"android_adapter","_id":"ciu8f01380070cwjrf6ufnh82"},{"name":"android_view_pager","_id":"ciu8f013b007bcwjrev6gcqaq"}]}}